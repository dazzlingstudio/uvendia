### YamlMime:ManagedReference
items:
- uid: Uvendia.Domain.Address
  commentId: T:Uvendia.Domain.Address
  id: Address
  parent: Uvendia.Domain
  children:
  - Uvendia.Domain.Address.#ctor
  - Uvendia.Domain.Address.AddresseeName
  - Uvendia.Domain.Address.AddressLine1
  - Uvendia.Domain.Address.AddressLine2
  - Uvendia.Domain.Address.AddressType
  - Uvendia.Domain.Address.AddressTypeId
  - Uvendia.Domain.Address.BirthDate
  - Uvendia.Domain.Address.City
  - Uvendia.Domain.Address.Country
  - Uvendia.Domain.Address.CountryCode
  - Uvendia.Domain.Address.Email
  - Uvendia.Domain.Address.FirstName
  - Uvendia.Domain.Address.Housenumber
  - Uvendia.Domain.Address.HousenumberExtension
  - Uvendia.Domain.Address.LastName
  - Uvendia.Domain.Address.Phone
  - Uvendia.Domain.Address.ToString
  - Uvendia.Domain.Address.Zipcode
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: Address
  fullName: Uvendia.Domain.Address
  type: Class
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Address
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 12
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: 'public class Address : Webshop, IDazzlingEntity'
    content.vb: >-
      Public Class Address
          Inherits Webshop
          Implements IDazzlingEntity
  inheritance:
  - System.Object
  - Uvendia.Domain.Webshop
  implements:
  - Dazzling.Studio.SqlRepository.IDazzlingEntity
  inheritedMembers:
  - Uvendia.Domain.Webshop.PropertyIdChanged
  - Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  - Uvendia.Domain.Webshop.Id
  - Uvendia.Domain.Webshop.CreatedOn
  - Uvendia.Domain.Webshop.ModifiedOn
  - Uvendia.Domain.Webshop.CreatedBy
  - Uvendia.Domain.Webshop.ModifiedBy
  - Uvendia.Domain.Webshop.PublicatedOn
  - Uvendia.Domain.Webshop.Rowversion
  - Uvendia.Domain.Webshop.IsValid
  - Uvendia.Domain.Webshop.IsValid(System.String)
  - Uvendia.Domain.Webshop.GetValidationErrors
  - Uvendia.Domain.Webshop.GetCurrentCultureName
  - Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Uvendia.Domain.Address.#ctor
  commentId: M:Uvendia.Domain.Address.#ctor
  id: '#ctor'
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: Address()
  nameWithType: Address.Address()
  fullName: Uvendia.Domain.Address.Address()
  type: Constructor
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: .ctor
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 14
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public Address()
    content.vb: Public Sub New
  overload: Uvendia.Domain.Address.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.AddresseeName
  commentId: P:Uvendia.Domain.Address.AddresseeName
  id: AddresseeName
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: AddresseeName
  nameWithType: Address.AddresseeName
  fullName: Uvendia.Domain.Address.AddresseeName
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: AddresseeName
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 19
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public string AddresseeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AddresseeName As String
  overload: Uvendia.Domain.Address.AddresseeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.FirstName
  commentId: P:Uvendia.Domain.Address.FirstName
  id: FirstName
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: Address.FirstName
  fullName: Uvendia.Domain.Address.FirstName
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: FirstName
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 22
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [StringLength(512, ErrorMessage = "FirstName is too long")]

      public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(512, ErrorMessage:="FirstName is too long")>

      Public Property FirstName As String
  overload: Uvendia.Domain.Address.FirstName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 512
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: FirstName is too long
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.LastName
  commentId: P:Uvendia.Domain.Address.LastName
  id: LastName
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: Address.LastName
  fullName: Uvendia.Domain.Address.LastName
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: LastName
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 26
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [StringLength(512, ErrorMessage = "FirstName is too long")]

      public string LastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(512, ErrorMessage:="FirstName is too long")>

      Public Property LastName As String
  overload: Uvendia.Domain.Address.LastName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 512
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: FirstName is too long
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.BirthDate
  commentId: P:Uvendia.Domain.Address.BirthDate
  id: BirthDate
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: BirthDate
  nameWithType: Address.BirthDate
  fullName: Uvendia.Domain.Address.BirthDate
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: BirthDate
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 31
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = "{0:dd MMMM yyyy}")]

      public DateTime? BirthDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <DisplayFormat(ApplyFormatInEditMode:=True, DataFormatString:="{0:dd MMMM yyyy}")>

      Public Property BirthDate As Date?
  overload: Uvendia.Domain.Address.BirthDate*
  attributes:
  - type: System.ComponentModel.DataAnnotations.DisplayFormatAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayFormatAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ApplyFormatInEditMode
      type: System.Boolean
      value: true
    - name: DataFormatString
      type: System.String
      value: '{0:dd MMMM yyyy}'
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.Email
  commentId: P:Uvendia.Domain.Address.Email
  id: Email
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: Address.Email
  fullName: Uvendia.Domain.Address.Email
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Email
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 35
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [EmailAddress(ErrorMessage = "E-mailadres is invalid")]

      public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <EmailAddress(ErrorMessage:="E-mailadres is invalid")>

      Public Property Email As String
  overload: Uvendia.Domain.Address.Email*
  attributes:
  - type: System.ComponentModel.DataAnnotations.EmailAddressAttribute
    ctor: System.ComponentModel.DataAnnotations.EmailAddressAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: E-mailadres is invalid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.Phone
  commentId: P:Uvendia.Domain.Address.Phone
  id: Phone
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: Phone
  nameWithType: Address.Phone
  fullName: Uvendia.Domain.Address.Phone
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Phone
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 39
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [Required(ErrorMessage = "Phone number is required")]

      [StringLength(50, ErrorMessage = "Phone is too long")]

      public string Phone { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Phone number is required")>

      <StringLength(50, ErrorMessage:="Phone is too long")>

      Public Property Phone As String
  overload: Uvendia.Domain.Address.Phone*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Phone number is required
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Phone is too long
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.AddressLine1
  commentId: P:Uvendia.Domain.Address.AddressLine1
  id: AddressLine1
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: AddressLine1
  nameWithType: Address.AddressLine1
  fullName: Uvendia.Domain.Address.AddressLine1
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: AddressLine1
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 44
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [Required(ErrorMessage = "Address line 1 is required")]

      [StringLength(500, ErrorMessage = "Address line 1 is too long")]

      public string AddressLine1 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Address line 1 is required")>

      <StringLength(500, ErrorMessage:="Address line 1 is too long")>

      Public Property AddressLine1 As String
  overload: Uvendia.Domain.Address.AddressLine1*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Address line 1 is required
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 500
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Address line 1 is too long
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.AddressLine2
  commentId: P:Uvendia.Domain.Address.AddressLine2
  id: AddressLine2
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: AddressLine2
  nameWithType: Address.AddressLine2
  fullName: Uvendia.Domain.Address.AddressLine2
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: AddressLine2
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 49
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [StringLength(500, ErrorMessage = "Address line 2 is too long")]

      public string AddressLine2 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(500, ErrorMessage:="Address line 2 is too long")>

      Public Property AddressLine2 As String
  overload: Uvendia.Domain.Address.AddressLine2*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 500
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Address line 2 is too long
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.Housenumber
  commentId: P:Uvendia.Domain.Address.Housenumber
  id: Housenumber
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: Housenumber
  nameWithType: Address.Housenumber
  fullName: Uvendia.Domain.Address.Housenumber
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Housenumber
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 53
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public int? Housenumber { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Housenumber As Integer?
  overload: Uvendia.Domain.Address.Housenumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.HousenumberExtension
  commentId: P:Uvendia.Domain.Address.HousenumberExtension
  id: HousenumberExtension
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: HousenumberExtension
  nameWithType: Address.HousenumberExtension
  fullName: Uvendia.Domain.Address.HousenumberExtension
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: HousenumberExtension
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 56
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [StringLength(25, ErrorMessage = "House number extension is too long")]

      public string HousenumberExtension { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(25, ErrorMessage:="House number extension is too long")>

      Public Property HousenumberExtension As String
  overload: Uvendia.Domain.Address.HousenumberExtension*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 25
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: House number extension is too long
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.Zipcode
  commentId: P:Uvendia.Domain.Address.Zipcode
  id: Zipcode
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: Zipcode
  nameWithType: Address.Zipcode
  fullName: Uvendia.Domain.Address.Zipcode
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Zipcode
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 60
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [StringLength(50, ErrorMessage = "Zip code is too long")]

      public string Zipcode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(50, ErrorMessage:="Zip code is too long")>

      Public Property Zipcode As String
  overload: Uvendia.Domain.Address.Zipcode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Zip code is too long
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.City
  commentId: P:Uvendia.Domain.Address.City
  id: City
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: City
  nameWithType: Address.City
  fullName: Uvendia.Domain.Address.City
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: City
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 64
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [Required(ErrorMessage = "City is required")]

      [StringLength(255, ErrorMessage = "City is too long")]

      public string City { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="City is required")>

      <StringLength(255, ErrorMessage:="City is too long")>

      Public Property City As String
  overload: Uvendia.Domain.Address.City*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: City is required
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 255
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: City is too long
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.CountryCode
  commentId: P:Uvendia.Domain.Address.CountryCode
  id: CountryCode
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: CountryCode
  nameWithType: Address.CountryCode
  fullName: Uvendia.Domain.Address.CountryCode
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: CountryCode
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 69
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [Required(ErrorMessage = "Country is required")]

      public string CountryCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Country is required")>

      Public Property CountryCode As String
  overload: Uvendia.Domain.Address.CountryCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Country is required
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.Country
  commentId: P:Uvendia.Domain.Address.Country
  id: Country
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: Address.Country
  fullName: Uvendia.Domain.Address.Country
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Country
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 73
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public Country Country { get; }
    parameters: []
    return:
      type: ISO3166.Country
    content.vb: Public ReadOnly Property Country As Country
  overload: Uvendia.Domain.Address.Country*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Uvendia.Domain.Address.AddressType
  commentId: P:Uvendia.Domain.Address.AddressType
  id: AddressType
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: AddressType
  nameWithType: Address.AddressType
  fullName: Uvendia.Domain.Address.AddressType
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: AddressType
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 75
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public AddressType AddressType { get; }
    parameters: []
    return:
      type: Uvendia.Domain.Enums.AddressType
    content.vb: Public ReadOnly Property AddressType As AddressType
  overload: Uvendia.Domain.Address.AddressType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Uvendia.Domain.Address.AddressTypeId
  commentId: P:Uvendia.Domain.Address.AddressTypeId
  id: AddressTypeId
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: AddressTypeId
  nameWithType: Address.AddressTypeId
  fullName: Uvendia.Domain.Address.AddressTypeId
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: AddressTypeId
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 77
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public short AddressTypeId { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Property AddressTypeId As Short
  overload: Uvendia.Domain.Address.AddressTypeId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Address.ToString
  commentId: M:Uvendia.Domain.Address.ToString
  id: ToString
  parent: Uvendia.Domain.Address
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Address.ToString()
  fullName: Uvendia.Domain.Address.ToString()
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Address.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: ToString
    path: ../../dazzling.studio/Uvendia.Domain/Address.cs
    startLine: 79
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Uvendia.Domain.Address.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Uvendia.Domain
  commentId: N:Uvendia.Domain
  name: Uvendia.Domain
  nameWithType: Uvendia.Domain
  fullName: Uvendia.Domain
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Uvendia.Domain.Webshop
  commentId: T:Uvendia.Domain.Webshop
  parent: Uvendia.Domain
  name: Webshop
  nameWithType: Webshop
  fullName: Uvendia.Domain.Webshop
- uid: Dazzling.Studio.SqlRepository.IDazzlingEntity
  commentId: T:Dazzling.Studio.SqlRepository.IDazzlingEntity
  parent: Dazzling.Studio.SqlRepository
  name: IDazzlingEntity
  nameWithType: IDazzlingEntity
  fullName: Dazzling.Studio.SqlRepository.IDazzlingEntity
- uid: Uvendia.Domain.Webshop.PropertyIdChanged
  commentId: E:Uvendia.Domain.Webshop.PropertyIdChanged
  parent: Uvendia.Domain.Webshop
  name: PropertyIdChanged
  nameWithType: Webshop.PropertyIdChanged
  fullName: Uvendia.Domain.Webshop.PropertyIdChanged
- uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  commentId: M:Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: OnPropertyIdChanged(Object, EventArgs)
  nameWithType: Webshop.OnPropertyIdChanged(Object, EventArgs)
  fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object, System.EventArgs)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
    name: OnPropertyIdChanged
    nameWithType: Webshop.OnPropertyIdChanged
    fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
    name: OnPropertyIdChanged
    nameWithType: Webshop.OnPropertyIdChanged
    fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.Id
  commentId: P:Uvendia.Domain.Webshop.Id
  parent: Uvendia.Domain.Webshop
  name: Id
  nameWithType: Webshop.Id
  fullName: Uvendia.Domain.Webshop.Id
- uid: Uvendia.Domain.Webshop.CreatedOn
  commentId: P:Uvendia.Domain.Webshop.CreatedOn
  parent: Uvendia.Domain.Webshop
  name: CreatedOn
  nameWithType: Webshop.CreatedOn
  fullName: Uvendia.Domain.Webshop.CreatedOn
- uid: Uvendia.Domain.Webshop.ModifiedOn
  commentId: P:Uvendia.Domain.Webshop.ModifiedOn
  parent: Uvendia.Domain.Webshop
  name: ModifiedOn
  nameWithType: Webshop.ModifiedOn
  fullName: Uvendia.Domain.Webshop.ModifiedOn
- uid: Uvendia.Domain.Webshop.CreatedBy
  commentId: P:Uvendia.Domain.Webshop.CreatedBy
  parent: Uvendia.Domain.Webshop
  name: CreatedBy
  nameWithType: Webshop.CreatedBy
  fullName: Uvendia.Domain.Webshop.CreatedBy
- uid: Uvendia.Domain.Webshop.ModifiedBy
  commentId: P:Uvendia.Domain.Webshop.ModifiedBy
  parent: Uvendia.Domain.Webshop
  name: ModifiedBy
  nameWithType: Webshop.ModifiedBy
  fullName: Uvendia.Domain.Webshop.ModifiedBy
- uid: Uvendia.Domain.Webshop.PublicatedOn
  commentId: P:Uvendia.Domain.Webshop.PublicatedOn
  parent: Uvendia.Domain.Webshop
  name: PublicatedOn
  nameWithType: Webshop.PublicatedOn
  fullName: Uvendia.Domain.Webshop.PublicatedOn
- uid: Uvendia.Domain.Webshop.Rowversion
  commentId: P:Uvendia.Domain.Webshop.Rowversion
  parent: Uvendia.Domain.Webshop
  name: Rowversion
  nameWithType: Webshop.Rowversion
  fullName: Uvendia.Domain.Webshop.Rowversion
- uid: Uvendia.Domain.Webshop.IsValid
  commentId: M:Uvendia.Domain.Webshop.IsValid
  parent: Uvendia.Domain.Webshop
  name: IsValid()
  nameWithType: Webshop.IsValid()
  fullName: Uvendia.Domain.Webshop.IsValid()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.IsValid
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.IsValid
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.IsValid(System.String)
  commentId: M:Uvendia.Domain.Webshop.IsValid(System.String)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: IsValid(String)
  nameWithType: Webshop.IsValid(String)
  fullName: Uvendia.Domain.Webshop.IsValid(System.String)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.IsValid(System.String)
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.IsValid(System.String)
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetValidationErrors
  commentId: M:Uvendia.Domain.Webshop.GetValidationErrors
  parent: Uvendia.Domain.Webshop
  name: GetValidationErrors()
  nameWithType: Webshop.GetValidationErrors()
  fullName: Uvendia.Domain.Webshop.GetValidationErrors()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetValidationErrors
    name: GetValidationErrors
    nameWithType: Webshop.GetValidationErrors
    fullName: Uvendia.Domain.Webshop.GetValidationErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetValidationErrors
    name: GetValidationErrors
    nameWithType: Webshop.GetValidationErrors
    fullName: Uvendia.Domain.Webshop.GetValidationErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetCurrentCultureName
  commentId: M:Uvendia.Domain.Webshop.GetCurrentCultureName
  parent: Uvendia.Domain.Webshop
  name: GetCurrentCultureName()
  nameWithType: Webshop.GetCurrentCultureName()
  fullName: Uvendia.Domain.Webshop.GetCurrentCultureName()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureName
    name: GetCurrentCultureName
    nameWithType: Webshop.GetCurrentCultureName
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureName
    name: GetCurrentCultureName
    nameWithType: Webshop.GetCurrentCultureName
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  commentId: M:Uvendia.Domain.Webshop.GetCurrentCultureInfo
  parent: Uvendia.Domain.Webshop
  name: GetCurrentCultureInfo()
  nameWithType: Webshop.GetCurrentCultureInfo()
  fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
    name: GetCurrentCultureInfo
    nameWithType: Webshop.GetCurrentCultureInfo
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
    name: GetCurrentCultureInfo
    nameWithType: Webshop.GetCurrentCultureInfo
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  commentId: M:Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: GetTranslation(IList<Translation>, String)
  nameWithType: Webshop.GetTranslation(IList<Translation>, String)
  fullName: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList<Uvendia.Domain.Translation>, System.String)
  nameWithType.vb: Webshop.GetTranslation(IList(Of Translation), String)
  fullName.vb: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList(Of Uvendia.Domain.Translation), System.String)
  name.vb: GetTranslation(IList(Of Translation), String)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
    name: GetTranslation
    nameWithType: Webshop.GetTranslation
    fullName: Uvendia.Domain.Webshop.GetTranslation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
    name: GetTranslation
    nameWithType: Webshop.GetTranslation
    fullName: Uvendia.Domain.Webshop.GetTranslation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dazzling.Studio.SqlRepository
  commentId: N:Dazzling.Studio.SqlRepository
  name: Dazzling.Studio.SqlRepository
  nameWithType: Dazzling.Studio.SqlRepository
  fullName: Dazzling.Studio.SqlRepository
- uid: Uvendia.Domain.Address.#ctor*
  commentId: Overload:Uvendia.Domain.Address.#ctor
  name: Address
  nameWithType: Address.Address
  fullName: Uvendia.Domain.Address.Address
- uid: Uvendia.Domain.Address.AddresseeName*
  commentId: Overload:Uvendia.Domain.Address.AddresseeName
  name: AddresseeName
  nameWithType: Address.AddresseeName
  fullName: Uvendia.Domain.Address.AddresseeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Uvendia.Domain.Address.FirstName*
  commentId: Overload:Uvendia.Domain.Address.FirstName
  name: FirstName
  nameWithType: Address.FirstName
  fullName: Uvendia.Domain.Address.FirstName
- uid: Uvendia.Domain.Address.LastName*
  commentId: Overload:Uvendia.Domain.Address.LastName
  name: LastName
  nameWithType: Address.LastName
  fullName: Uvendia.Domain.Address.LastName
- uid: Uvendia.Domain.Address.BirthDate*
  commentId: Overload:Uvendia.Domain.Address.BirthDate
  name: BirthDate
  nameWithType: Address.BirthDate
  fullName: Uvendia.Domain.Address.BirthDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Address.Email*
  commentId: Overload:Uvendia.Domain.Address.Email
  name: Email
  nameWithType: Address.Email
  fullName: Uvendia.Domain.Address.Email
- uid: Uvendia.Domain.Address.Phone*
  commentId: Overload:Uvendia.Domain.Address.Phone
  name: Phone
  nameWithType: Address.Phone
  fullName: Uvendia.Domain.Address.Phone
- uid: Uvendia.Domain.Address.AddressLine1*
  commentId: Overload:Uvendia.Domain.Address.AddressLine1
  name: AddressLine1
  nameWithType: Address.AddressLine1
  fullName: Uvendia.Domain.Address.AddressLine1
- uid: Uvendia.Domain.Address.AddressLine2*
  commentId: Overload:Uvendia.Domain.Address.AddressLine2
  name: AddressLine2
  nameWithType: Address.AddressLine2
  fullName: Uvendia.Domain.Address.AddressLine2
- uid: Uvendia.Domain.Address.Housenumber*
  commentId: Overload:Uvendia.Domain.Address.Housenumber
  name: Housenumber
  nameWithType: Address.Housenumber
  fullName: Uvendia.Domain.Address.Housenumber
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Address.HousenumberExtension*
  commentId: Overload:Uvendia.Domain.Address.HousenumberExtension
  name: HousenumberExtension
  nameWithType: Address.HousenumberExtension
  fullName: Uvendia.Domain.Address.HousenumberExtension
- uid: Uvendia.Domain.Address.Zipcode*
  commentId: Overload:Uvendia.Domain.Address.Zipcode
  name: Zipcode
  nameWithType: Address.Zipcode
  fullName: Uvendia.Domain.Address.Zipcode
- uid: Uvendia.Domain.Address.City*
  commentId: Overload:Uvendia.Domain.Address.City
  name: City
  nameWithType: Address.City
  fullName: Uvendia.Domain.Address.City
- uid: Uvendia.Domain.Address.CountryCode*
  commentId: Overload:Uvendia.Domain.Address.CountryCode
  name: CountryCode
  nameWithType: Address.CountryCode
  fullName: Uvendia.Domain.Address.CountryCode
- uid: Uvendia.Domain.Address.Country*
  commentId: Overload:Uvendia.Domain.Address.Country
  name: Country
  nameWithType: Address.Country
  fullName: Uvendia.Domain.Address.Country
- uid: ISO3166.Country
  commentId: T:ISO3166.Country
  parent: ISO3166
  isExternal: true
  name: Country
  nameWithType: Country
  fullName: ISO3166.Country
- uid: ISO3166
  commentId: N:ISO3166
  isExternal: true
  name: ISO3166
  nameWithType: ISO3166
  fullName: ISO3166
- uid: Uvendia.Domain.Address.AddressType*
  commentId: Overload:Uvendia.Domain.Address.AddressType
  name: AddressType
  nameWithType: Address.AddressType
  fullName: Uvendia.Domain.Address.AddressType
- uid: Uvendia.Domain.Enums.AddressType
  commentId: T:Uvendia.Domain.Enums.AddressType
  parent: Uvendia.Domain.Enums
  name: AddressType
  nameWithType: AddressType
  fullName: Uvendia.Domain.Enums.AddressType
- uid: Uvendia.Domain.Enums
  commentId: N:Uvendia.Domain.Enums
  name: Uvendia.Domain.Enums
  nameWithType: Uvendia.Domain.Enums
  fullName: Uvendia.Domain.Enums
- uid: Uvendia.Domain.Address.AddressTypeId*
  commentId: Overload:Uvendia.Domain.Address.AddressTypeId
  name: AddressTypeId
  nameWithType: Address.AddressTypeId
  fullName: Uvendia.Domain.Address.AddressTypeId
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Address.ToString*
  commentId: Overload:Uvendia.Domain.Address.ToString
  name: ToString
  nameWithType: Address.ToString
  fullName: Uvendia.Domain.Address.ToString
