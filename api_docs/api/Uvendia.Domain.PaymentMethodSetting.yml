### YamlMime:ManagedReference
items:
- uid: Uvendia.Domain.PaymentMethodSetting
  commentId: T:Uvendia.Domain.PaymentMethodSetting
  id: PaymentMethodSetting
  parent: Uvendia.Domain
  children:
  - Uvendia.Domain.PaymentMethodSetting.CheckKeyNullOrEmpty(System.String)
  - Uvendia.Domain.PaymentMethodSetting.Key
  - Uvendia.Domain.PaymentMethodSetting.Value
  langs:
  - csharp
  - vb
  name: PaymentMethodSetting
  nameWithType: PaymentMethodSetting
  fullName: Uvendia.Domain.PaymentMethodSetting
  type: Class
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: PaymentMethodSetting
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 168
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [Serializable]

      public class PaymentMethodSetting
    content.vb: >-
      <Serializable>

      Public Class PaymentMethodSetting
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Uvendia.Domain.PaymentMethodSetting.Key
  commentId: P:Uvendia.Domain.PaymentMethodSetting.Key
  id: Key
  parent: Uvendia.Domain.PaymentMethodSetting
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: PaymentMethodSetting.Key
  fullName: Uvendia.Domain.PaymentMethodSetting.Key
  type: Property
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Key
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 171
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [CustomValidate(typeof(PaymentMethodSetting), "CheckKeyNullOrEmpty", ErrorMessage = "Payment method setting's key is required")]

      public string Key { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <CustomValidate(GetType(PaymentMethodSetting), "CheckKeyNullOrEmpty", ErrorMessage:="Payment method setting's key is required")>

      Public Property Key As String
  overload: Uvendia.Domain.PaymentMethodSetting.Key*
  attributes:
  - type: Dazzling.Studio.Utils.Attributes.Validations.CustomValidateAttribute
    ctor: Dazzling.Studio.Utils.Attributes.Validations.CustomValidateAttribute.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: Uvendia.Domain.PaymentMethodSetting
    - type: System.String
      value: CheckKeyNullOrEmpty
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Payment method setting's key is required
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.PaymentMethodSetting.Value
  commentId: P:Uvendia.Domain.PaymentMethodSetting.Value
  id: Value
  parent: Uvendia.Domain.PaymentMethodSetting
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: PaymentMethodSetting.Value
  fullName: Uvendia.Domain.PaymentMethodSetting.Value
  type: Property
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Value
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 173
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: Uvendia.Domain.PaymentMethodSetting.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.PaymentMethodSetting.CheckKeyNullOrEmpty(System.String)
  commentId: M:Uvendia.Domain.PaymentMethodSetting.CheckKeyNullOrEmpty(System.String)
  id: CheckKeyNullOrEmpty(System.String)
  parent: Uvendia.Domain.PaymentMethodSetting
  langs:
  - csharp
  - vb
  name: CheckKeyNullOrEmpty(String)
  nameWithType: PaymentMethodSetting.CheckKeyNullOrEmpty(String)
  fullName: Uvendia.Domain.PaymentMethodSetting.CheckKeyNullOrEmpty(System.String)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: CheckKeyNullOrEmpty
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 175
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public bool CheckKeyNullOrEmpty(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function CheckKeyNullOrEmpty(key As String) As Boolean
  overload: Uvendia.Domain.PaymentMethodSetting.CheckKeyNullOrEmpty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Uvendia.Domain
  commentId: N:Uvendia.Domain
  name: Uvendia.Domain
  nameWithType: Uvendia.Domain
  fullName: Uvendia.Domain
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Uvendia.Domain.PaymentMethodSetting.Key*
  commentId: Overload:Uvendia.Domain.PaymentMethodSetting.Key
  name: Key
  nameWithType: PaymentMethodSetting.Key
  fullName: Uvendia.Domain.PaymentMethodSetting.Key
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Uvendia.Domain.PaymentMethodSetting.Value*
  commentId: Overload:Uvendia.Domain.PaymentMethodSetting.Value
  name: Value
  nameWithType: PaymentMethodSetting.Value
  fullName: Uvendia.Domain.PaymentMethodSetting.Value
- uid: Uvendia.Domain.PaymentMethodSetting.CheckKeyNullOrEmpty*
  commentId: Overload:Uvendia.Domain.PaymentMethodSetting.CheckKeyNullOrEmpty
  name: CheckKeyNullOrEmpty
  nameWithType: PaymentMethodSetting.CheckKeyNullOrEmpty
  fullName: Uvendia.Domain.PaymentMethodSetting.CheckKeyNullOrEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
