### YamlMime:ManagedReference
items:
- uid: Uvendia.Domain.TicketSale
  commentId: T:Uvendia.Domain.TicketSale
  id: TicketSale
  parent: Uvendia.Domain
  children:
  - Uvendia.Domain.TicketSale.#ctor
  - Uvendia.Domain.TicketSale.AvailabilityEndDate
  - Uvendia.Domain.TicketSale.CheckTicketPriceNull(Uvendia.Domain.Price)
  - Uvendia.Domain.TicketSale.Description
  - Uvendia.Domain.TicketSale.Enabled
  - Uvendia.Domain.TicketSale.Event
  - Uvendia.Domain.TicketSale.EventId
  - Uvendia.Domain.TicketSale.GetMaxTicketsForSale(System.Int32,System.Nullable{System.Int32})
  - Uvendia.Domain.TicketSale.GetTotalStillAvailable(System.Nullable{System.Int32})
  - Uvendia.Domain.TicketSale.HasTicketPrice
  - Uvendia.Domain.TicketSale.QuantityAvailable
  - Uvendia.Domain.TicketSale.TicketPrice
  - Uvendia.Domain.TicketSale.TicketPriceId
  - Uvendia.Domain.TicketSale.TicketType
  - Uvendia.Domain.TicketSale.TicketTypeId
  - Uvendia.Domain.TicketSale.ToString
  langs:
  - csharp
  - vb
  name: TicketSale
  nameWithType: TicketSale
  fullName: Uvendia.Domain.TicketSale
  type: Class
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: TicketSale
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 14
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: 'public class TicketSale : Webshop, IDazzlingEntity'
    content.vb: >-
      Public Class TicketSale
          Inherits Webshop
          Implements IDazzlingEntity
  inheritance:
  - System.Object
  - Uvendia.Domain.Webshop
  implements:
  - Dazzling.Studio.SqlRepository.IDazzlingEntity
  inheritedMembers:
  - Uvendia.Domain.Webshop.PropertyIdChanged
  - Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  - Uvendia.Domain.Webshop.Id
  - Uvendia.Domain.Webshop.CreatedOn
  - Uvendia.Domain.Webshop.ModifiedOn
  - Uvendia.Domain.Webshop.CreatedBy
  - Uvendia.Domain.Webshop.ModifiedBy
  - Uvendia.Domain.Webshop.PublicatedOn
  - Uvendia.Domain.Webshop.Rowversion
  - Uvendia.Domain.Webshop.IsValid
  - Uvendia.Domain.Webshop.IsValid(System.String)
  - Uvendia.Domain.Webshop.GetValidationErrors
  - Uvendia.Domain.Webshop.GetCurrentCultureName
  - Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Uvendia.Domain.TicketSale.#ctor
  commentId: M:Uvendia.Domain.TicketSale.#ctor
  id: '#ctor'
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: TicketSale()
  nameWithType: TicketSale.TicketSale()
  fullName: Uvendia.Domain.TicketSale.TicketSale()
  type: Constructor
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: .ctor
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 16
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public TicketSale()
    content.vb: Public Sub New
  overload: Uvendia.Domain.TicketSale.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.TicketSale.Event
  commentId: P:Uvendia.Domain.TicketSale.Event
  id: Event
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: TicketSale.Event
  fullName: Uvendia.Domain.TicketSale.Event
  type: Property
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Event
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 21
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public Proxy<Event> Event { get; }
    parameters: []
    return:
      type: Uvendia.Domain.Proxies.Proxy{Uvendia.Domain.Event}
    content.vb: Public ReadOnly Property Event As Proxy(Of  Event)
  overload: Uvendia.Domain.TicketSale.Event*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Uvendia.Domain.TicketSale.EventId
  commentId: P:Uvendia.Domain.TicketSale.EventId
  id: EventId
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: EventId
  nameWithType: TicketSale.EventId
  fullName: Uvendia.Domain.TicketSale.EventId
  type: Property
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: EventId
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 33
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public long EventId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property EventId As Long
  overload: Uvendia.Domain.TicketSale.EventId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.TicketSale.QuantityAvailable
  commentId: P:Uvendia.Domain.TicketSale.QuantityAvailable
  id: QuantityAvailable
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: QuantityAvailable
  nameWithType: TicketSale.QuantityAvailable
  fullName: Uvendia.Domain.TicketSale.QuantityAvailable
  type: Property
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: QuantityAvailable
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 35
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public int? QuantityAvailable { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property QuantityAvailable As Integer?
  overload: Uvendia.Domain.TicketSale.QuantityAvailable*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.TicketSale.TicketType
  commentId: P:Uvendia.Domain.TicketSale.TicketType
  id: TicketType
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: TicketType
  nameWithType: TicketSale.TicketType
  fullName: Uvendia.Domain.TicketSale.TicketType
  type: Property
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: TicketType
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 40
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public Proxy<TicketType> TicketType { get; }
    parameters: []
    return:
      type: Uvendia.Domain.Proxies.Proxy{Uvendia.Domain.Settings.TicketType}
    content.vb: Public ReadOnly Property TicketType As Proxy(Of TicketType)
  overload: Uvendia.Domain.TicketSale.TicketType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Uvendia.Domain.TicketSale.TicketTypeId
  commentId: P:Uvendia.Domain.TicketSale.TicketTypeId
  id: TicketTypeId
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: TicketTypeId
  nameWithType: TicketSale.TicketTypeId
  fullName: Uvendia.Domain.TicketSale.TicketTypeId
  type: Property
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: TicketTypeId
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 53
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public long TicketTypeId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property TicketTypeId As Long
  overload: Uvendia.Domain.TicketSale.TicketTypeId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.TicketSale.TicketPrice
  commentId: P:Uvendia.Domain.TicketSale.TicketPrice
  id: TicketPrice
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: TicketPrice
  nameWithType: TicketSale.TicketPrice
  fullName: Uvendia.Domain.TicketSale.TicketPrice
  type: Property
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: TicketPrice
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 56
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [CustomValidate(typeof(TicketSale), "CheckTicketPriceNull", ErrorMessage = "Ticket price is required")]

      public Price TicketPrice { get; set; }
    parameters: []
    return:
      type: Uvendia.Domain.Price
    content.vb: >-
      <CustomValidate(GetType(TicketSale), "CheckTicketPriceNull", ErrorMessage:="Ticket price is required")>

      Public Property TicketPrice As Price
  overload: Uvendia.Domain.TicketSale.TicketPrice*
  attributes:
  - type: Dazzling.Studio.Utils.Attributes.Validations.CustomValidateAttribute
    ctor: Dazzling.Studio.Utils.Attributes.Validations.CustomValidateAttribute.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: Uvendia.Domain.TicketSale
    - type: System.String
      value: CheckTicketPriceNull
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Ticket price is required
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.TicketSale.TicketPriceId
  commentId: P:Uvendia.Domain.TicketSale.TicketPriceId
  id: TicketPriceId
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: TicketPriceId
  nameWithType: TicketSale.TicketPriceId
  fullName: Uvendia.Domain.TicketSale.TicketPriceId
  type: Property
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: TicketPriceId
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 59
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public long TicketPriceId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property TicketPriceId As Long
  overload: Uvendia.Domain.TicketSale.TicketPriceId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.TicketSale.Description
  commentId: P:Uvendia.Domain.TicketSale.Description
  id: Description
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: TicketSale.Description
  fullName: Uvendia.Domain.TicketSale.Description
  type: Property
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Description
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 61
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [StringLength(30, ErrorMessage = "Description is too long. Max. 30 characters")]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(30, ErrorMessage:="Description is too long. Max. 30 characters")>

      Public Property Description As String
  overload: Uvendia.Domain.TicketSale.Description*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 30
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Description is too long. Max. 30 characters
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.TicketSale.AvailabilityEndDate
  commentId: P:Uvendia.Domain.TicketSale.AvailabilityEndDate
  id: AvailabilityEndDate
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: AvailabilityEndDate
  nameWithType: TicketSale.AvailabilityEndDate
  fullName: Uvendia.Domain.TicketSale.AvailabilityEndDate
  type: Property
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: AvailabilityEndDate
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 65
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public DateTime? AvailabilityEndDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property AvailabilityEndDate As Date?
  overload: Uvendia.Domain.TicketSale.AvailabilityEndDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.TicketSale.Enabled
  commentId: P:Uvendia.Domain.TicketSale.Enabled
  id: Enabled
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: TicketSale.Enabled
  fullName: Uvendia.Domain.TicketSale.Enabled
  type: Property
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Enabled
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 68
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: Uvendia.Domain.TicketSale.Enabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.TicketSale.GetTotalStillAvailable(System.Nullable{System.Int32})
  commentId: M:Uvendia.Domain.TicketSale.GetTotalStillAvailable(System.Nullable{System.Int32})
  id: GetTotalStillAvailable(System.Nullable{System.Int32})
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: GetTotalStillAvailable(Nullable<Int32>)
  nameWithType: TicketSale.GetTotalStillAvailable(Nullable<Int32>)
  fullName: Uvendia.Domain.TicketSale.GetTotalStillAvailable(System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: GetTotalStillAvailable
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 76
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public ProxyTotalTicketAvailable GetTotalStillAvailable(int? minutesOld)
    parameters:
    - id: minutesOld
      type: System.Nullable{System.Int32}
    return:
      type: Uvendia.Domain.Proxies.ProxyTotalTicketAvailable
    content.vb: Public Function GetTotalStillAvailable(minutesOld As Integer?) As ProxyTotalTicketAvailable
  overload: Uvendia.Domain.TicketSale.GetTotalStillAvailable*
  nameWithType.vb: TicketSale.GetTotalStillAvailable(Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Uvendia.Domain.TicketSale.GetTotalStillAvailable(System.Nullable(Of System.Int32))
  name.vb: GetTotalStillAvailable(Nullable(Of Int32))
- uid: Uvendia.Domain.TicketSale.GetMaxTicketsForSale(System.Int32,System.Nullable{System.Int32})
  commentId: M:Uvendia.Domain.TicketSale.GetMaxTicketsForSale(System.Int32,System.Nullable{System.Int32})
  id: GetMaxTicketsForSale(System.Int32,System.Nullable{System.Int32})
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: GetMaxTicketsForSale(Int32, Nullable<Int32>)
  nameWithType: TicketSale.GetMaxTicketsForSale(Int32, Nullable<Int32>)
  fullName: Uvendia.Domain.TicketSale.GetMaxTicketsForSale(System.Int32, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: GetMaxTicketsForSale
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 91
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nGets the maximum total tickets for sale.\n"
  example: []
  syntax:
    content: public int GetMaxTicketsForSale(int max = 10, int? minutesOld)
    parameters:
    - id: max
      type: System.Int32
      description: The maximum to display up front. Only if the &apos;total availability&apos; is greater than the given maximum.
    - id: minutesOld
      type: System.Nullable{System.Int32}
      description: The minutes old.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function GetMaxTicketsForSale(max As Integer = 10, minutesOld As Integer?) As Integer
  overload: Uvendia.Domain.TicketSale.GetMaxTicketsForSale*
  nameWithType.vb: TicketSale.GetMaxTicketsForSale(Int32, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Uvendia.Domain.TicketSale.GetMaxTicketsForSale(System.Int32, System.Nullable(Of System.Int32))
  name.vb: GetMaxTicketsForSale(Int32, Nullable(Of Int32))
- uid: Uvendia.Domain.TicketSale.HasTicketPrice
  commentId: M:Uvendia.Domain.TicketSale.HasTicketPrice
  id: HasTicketPrice
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: HasTicketPrice()
  nameWithType: TicketSale.HasTicketPrice()
  fullName: Uvendia.Domain.TicketSale.HasTicketPrice()
  type: Method
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: HasTicketPrice
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 97
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public bool HasTicketPrice()
    return:
      type: System.Boolean
    content.vb: Public Function HasTicketPrice As Boolean
  overload: Uvendia.Domain.TicketSale.HasTicketPrice*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.TicketSale.CheckTicketPriceNull(Uvendia.Domain.Price)
  commentId: M:Uvendia.Domain.TicketSale.CheckTicketPriceNull(Uvendia.Domain.Price)
  id: CheckTicketPriceNull(Uvendia.Domain.Price)
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: CheckTicketPriceNull(Price)
  nameWithType: TicketSale.CheckTicketPriceNull(Price)
  fullName: Uvendia.Domain.TicketSale.CheckTicketPriceNull(Uvendia.Domain.Price)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: CheckTicketPriceNull
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 103
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public bool CheckTicketPriceNull(Price ticketPrice)
    parameters:
    - id: ticketPrice
      type: Uvendia.Domain.Price
    return:
      type: System.Boolean
    content.vb: Public Function CheckTicketPriceNull(ticketPrice As Price) As Boolean
  overload: Uvendia.Domain.TicketSale.CheckTicketPriceNull*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.TicketSale.ToString
  commentId: M:Uvendia.Domain.TicketSale.ToString
  id: ToString
  parent: Uvendia.Domain.TicketSale
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TicketSale.ToString()
  fullName: Uvendia.Domain.TicketSale.ToString()
  type: Method
  source:
    remote:
      path: Uvendia.Domain/TicketSale.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: ToString
    path: ../../dazzling.studio/Uvendia.Domain/TicketSale.cs
    startLine: 109
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Uvendia.Domain.TicketSale.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Uvendia.Domain
  commentId: N:Uvendia.Domain
  name: Uvendia.Domain
  nameWithType: Uvendia.Domain
  fullName: Uvendia.Domain
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Uvendia.Domain.Webshop
  commentId: T:Uvendia.Domain.Webshop
  parent: Uvendia.Domain
  name: Webshop
  nameWithType: Webshop
  fullName: Uvendia.Domain.Webshop
- uid: Dazzling.Studio.SqlRepository.IDazzlingEntity
  commentId: T:Dazzling.Studio.SqlRepository.IDazzlingEntity
  parent: Dazzling.Studio.SqlRepository
  name: IDazzlingEntity
  nameWithType: IDazzlingEntity
  fullName: Dazzling.Studio.SqlRepository.IDazzlingEntity
- uid: Uvendia.Domain.Webshop.PropertyIdChanged
  commentId: E:Uvendia.Domain.Webshop.PropertyIdChanged
  parent: Uvendia.Domain.Webshop
  name: PropertyIdChanged
  nameWithType: Webshop.PropertyIdChanged
  fullName: Uvendia.Domain.Webshop.PropertyIdChanged
- uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  commentId: M:Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: OnPropertyIdChanged(Object, EventArgs)
  nameWithType: Webshop.OnPropertyIdChanged(Object, EventArgs)
  fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object, System.EventArgs)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
    name: OnPropertyIdChanged
    nameWithType: Webshop.OnPropertyIdChanged
    fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
    name: OnPropertyIdChanged
    nameWithType: Webshop.OnPropertyIdChanged
    fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.Id
  commentId: P:Uvendia.Domain.Webshop.Id
  parent: Uvendia.Domain.Webshop
  name: Id
  nameWithType: Webshop.Id
  fullName: Uvendia.Domain.Webshop.Id
- uid: Uvendia.Domain.Webshop.CreatedOn
  commentId: P:Uvendia.Domain.Webshop.CreatedOn
  parent: Uvendia.Domain.Webshop
  name: CreatedOn
  nameWithType: Webshop.CreatedOn
  fullName: Uvendia.Domain.Webshop.CreatedOn
- uid: Uvendia.Domain.Webshop.ModifiedOn
  commentId: P:Uvendia.Domain.Webshop.ModifiedOn
  parent: Uvendia.Domain.Webshop
  name: ModifiedOn
  nameWithType: Webshop.ModifiedOn
  fullName: Uvendia.Domain.Webshop.ModifiedOn
- uid: Uvendia.Domain.Webshop.CreatedBy
  commentId: P:Uvendia.Domain.Webshop.CreatedBy
  parent: Uvendia.Domain.Webshop
  name: CreatedBy
  nameWithType: Webshop.CreatedBy
  fullName: Uvendia.Domain.Webshop.CreatedBy
- uid: Uvendia.Domain.Webshop.ModifiedBy
  commentId: P:Uvendia.Domain.Webshop.ModifiedBy
  parent: Uvendia.Domain.Webshop
  name: ModifiedBy
  nameWithType: Webshop.ModifiedBy
  fullName: Uvendia.Domain.Webshop.ModifiedBy
- uid: Uvendia.Domain.Webshop.PublicatedOn
  commentId: P:Uvendia.Domain.Webshop.PublicatedOn
  parent: Uvendia.Domain.Webshop
  name: PublicatedOn
  nameWithType: Webshop.PublicatedOn
  fullName: Uvendia.Domain.Webshop.PublicatedOn
- uid: Uvendia.Domain.Webshop.Rowversion
  commentId: P:Uvendia.Domain.Webshop.Rowversion
  parent: Uvendia.Domain.Webshop
  name: Rowversion
  nameWithType: Webshop.Rowversion
  fullName: Uvendia.Domain.Webshop.Rowversion
- uid: Uvendia.Domain.Webshop.IsValid
  commentId: M:Uvendia.Domain.Webshop.IsValid
  parent: Uvendia.Domain.Webshop
  name: IsValid()
  nameWithType: Webshop.IsValid()
  fullName: Uvendia.Domain.Webshop.IsValid()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.IsValid
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.IsValid
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.IsValid(System.String)
  commentId: M:Uvendia.Domain.Webshop.IsValid(System.String)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: IsValid(String)
  nameWithType: Webshop.IsValid(String)
  fullName: Uvendia.Domain.Webshop.IsValid(System.String)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.IsValid(System.String)
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.IsValid(System.String)
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetValidationErrors
  commentId: M:Uvendia.Domain.Webshop.GetValidationErrors
  parent: Uvendia.Domain.Webshop
  name: GetValidationErrors()
  nameWithType: Webshop.GetValidationErrors()
  fullName: Uvendia.Domain.Webshop.GetValidationErrors()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetValidationErrors
    name: GetValidationErrors
    nameWithType: Webshop.GetValidationErrors
    fullName: Uvendia.Domain.Webshop.GetValidationErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetValidationErrors
    name: GetValidationErrors
    nameWithType: Webshop.GetValidationErrors
    fullName: Uvendia.Domain.Webshop.GetValidationErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetCurrentCultureName
  commentId: M:Uvendia.Domain.Webshop.GetCurrentCultureName
  parent: Uvendia.Domain.Webshop
  name: GetCurrentCultureName()
  nameWithType: Webshop.GetCurrentCultureName()
  fullName: Uvendia.Domain.Webshop.GetCurrentCultureName()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureName
    name: GetCurrentCultureName
    nameWithType: Webshop.GetCurrentCultureName
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureName
    name: GetCurrentCultureName
    nameWithType: Webshop.GetCurrentCultureName
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  commentId: M:Uvendia.Domain.Webshop.GetCurrentCultureInfo
  parent: Uvendia.Domain.Webshop
  name: GetCurrentCultureInfo()
  nameWithType: Webshop.GetCurrentCultureInfo()
  fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
    name: GetCurrentCultureInfo
    nameWithType: Webshop.GetCurrentCultureInfo
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
    name: GetCurrentCultureInfo
    nameWithType: Webshop.GetCurrentCultureInfo
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  commentId: M:Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: GetTranslation(IList<Translation>, String)
  nameWithType: Webshop.GetTranslation(IList<Translation>, String)
  fullName: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList<Uvendia.Domain.Translation>, System.String)
  nameWithType.vb: Webshop.GetTranslation(IList(Of Translation), String)
  fullName.vb: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList(Of Uvendia.Domain.Translation), System.String)
  name.vb: GetTranslation(IList(Of Translation), String)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
    name: GetTranslation
    nameWithType: Webshop.GetTranslation
    fullName: Uvendia.Domain.Webshop.GetTranslation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
    name: GetTranslation
    nameWithType: Webshop.GetTranslation
    fullName: Uvendia.Domain.Webshop.GetTranslation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dazzling.Studio.SqlRepository
  commentId: N:Dazzling.Studio.SqlRepository
  name: Dazzling.Studio.SqlRepository
  nameWithType: Dazzling.Studio.SqlRepository
  fullName: Dazzling.Studio.SqlRepository
- uid: Uvendia.Domain.TicketSale.#ctor*
  commentId: Overload:Uvendia.Domain.TicketSale.#ctor
  name: TicketSale
  nameWithType: TicketSale.TicketSale
  fullName: Uvendia.Domain.TicketSale.TicketSale
- uid: Uvendia.Domain.TicketSale.Event*
  commentId: Overload:Uvendia.Domain.TicketSale.Event
  name: Event
  nameWithType: TicketSale.Event
  fullName: Uvendia.Domain.TicketSale.Event
- uid: Uvendia.Domain.Proxies.Proxy{Uvendia.Domain.Event}
  commentId: T:Uvendia.Domain.Proxies.Proxy{Uvendia.Domain.Event}
  parent: Uvendia.Domain.Proxies
  definition: Uvendia.Domain.Proxies.Proxy`1
  name: Proxy<Event>
  nameWithType: Proxy<Event>
  fullName: Uvendia.Domain.Proxies.Proxy<Uvendia.Domain.Event>
  nameWithType.vb: Proxy(Of Event)
  fullName.vb: Uvendia.Domain.Proxies.Proxy(Of Uvendia.Domain.Event)
  name.vb: Proxy(Of Event)
  spec.csharp:
  - uid: Uvendia.Domain.Proxies.Proxy`1
    name: Proxy
    nameWithType: Proxy
    fullName: Uvendia.Domain.Proxies.Proxy
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Event
    name: Event
    nameWithType: Event
    fullName: Uvendia.Domain.Event
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Uvendia.Domain.Proxies.Proxy`1
    name: Proxy
    nameWithType: Proxy
    fullName: Uvendia.Domain.Proxies.Proxy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Event
    name: Event
    nameWithType: Event
    fullName: Uvendia.Domain.Event
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Proxies.Proxy`1
  commentId: T:Uvendia.Domain.Proxies.Proxy`1
  name: Proxy<TEntity>
  nameWithType: Proxy<TEntity>
  fullName: Uvendia.Domain.Proxies.Proxy<TEntity>
  nameWithType.vb: Proxy(Of TEntity)
  fullName.vb: Uvendia.Domain.Proxies.Proxy(Of TEntity)
  name.vb: Proxy(Of TEntity)
  spec.csharp:
  - uid: Uvendia.Domain.Proxies.Proxy`1
    name: Proxy
    nameWithType: Proxy
    fullName: Uvendia.Domain.Proxies.Proxy
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Uvendia.Domain.Proxies.Proxy`1
    name: Proxy
    nameWithType: Proxy
    fullName: Uvendia.Domain.Proxies.Proxy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Proxies
  commentId: N:Uvendia.Domain.Proxies
  name: Uvendia.Domain.Proxies
  nameWithType: Uvendia.Domain.Proxies
  fullName: Uvendia.Domain.Proxies
- uid: Uvendia.Domain.TicketSale.EventId*
  commentId: Overload:Uvendia.Domain.TicketSale.EventId
  name: EventId
  nameWithType: TicketSale.EventId
  fullName: Uvendia.Domain.TicketSale.EventId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Uvendia.Domain.TicketSale.QuantityAvailable*
  commentId: Overload:Uvendia.Domain.TicketSale.QuantityAvailable
  name: QuantityAvailable
  nameWithType: TicketSale.QuantityAvailable
  fullName: Uvendia.Domain.TicketSale.QuantityAvailable
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.TicketSale.TicketType*
  commentId: Overload:Uvendia.Domain.TicketSale.TicketType
  name: TicketType
  nameWithType: TicketSale.TicketType
  fullName: Uvendia.Domain.TicketSale.TicketType
- uid: Uvendia.Domain.Proxies.Proxy{Uvendia.Domain.Settings.TicketType}
  commentId: T:Uvendia.Domain.Proxies.Proxy{Uvendia.Domain.Settings.TicketType}
  parent: Uvendia.Domain.Proxies
  definition: Uvendia.Domain.Proxies.Proxy`1
  name: Proxy<TicketType>
  nameWithType: Proxy<TicketType>
  fullName: Uvendia.Domain.Proxies.Proxy<Uvendia.Domain.Settings.TicketType>
  nameWithType.vb: Proxy(Of TicketType)
  fullName.vb: Uvendia.Domain.Proxies.Proxy(Of Uvendia.Domain.Settings.TicketType)
  name.vb: Proxy(Of TicketType)
  spec.csharp:
  - uid: Uvendia.Domain.Proxies.Proxy`1
    name: Proxy
    nameWithType: Proxy
    fullName: Uvendia.Domain.Proxies.Proxy
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Settings.TicketType
    name: TicketType
    nameWithType: TicketType
    fullName: Uvendia.Domain.Settings.TicketType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Uvendia.Domain.Proxies.Proxy`1
    name: Proxy
    nameWithType: Proxy
    fullName: Uvendia.Domain.Proxies.Proxy
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Settings.TicketType
    name: TicketType
    nameWithType: TicketType
    fullName: Uvendia.Domain.Settings.TicketType
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.TicketSale.TicketTypeId*
  commentId: Overload:Uvendia.Domain.TicketSale.TicketTypeId
  name: TicketTypeId
  nameWithType: TicketSale.TicketTypeId
  fullName: Uvendia.Domain.TicketSale.TicketTypeId
- uid: Uvendia.Domain.TicketSale.TicketPrice*
  commentId: Overload:Uvendia.Domain.TicketSale.TicketPrice
  name: TicketPrice
  nameWithType: TicketSale.TicketPrice
  fullName: Uvendia.Domain.TicketSale.TicketPrice
- uid: Uvendia.Domain.Price
  commentId: T:Uvendia.Domain.Price
  parent: Uvendia.Domain
  name: Price
  nameWithType: Price
  fullName: Uvendia.Domain.Price
- uid: Uvendia.Domain.TicketSale.TicketPriceId*
  commentId: Overload:Uvendia.Domain.TicketSale.TicketPriceId
  name: TicketPriceId
  nameWithType: TicketSale.TicketPriceId
  fullName: Uvendia.Domain.TicketSale.TicketPriceId
- uid: Uvendia.Domain.TicketSale.Description*
  commentId: Overload:Uvendia.Domain.TicketSale.Description
  name: Description
  nameWithType: TicketSale.Description
  fullName: Uvendia.Domain.TicketSale.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Uvendia.Domain.TicketSale.AvailabilityEndDate*
  commentId: Overload:Uvendia.Domain.TicketSale.AvailabilityEndDate
  name: AvailabilityEndDate
  nameWithType: TicketSale.AvailabilityEndDate
  fullName: Uvendia.Domain.TicketSale.AvailabilityEndDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.TicketSale.Enabled*
  commentId: Overload:Uvendia.Domain.TicketSale.Enabled
  name: Enabled
  nameWithType: TicketSale.Enabled
  fullName: Uvendia.Domain.TicketSale.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Uvendia.Domain.TicketSale.GetTotalStillAvailable*
  commentId: Overload:Uvendia.Domain.TicketSale.GetTotalStillAvailable
  name: GetTotalStillAvailable
  nameWithType: TicketSale.GetTotalStillAvailable
  fullName: Uvendia.Domain.TicketSale.GetTotalStillAvailable
- uid: Uvendia.Domain.Proxies.ProxyTotalTicketAvailable
  commentId: T:Uvendia.Domain.Proxies.ProxyTotalTicketAvailable
  parent: Uvendia.Domain.Proxies
  name: ProxyTotalTicketAvailable
  nameWithType: ProxyTotalTicketAvailable
  fullName: Uvendia.Domain.Proxies.ProxyTotalTicketAvailable
- uid: Uvendia.Domain.TicketSale.GetMaxTicketsForSale*
  commentId: Overload:Uvendia.Domain.TicketSale.GetMaxTicketsForSale
  name: GetMaxTicketsForSale
  nameWithType: TicketSale.GetMaxTicketsForSale
  fullName: Uvendia.Domain.TicketSale.GetMaxTicketsForSale
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Uvendia.Domain.TicketSale.HasTicketPrice*
  commentId: Overload:Uvendia.Domain.TicketSale.HasTicketPrice
  name: HasTicketPrice
  nameWithType: TicketSale.HasTicketPrice
  fullName: Uvendia.Domain.TicketSale.HasTicketPrice
- uid: Uvendia.Domain.TicketSale.CheckTicketPriceNull*
  commentId: Overload:Uvendia.Domain.TicketSale.CheckTicketPriceNull
  name: CheckTicketPriceNull
  nameWithType: TicketSale.CheckTicketPriceNull
  fullName: Uvendia.Domain.TicketSale.CheckTicketPriceNull
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.TicketSale.ToString*
  commentId: Overload:Uvendia.Domain.TicketSale.ToString
  name: ToString
  nameWithType: TicketSale.ToString
  fullName: Uvendia.Domain.TicketSale.ToString
