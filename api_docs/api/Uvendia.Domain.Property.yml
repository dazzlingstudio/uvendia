### YamlMime:ManagedReference
items:
- uid: Uvendia.Domain.Property
  commentId: T:Uvendia.Domain.Property
  id: Property
  parent: Uvendia.Domain
  children:
  - Uvendia.Domain.Property.CheckDataTypeDropDownList(System.String)
  - Uvendia.Domain.Property.DataType
  - Uvendia.Domain.Property.DataTypeId
  - Uvendia.Domain.Property.Definition
  - Uvendia.Domain.Property.DefinitionId
  - Uvendia.Domain.Property.Description
  - Uvendia.Domain.Property.IsVariant
  - Uvendia.Domain.Property.Name
  - Uvendia.Domain.Property.Required
  - Uvendia.Domain.Property.Tags
  - Uvendia.Domain.Property.ToString
  - Uvendia.Domain.Property.ValidationAssemblyTypeName
  - Uvendia.Domain.Property.ValidationExpression
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: Property
  fullName: Uvendia.Domain.Property
  type: Class
  source:
    remote:
      path: Uvendia.Domain/Property.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Property
    path: ../../dazzling.studio/Uvendia.Domain/Property.cs
    startLine: 11
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: 'public class Property : Webshop, IDazzlingEntity'
    content.vb: >-
      Public Class Property
          Inherits Webshop
          Implements IDazzlingEntity
  inheritance:
  - System.Object
  - Uvendia.Domain.Webshop
  implements:
  - Dazzling.Studio.SqlRepository.IDazzlingEntity
  inheritedMembers:
  - Uvendia.Domain.Webshop.PropertyIdChanged
  - Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  - Uvendia.Domain.Webshop.Id
  - Uvendia.Domain.Webshop.CreatedOn
  - Uvendia.Domain.Webshop.ModifiedOn
  - Uvendia.Domain.Webshop.CreatedBy
  - Uvendia.Domain.Webshop.ModifiedBy
  - Uvendia.Domain.Webshop.PublicatedOn
  - Uvendia.Domain.Webshop.Rowversion
  - Uvendia.Domain.Webshop.IsValid
  - Uvendia.Domain.Webshop.IsValid(System.String)
  - Uvendia.Domain.Webshop.GetValidationErrors
  - Uvendia.Domain.Webshop.GetCurrentCultureName
  - Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Uvendia.Domain.Property.Name
  commentId: P:Uvendia.Domain.Property.Name
  id: Name
  parent: Uvendia.Domain.Property
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Property.Name
  fullName: Uvendia.Domain.Property.Name
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Property.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Name
    path: ../../dazzling.studio/Uvendia.Domain/Property.cs
    startLine: 13
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [Required(ErrorMessage = "Name is required")]

      [StringLength(255, ErrorMessage = "Name is too long")]

      [CheckAlreadyExists("Uvendia.Domain", "Uvendia.Domain.Repositories.Properties", "CheckPropertyAlreadyExists", new string[]{"DefinitionId", "Id"}, ErrorMessage = "Name already exists")]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Name is required")>

      <StringLength(255, ErrorMessage:="Name is too long")>

      <CheckAlreadyExists("Uvendia.Domain", "Uvendia.Domain.Repositories.Properties", "CheckPropertyAlreadyExists", New String() {"DefinitionId", "Id"}, ErrorMessage:="Name already exists")>

      Public Property Name As String
  overload: Uvendia.Domain.Property.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Name is required
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 255
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Name is too long
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Property.DefinitionId
  commentId: P:Uvendia.Domain.Property.DefinitionId
  id: DefinitionId
  parent: Uvendia.Domain.Property
  langs:
  - csharp
  - vb
  name: DefinitionId
  nameWithType: Property.DefinitionId
  fullName: Uvendia.Domain.Property.DefinitionId
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Property.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: DefinitionId
    path: ../../dazzling.studio/Uvendia.Domain/Property.cs
    startLine: 18
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public long DefinitionId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property DefinitionId As Long
  overload: Uvendia.Domain.Property.DefinitionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Property.Definition
  commentId: P:Uvendia.Domain.Property.Definition
  id: Definition
  parent: Uvendia.Domain.Property
  langs:
  - csharp
  - vb
  name: Definition
  nameWithType: Property.Definition
  fullName: Uvendia.Domain.Property.Definition
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Property.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Definition
    path: ../../dazzling.studio/Uvendia.Domain/Property.cs
    startLine: 20
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public Definition Definition { get; set; }
    parameters: []
    return:
      type: Uvendia.Domain.Definition
    content.vb: Public Property Definition As Definition
  overload: Uvendia.Domain.Property.Definition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Property.DataTypeId
  commentId: P:Uvendia.Domain.Property.DataTypeId
  id: DataTypeId
  parent: Uvendia.Domain.Property
  langs:
  - csharp
  - vb
  name: DataTypeId
  nameWithType: Property.DataTypeId
  fullName: Uvendia.Domain.Property.DataTypeId
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Property.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: DataTypeId
    path: ../../dazzling.studio/Uvendia.Domain/Property.cs
    startLine: 21
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [Required(ErrorMessage = "Data type is required")]

      public int DataTypeId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required(ErrorMessage:="Data type is required")>

      Public Property DataTypeId As Integer
  overload: Uvendia.Domain.Property.DataTypeId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Data type is required
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Property.DataType
  commentId: P:Uvendia.Domain.Property.DataType
  id: DataType
  parent: Uvendia.Domain.Property
  langs:
  - csharp
  - vb
  name: DataType
  nameWithType: Property.DataType
  fullName: Uvendia.Domain.Property.DataType
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Property.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: DataType
    path: ../../dazzling.studio/Uvendia.Domain/Property.cs
    startLine: 25
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public DataType DataType { get; }
    parameters: []
    return:
      type: Uvendia.Domain.Enums.DataType
    content.vb: Public ReadOnly Property DataType As DataType
  overload: Uvendia.Domain.Property.DataType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Uvendia.Domain.Property.Tags
  commentId: P:Uvendia.Domain.Property.Tags
  id: Tags
  parent: Uvendia.Domain.Property
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: Property.Tags
  fullName: Uvendia.Domain.Property.Tags
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Property.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Tags
    path: ../../dazzling.studio/Uvendia.Domain/Property.cs
    startLine: 27
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [CustomValidate(typeof(Property), "CheckDataTypeDropDownList", ErrorMessage = "Tags are required")]

      public string Tags { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <CustomValidate(GetType( Property), "CheckDataTypeDropDownList", ErrorMessage:="Tags are required")>

      Public Property Tags As String
  overload: Uvendia.Domain.Property.Tags*
  attributes:
  - type: Dazzling.Studio.Utils.Attributes.Validations.CustomValidateAttribute
    ctor: Dazzling.Studio.Utils.Attributes.Validations.CustomValidateAttribute.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: Uvendia.Domain.Property
    - type: System.String
      value: CheckDataTypeDropDownList
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Tags are required
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Property.Description
  commentId: P:Uvendia.Domain.Property.Description
  id: Description
  parent: Uvendia.Domain.Property
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Property.Description
  fullName: Uvendia.Domain.Property.Description
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Property.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Description
    path: ../../dazzling.studio/Uvendia.Domain/Property.cs
    startLine: 31
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [StringLength(1024)]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(1024)>

      Public Property Description As String
  overload: Uvendia.Domain.Property.Description*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 1024
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Property.Required
  commentId: P:Uvendia.Domain.Property.Required
  id: Required
  parent: Uvendia.Domain.Property
  langs:
  - csharp
  - vb
  name: Required
  nameWithType: Property.Required
  fullName: Uvendia.Domain.Property.Required
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Property.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Required
    path: ../../dazzling.studio/Uvendia.Domain/Property.cs
    startLine: 33
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public bool Required { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Required As Boolean
  overload: Uvendia.Domain.Property.Required*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Property.IsVariant
  commentId: P:Uvendia.Domain.Property.IsVariant
  id: IsVariant
  parent: Uvendia.Domain.Property
  langs:
  - csharp
  - vb
  name: IsVariant
  nameWithType: Property.IsVariant
  fullName: Uvendia.Domain.Property.IsVariant
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Property.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: IsVariant
    path: ../../dazzling.studio/Uvendia.Domain/Property.cs
    startLine: 34
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public bool IsVariant { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsVariant As Boolean
  overload: Uvendia.Domain.Property.IsVariant*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Property.ValidationExpression
  commentId: P:Uvendia.Domain.Property.ValidationExpression
  id: ValidationExpression
  parent: Uvendia.Domain.Property
  langs:
  - csharp
  - vb
  name: ValidationExpression
  nameWithType: Property.ValidationExpression
  fullName: Uvendia.Domain.Property.ValidationExpression
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Property.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: ValidationExpression
    path: ../../dazzling.studio/Uvendia.Domain/Property.cs
    startLine: 36
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [StringLength(500, ErrorMessage = "Validation expression is too long")]

      public string ValidationExpression { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(500, ErrorMessage:="Validation expression is too long")>

      Public Property ValidationExpression As String
  overload: Uvendia.Domain.Property.ValidationExpression*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 500
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Validation expression is too long
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Property.ValidationAssemblyTypeName
  commentId: P:Uvendia.Domain.Property.ValidationAssemblyTypeName
  id: ValidationAssemblyTypeName
  parent: Uvendia.Domain.Property
  langs:
  - csharp
  - vb
  name: ValidationAssemblyTypeName
  nameWithType: Property.ValidationAssemblyTypeName
  fullName: Uvendia.Domain.Property.ValidationAssemblyTypeName
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Property.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: ValidationAssemblyTypeName
    path: ../../dazzling.studio/Uvendia.Domain/Property.cs
    startLine: 39
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [StringLength(500, ErrorMessage = "Custom validator assenmbly name is too long")]

      public string ValidationAssemblyTypeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(500, ErrorMessage:="Custom validator assenmbly name is too long")>

      Public Property ValidationAssemblyTypeName As String
  overload: Uvendia.Domain.Property.ValidationAssemblyTypeName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 500
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Custom validator assenmbly name is too long
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Property.ToString
  commentId: M:Uvendia.Domain.Property.ToString
  id: ToString
  parent: Uvendia.Domain.Property
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Property.ToString()
  fullName: Uvendia.Domain.Property.ToString()
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Property.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: ToString
    path: ../../dazzling.studio/Uvendia.Domain/Property.cs
    startLine: 43
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Uvendia.Domain.Property.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Uvendia.Domain.Property.CheckDataTypeDropDownList(System.String)
  commentId: M:Uvendia.Domain.Property.CheckDataTypeDropDownList(System.String)
  id: CheckDataTypeDropDownList(System.String)
  parent: Uvendia.Domain.Property
  langs:
  - csharp
  - vb
  name: CheckDataTypeDropDownList(String)
  nameWithType: Property.CheckDataTypeDropDownList(String)
  fullName: Uvendia.Domain.Property.CheckDataTypeDropDownList(System.String)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Property.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: CheckDataTypeDropDownList
    path: ../../dazzling.studio/Uvendia.Domain/Property.cs
    startLine: 53
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nChecks the data type drop down list.\n"
  example: []
  syntax:
    content: public bool CheckDataTypeDropDownList(string tags)
    parameters:
    - id: tags
      type: System.String
      description: The tags.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function CheckDataTypeDropDownList(tags As String) As Boolean
  overload: Uvendia.Domain.Property.CheckDataTypeDropDownList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Uvendia.Domain
  commentId: N:Uvendia.Domain
  name: Uvendia.Domain
  nameWithType: Uvendia.Domain
  fullName: Uvendia.Domain
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Uvendia.Domain.Webshop
  commentId: T:Uvendia.Domain.Webshop
  parent: Uvendia.Domain
  name: Webshop
  nameWithType: Webshop
  fullName: Uvendia.Domain.Webshop
- uid: Dazzling.Studio.SqlRepository.IDazzlingEntity
  commentId: T:Dazzling.Studio.SqlRepository.IDazzlingEntity
  parent: Dazzling.Studio.SqlRepository
  name: IDazzlingEntity
  nameWithType: IDazzlingEntity
  fullName: Dazzling.Studio.SqlRepository.IDazzlingEntity
- uid: Uvendia.Domain.Webshop.PropertyIdChanged
  commentId: E:Uvendia.Domain.Webshop.PropertyIdChanged
  parent: Uvendia.Domain.Webshop
  name: PropertyIdChanged
  nameWithType: Webshop.PropertyIdChanged
  fullName: Uvendia.Domain.Webshop.PropertyIdChanged
- uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  commentId: M:Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: OnPropertyIdChanged(Object, EventArgs)
  nameWithType: Webshop.OnPropertyIdChanged(Object, EventArgs)
  fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object, System.EventArgs)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
    name: OnPropertyIdChanged
    nameWithType: Webshop.OnPropertyIdChanged
    fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
    name: OnPropertyIdChanged
    nameWithType: Webshop.OnPropertyIdChanged
    fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.Id
  commentId: P:Uvendia.Domain.Webshop.Id
  parent: Uvendia.Domain.Webshop
  name: Id
  nameWithType: Webshop.Id
  fullName: Uvendia.Domain.Webshop.Id
- uid: Uvendia.Domain.Webshop.CreatedOn
  commentId: P:Uvendia.Domain.Webshop.CreatedOn
  parent: Uvendia.Domain.Webshop
  name: CreatedOn
  nameWithType: Webshop.CreatedOn
  fullName: Uvendia.Domain.Webshop.CreatedOn
- uid: Uvendia.Domain.Webshop.ModifiedOn
  commentId: P:Uvendia.Domain.Webshop.ModifiedOn
  parent: Uvendia.Domain.Webshop
  name: ModifiedOn
  nameWithType: Webshop.ModifiedOn
  fullName: Uvendia.Domain.Webshop.ModifiedOn
- uid: Uvendia.Domain.Webshop.CreatedBy
  commentId: P:Uvendia.Domain.Webshop.CreatedBy
  parent: Uvendia.Domain.Webshop
  name: CreatedBy
  nameWithType: Webshop.CreatedBy
  fullName: Uvendia.Domain.Webshop.CreatedBy
- uid: Uvendia.Domain.Webshop.ModifiedBy
  commentId: P:Uvendia.Domain.Webshop.ModifiedBy
  parent: Uvendia.Domain.Webshop
  name: ModifiedBy
  nameWithType: Webshop.ModifiedBy
  fullName: Uvendia.Domain.Webshop.ModifiedBy
- uid: Uvendia.Domain.Webshop.PublicatedOn
  commentId: P:Uvendia.Domain.Webshop.PublicatedOn
  parent: Uvendia.Domain.Webshop
  name: PublicatedOn
  nameWithType: Webshop.PublicatedOn
  fullName: Uvendia.Domain.Webshop.PublicatedOn
- uid: Uvendia.Domain.Webshop.Rowversion
  commentId: P:Uvendia.Domain.Webshop.Rowversion
  parent: Uvendia.Domain.Webshop
  name: Rowversion
  nameWithType: Webshop.Rowversion
  fullName: Uvendia.Domain.Webshop.Rowversion
- uid: Uvendia.Domain.Webshop.IsValid
  commentId: M:Uvendia.Domain.Webshop.IsValid
  parent: Uvendia.Domain.Webshop
  name: IsValid()
  nameWithType: Webshop.IsValid()
  fullName: Uvendia.Domain.Webshop.IsValid()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.IsValid
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.IsValid
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.IsValid(System.String)
  commentId: M:Uvendia.Domain.Webshop.IsValid(System.String)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: IsValid(String)
  nameWithType: Webshop.IsValid(String)
  fullName: Uvendia.Domain.Webshop.IsValid(System.String)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.IsValid(System.String)
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.IsValid(System.String)
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetValidationErrors
  commentId: M:Uvendia.Domain.Webshop.GetValidationErrors
  parent: Uvendia.Domain.Webshop
  name: GetValidationErrors()
  nameWithType: Webshop.GetValidationErrors()
  fullName: Uvendia.Domain.Webshop.GetValidationErrors()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetValidationErrors
    name: GetValidationErrors
    nameWithType: Webshop.GetValidationErrors
    fullName: Uvendia.Domain.Webshop.GetValidationErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetValidationErrors
    name: GetValidationErrors
    nameWithType: Webshop.GetValidationErrors
    fullName: Uvendia.Domain.Webshop.GetValidationErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetCurrentCultureName
  commentId: M:Uvendia.Domain.Webshop.GetCurrentCultureName
  parent: Uvendia.Domain.Webshop
  name: GetCurrentCultureName()
  nameWithType: Webshop.GetCurrentCultureName()
  fullName: Uvendia.Domain.Webshop.GetCurrentCultureName()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureName
    name: GetCurrentCultureName
    nameWithType: Webshop.GetCurrentCultureName
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureName
    name: GetCurrentCultureName
    nameWithType: Webshop.GetCurrentCultureName
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  commentId: M:Uvendia.Domain.Webshop.GetCurrentCultureInfo
  parent: Uvendia.Domain.Webshop
  name: GetCurrentCultureInfo()
  nameWithType: Webshop.GetCurrentCultureInfo()
  fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
    name: GetCurrentCultureInfo
    nameWithType: Webshop.GetCurrentCultureInfo
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
    name: GetCurrentCultureInfo
    nameWithType: Webshop.GetCurrentCultureInfo
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  commentId: M:Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: GetTranslation(IList<Translation>, String)
  nameWithType: Webshop.GetTranslation(IList<Translation>, String)
  fullName: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList<Uvendia.Domain.Translation>, System.String)
  nameWithType.vb: Webshop.GetTranslation(IList(Of Translation), String)
  fullName.vb: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList(Of Uvendia.Domain.Translation), System.String)
  name.vb: GetTranslation(IList(Of Translation), String)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
    name: GetTranslation
    nameWithType: Webshop.GetTranslation
    fullName: Uvendia.Domain.Webshop.GetTranslation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
    name: GetTranslation
    nameWithType: Webshop.GetTranslation
    fullName: Uvendia.Domain.Webshop.GetTranslation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dazzling.Studio.SqlRepository
  commentId: N:Dazzling.Studio.SqlRepository
  name: Dazzling.Studio.SqlRepository
  nameWithType: Dazzling.Studio.SqlRepository
  fullName: Dazzling.Studio.SqlRepository
- uid: Uvendia.Domain.Property.Name*
  commentId: Overload:Uvendia.Domain.Property.Name
  name: Name
  nameWithType: Property.Name
  fullName: Uvendia.Domain.Property.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Uvendia.Domain.Property.DefinitionId*
  commentId: Overload:Uvendia.Domain.Property.DefinitionId
  name: DefinitionId
  nameWithType: Property.DefinitionId
  fullName: Uvendia.Domain.Property.DefinitionId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Uvendia.Domain.Property.Definition*
  commentId: Overload:Uvendia.Domain.Property.Definition
  name: Definition
  nameWithType: Property.Definition
  fullName: Uvendia.Domain.Property.Definition
- uid: Uvendia.Domain.Definition
  commentId: T:Uvendia.Domain.Definition
  parent: Uvendia.Domain
  name: Definition
  nameWithType: Definition
  fullName: Uvendia.Domain.Definition
- uid: Uvendia.Domain.Property.DataTypeId*
  commentId: Overload:Uvendia.Domain.Property.DataTypeId
  name: DataTypeId
  nameWithType: Property.DataTypeId
  fullName: Uvendia.Domain.Property.DataTypeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Uvendia.Domain.Property.DataType*
  commentId: Overload:Uvendia.Domain.Property.DataType
  name: DataType
  nameWithType: Property.DataType
  fullName: Uvendia.Domain.Property.DataType
- uid: Uvendia.Domain.Enums.DataType
  commentId: T:Uvendia.Domain.Enums.DataType
  parent: Uvendia.Domain.Enums
  name: DataType
  nameWithType: DataType
  fullName: Uvendia.Domain.Enums.DataType
- uid: Uvendia.Domain.Enums
  commentId: N:Uvendia.Domain.Enums
  name: Uvendia.Domain.Enums
  nameWithType: Uvendia.Domain.Enums
  fullName: Uvendia.Domain.Enums
- uid: Uvendia.Domain.Property.Tags*
  commentId: Overload:Uvendia.Domain.Property.Tags
  name: Tags
  nameWithType: Property.Tags
  fullName: Uvendia.Domain.Property.Tags
- uid: Uvendia.Domain.Property.Description*
  commentId: Overload:Uvendia.Domain.Property.Description
  name: Description
  nameWithType: Property.Description
  fullName: Uvendia.Domain.Property.Description
- uid: Uvendia.Domain.Property.Required*
  commentId: Overload:Uvendia.Domain.Property.Required
  name: Required
  nameWithType: Property.Required
  fullName: Uvendia.Domain.Property.Required
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Uvendia.Domain.Property.IsVariant*
  commentId: Overload:Uvendia.Domain.Property.IsVariant
  name: IsVariant
  nameWithType: Property.IsVariant
  fullName: Uvendia.Domain.Property.IsVariant
- uid: Uvendia.Domain.Property.ValidationExpression*
  commentId: Overload:Uvendia.Domain.Property.ValidationExpression
  name: ValidationExpression
  nameWithType: Property.ValidationExpression
  fullName: Uvendia.Domain.Property.ValidationExpression
- uid: Uvendia.Domain.Property.ValidationAssemblyTypeName*
  commentId: Overload:Uvendia.Domain.Property.ValidationAssemblyTypeName
  name: ValidationAssemblyTypeName
  nameWithType: Property.ValidationAssemblyTypeName
  fullName: Uvendia.Domain.Property.ValidationAssemblyTypeName
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Property.ToString*
  commentId: Overload:Uvendia.Domain.Property.ToString
  name: ToString
  nameWithType: Property.ToString
  fullName: Uvendia.Domain.Property.ToString
- uid: Uvendia.Domain.Property.CheckDataTypeDropDownList*
  commentId: Overload:Uvendia.Domain.Property.CheckDataTypeDropDownList
  name: CheckDataTypeDropDownList
  nameWithType: Property.CheckDataTypeDropDownList
  fullName: Uvendia.Domain.Property.CheckDataTypeDropDownList
