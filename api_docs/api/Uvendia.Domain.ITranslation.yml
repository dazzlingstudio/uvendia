### YamlMime:ManagedReference
items:
- uid: Uvendia.Domain.ITranslation
  commentId: T:Uvendia.Domain.ITranslation
  id: ITranslation
  parent: Uvendia.Domain
  children:
  - Uvendia.Domain.ITranslation.DisplayName(System.String)
  - Uvendia.Domain.ITranslation.GetLongDescription(System.String)
  - Uvendia.Domain.ITranslation.GetShortDescription(System.String)
  - Uvendia.Domain.ITranslation.Translations
  langs:
  - csharp
  - vb
  name: ITranslation
  nameWithType: ITranslation
  fullName: Uvendia.Domain.ITranslation
  type: Interface
  source:
    remote:
      path: Uvendia.Domain/ITranslation.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: ITranslation
    path: ../../dazzling.studio/Uvendia.Domain/ITranslation.cs
    startLine: 11
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nTranslation interface\n"
  example: []
  syntax:
    content: public interface ITranslation
    content.vb: Public Interface ITranslation
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Uvendia.Domain.ITranslation.Translations
  commentId: P:Uvendia.Domain.ITranslation.Translations
  id: Translations
  parent: Uvendia.Domain.ITranslation
  langs:
  - csharp
  - vb
  name: Translations
  nameWithType: ITranslation.Translations
  fullName: Uvendia.Domain.ITranslation.Translations
  type: Property
  source:
    remote:
      path: Uvendia.Domain/ITranslation.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Translations
    path: ../../dazzling.studio/Uvendia.Domain/ITranslation.cs
    startLine: 19
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nGets or sets the translations.\n"
  example: []
  syntax:
    content: IList<Translation> Translations { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Uvendia.Domain.Translation}
      description: "\nThe translations.\n"
    content.vb: Property Translations As IList(Of Translation)
  overload: Uvendia.Domain.ITranslation.Translations*
  modifiers.csharp:
  - get
  - set
- uid: Uvendia.Domain.ITranslation.DisplayName(System.String)
  commentId: M:Uvendia.Domain.ITranslation.DisplayName(System.String)
  id: DisplayName(System.String)
  parent: Uvendia.Domain.ITranslation
  langs:
  - csharp
  - vb
  name: DisplayName(String)
  nameWithType: ITranslation.DisplayName(String)
  fullName: Uvendia.Domain.ITranslation.DisplayName(System.String)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/ITranslation.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: DisplayName
    path: ../../dazzling.studio/Uvendia.Domain/ITranslation.cs
    startLine: 25
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nThe display name.\n"
  example: []
  syntax:
    content: string DisplayName(string cultureName = null)
    parameters:
    - id: cultureName
      type: System.String
      description: Name of the culture.
    return:
      type: System.String
      description: ''
    content.vb: Function DisplayName(cultureName As String = Nothing) As String
  overload: Uvendia.Domain.ITranslation.DisplayName*
- uid: Uvendia.Domain.ITranslation.GetShortDescription(System.String)
  commentId: M:Uvendia.Domain.ITranslation.GetShortDescription(System.String)
  id: GetShortDescription(System.String)
  parent: Uvendia.Domain.ITranslation
  langs:
  - csharp
  - vb
  name: GetShortDescription(String)
  nameWithType: ITranslation.GetShortDescription(String)
  fullName: Uvendia.Domain.ITranslation.GetShortDescription(System.String)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/ITranslation.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: GetShortDescription
    path: ../../dazzling.studio/Uvendia.Domain/ITranslation.cs
    startLine: 31
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nGets the short description.\n"
  example: []
  syntax:
    content: string GetShortDescription(string cultureName = null)
    parameters:
    - id: cultureName
      type: System.String
      description: Name of the culture.
    return:
      type: System.String
      description: ''
    content.vb: Function GetShortDescription(cultureName As String = Nothing) As String
  overload: Uvendia.Domain.ITranslation.GetShortDescription*
- uid: Uvendia.Domain.ITranslation.GetLongDescription(System.String)
  commentId: M:Uvendia.Domain.ITranslation.GetLongDescription(System.String)
  id: GetLongDescription(System.String)
  parent: Uvendia.Domain.ITranslation
  langs:
  - csharp
  - vb
  name: GetLongDescription(String)
  nameWithType: ITranslation.GetLongDescription(String)
  fullName: Uvendia.Domain.ITranslation.GetLongDescription(System.String)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/ITranslation.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: GetLongDescription
    path: ../../dazzling.studio/Uvendia.Domain/ITranslation.cs
    startLine: 37
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nGets the long description.\n"
  example: []
  syntax:
    content: string GetLongDescription(string cultureName = null)
    parameters:
    - id: cultureName
      type: System.String
      description: Name of the culture.
    return:
      type: System.String
      description: ''
    content.vb: Function GetLongDescription(cultureName As String = Nothing) As String
  overload: Uvendia.Domain.ITranslation.GetLongDescription*
references:
- uid: Uvendia.Domain
  commentId: N:Uvendia.Domain
  name: Uvendia.Domain
  nameWithType: Uvendia.Domain
  fullName: Uvendia.Domain
- uid: Uvendia.Domain.ITranslation.Translations*
  commentId: Overload:Uvendia.Domain.ITranslation.Translations
  name: Translations
  nameWithType: ITranslation.Translations
  fullName: Uvendia.Domain.ITranslation.Translations
- uid: System.Collections.Generic.IList{Uvendia.Domain.Translation}
  commentId: T:System.Collections.Generic.IList{Uvendia.Domain.Translation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Translation>
  nameWithType: IList<Translation>
  fullName: System.Collections.Generic.IList<Uvendia.Domain.Translation>
  nameWithType.vb: IList(Of Translation)
  fullName.vb: System.Collections.Generic.IList(Of Uvendia.Domain.Translation)
  name.vb: IList(Of Translation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Uvendia.Domain.ITranslation.DisplayName*
  commentId: Overload:Uvendia.Domain.ITranslation.DisplayName
  name: DisplayName
  nameWithType: ITranslation.DisplayName
  fullName: Uvendia.Domain.ITranslation.DisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Uvendia.Domain.ITranslation.GetShortDescription*
  commentId: Overload:Uvendia.Domain.ITranslation.GetShortDescription
  name: GetShortDescription
  nameWithType: ITranslation.GetShortDescription
  fullName: Uvendia.Domain.ITranslation.GetShortDescription
- uid: Uvendia.Domain.ITranslation.GetLongDescription*
  commentId: Overload:Uvendia.Domain.ITranslation.GetLongDescription
  name: GetLongDescription
  nameWithType: ITranslation.GetLongDescription
  fullName: Uvendia.Domain.ITranslation.GetLongDescription
