### YamlMime:ManagedReference
items:
- uid: Uvendia.Domain.PaymentMethod
  commentId: T:Uvendia.Domain.PaymentMethod
  id: PaymentMethod
  parent: Uvendia.Domain
  children:
  - Uvendia.Domain.PaymentMethod.AvailableInCountries
  - Uvendia.Domain.PaymentMethod.CheckDuplicatePaymentMethodSettings(System.Collections.Generic.List{Uvendia.Domain.PaymentMethodSetting})
  - Uvendia.Domain.PaymentMethod.Description
  - Uvendia.Domain.PaymentMethod.Enabled
  - Uvendia.Domain.PaymentMethod.GetCountries
  - Uvendia.Domain.PaymentMethod.GetPrice(System.Nullable{System.Int64})
  - Uvendia.Domain.PaymentMethod.GetPrice(System.String)
  - Uvendia.Domain.PaymentMethod.HasPrices
  - Uvendia.Domain.PaymentMethod.Item(System.String)
  - Uvendia.Domain.PaymentMethod.LogoId
  - Uvendia.Domain.PaymentMethod.Name
  - Uvendia.Domain.PaymentMethod.PriceCollection
  - Uvendia.Domain.PaymentMethod.SerializedSettings
  - Uvendia.Domain.PaymentMethod.ServicePercentageFee
  - Uvendia.Domain.PaymentMethod.Settings
  langs:
  - csharp
  - vb
  name: PaymentMethod
  nameWithType: PaymentMethod
  fullName: Uvendia.Domain.PaymentMethod
  type: Class
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: PaymentMethod
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 15
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: 'public class PaymentMethod : Webshop, IDazzlingEntity'
    content.vb: >-
      Public Class PaymentMethod
          Inherits Webshop
          Implements IDazzlingEntity
  inheritance:
  - System.Object
  - Uvendia.Domain.Webshop
  implements:
  - Dazzling.Studio.SqlRepository.IDazzlingEntity
  inheritedMembers:
  - Uvendia.Domain.Webshop.PropertyIdChanged
  - Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  - Uvendia.Domain.Webshop.Id
  - Uvendia.Domain.Webshop.CreatedOn
  - Uvendia.Domain.Webshop.ModifiedOn
  - Uvendia.Domain.Webshop.CreatedBy
  - Uvendia.Domain.Webshop.ModifiedBy
  - Uvendia.Domain.Webshop.PublicatedOn
  - Uvendia.Domain.Webshop.Rowversion
  - Uvendia.Domain.Webshop.IsValid
  - Uvendia.Domain.Webshop.IsValid(System.String)
  - Uvendia.Domain.Webshop.GetValidationErrors
  - Uvendia.Domain.Webshop.GetCurrentCultureName
  - Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Uvendia.Domain.PaymentMethod.LogoId
  commentId: P:Uvendia.Domain.PaymentMethod.LogoId
  id: LogoId
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: LogoId
  nameWithType: PaymentMethod.LogoId
  fullName: Uvendia.Domain.PaymentMethod.LogoId
  type: Property
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: LogoId
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 17
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public string LogoId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LogoId As String
  overload: Uvendia.Domain.PaymentMethod.LogoId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.PaymentMethod.Name
  commentId: P:Uvendia.Domain.PaymentMethod.Name
  id: Name
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PaymentMethod.Name
  fullName: Uvendia.Domain.PaymentMethod.Name
  type: Property
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Name
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 20
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [Required]

      [StringLength(255, ErrorMessage = "Name is too long")]

      [CheckAlreadyExists("Uvendia.Domain", "Uvendia.Domain.Repositories.PaymentMethods", "CheckPaymentMethodAlreadyExists", ErrorMessage = "Name already exists", OtherProperty = "Id")]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(255, ErrorMessage:="Name is too long")>

      <CheckAlreadyExists("Uvendia.Domain", "Uvendia.Domain.Repositories.PaymentMethods", "CheckPaymentMethodAlreadyExists", ErrorMessage:="Name already exists", OtherProperty:="Id")>

      Public Property Name As String
  overload: Uvendia.Domain.PaymentMethod.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 255
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Name is too long
  - type: Dazzling.Studio.Utils.Attributes.Validations.CheckAlreadyExistsAttribute
    ctor: Dazzling.Studio.Utils.Attributes.Validations.CheckAlreadyExistsAttribute.#ctor(System.String,System.String,System.String)
    arguments:
    - type: System.String
      value: Uvendia.Domain
    - type: System.String
      value: Uvendia.Domain.Repositories.PaymentMethods
    - type: System.String
      value: CheckPaymentMethodAlreadyExists
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Name already exists
    - name: OtherProperty
      type: System.String
      value: Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.PaymentMethod.Description
  commentId: P:Uvendia.Domain.PaymentMethod.Description
  id: Description
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: PaymentMethod.Description
  fullName: Uvendia.Domain.PaymentMethod.Description
  type: Property
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Description
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 25
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Uvendia.Domain.PaymentMethod.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.PaymentMethod.ServicePercentageFee
  commentId: P:Uvendia.Domain.PaymentMethod.ServicePercentageFee
  id: ServicePercentageFee
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: ServicePercentageFee
  nameWithType: PaymentMethod.ServicePercentageFee
  fullName: Uvendia.Domain.PaymentMethod.ServicePercentageFee
  type: Property
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: ServicePercentageFee
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 27
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public decimal? ServicePercentageFee { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Decimal}
    content.vb: Public Property ServicePercentageFee As Decimal?
  overload: Uvendia.Domain.PaymentMethod.ServicePercentageFee*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.PaymentMethod.Enabled
  commentId: P:Uvendia.Domain.PaymentMethod.Enabled
  id: Enabled
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: PaymentMethod.Enabled
  fullName: Uvendia.Domain.PaymentMethod.Enabled
  type: Property
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Enabled
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 29
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public bool Enabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enabled As Boolean
  overload: Uvendia.Domain.PaymentMethod.Enabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.PaymentMethod.PriceCollection
  commentId: P:Uvendia.Domain.PaymentMethod.PriceCollection
  id: PriceCollection
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: PriceCollection
  nameWithType: PaymentMethod.PriceCollection
  fullName: Uvendia.Domain.PaymentMethod.PriceCollection
  type: Property
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: PriceCollection
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 31
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public IList<Price> PriceCollection { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Uvendia.Domain.Price}
    content.vb: Public Property PriceCollection As IList(Of Price)
  overload: Uvendia.Domain.PaymentMethod.PriceCollection*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.PaymentMethod.AvailableInCountries
  commentId: P:Uvendia.Domain.PaymentMethod.AvailableInCountries
  id: AvailableInCountries
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: AvailableInCountries
  nameWithType: PaymentMethod.AvailableInCountries
  fullName: Uvendia.Domain.PaymentMethod.AvailableInCountries
  type: Property
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: AvailableInCountries
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 44
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [Required(ErrorMessage = "Available in country is required")]

      public string AvailableInCountries { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required(ErrorMessage:="Available in country is required")>

      Public Property AvailableInCountries As String
  overload: Uvendia.Domain.PaymentMethod.AvailableInCountries*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Available in country is required
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.PaymentMethod.Item(System.String)
  commentId: P:Uvendia.Domain.PaymentMethod.Item(System.String)
  id: Item(System.String)
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: PaymentMethod.Item[String]
  fullName: Uvendia.Domain.PaymentMethod.Item[System.String]
  type: Property
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: this[]
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 55
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nGets the settings value with the specified settings key.\n"
  example: []
  syntax:
    content: public string this[string settingsKey] { get; }
    parameters:
    - id: settingsKey
      type: System.String
      description: The settings key.
    return:
      type: System.String
      description: "\nThe <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public ReadOnly Property Item(settingsKey As String) As String
  overload: Uvendia.Domain.PaymentMethod.Item*
  nameWithType.vb: PaymentMethod.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Uvendia.Domain.PaymentMethod.Item(System.String)
  name.vb: Item(String)
- uid: Uvendia.Domain.PaymentMethod.SerializedSettings
  commentId: P:Uvendia.Domain.PaymentMethod.SerializedSettings
  id: SerializedSettings
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: SerializedSettings
  nameWithType: PaymentMethod.SerializedSettings
  fullName: Uvendia.Domain.PaymentMethod.SerializedSettings
  type: Property
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: SerializedSettings
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 68
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public string SerializedSettings { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SerializedSettings As String
  overload: Uvendia.Domain.PaymentMethod.SerializedSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.PaymentMethod.Settings
  commentId: P:Uvendia.Domain.PaymentMethod.Settings
  id: Settings
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: Settings
  nameWithType: PaymentMethod.Settings
  fullName: Uvendia.Domain.PaymentMethod.Settings
  type: Property
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Settings
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 86
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [CustomValidate(typeof(PaymentMethod), "CheckDuplicatePaymentMethodSettings", ErrorMessage = "Payment method settings contains duplicate keys")]

      public List<PaymentMethodSetting> Settings { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Uvendia.Domain.PaymentMethodSetting}
    content.vb: >-
      <CustomValidate(GetType(PaymentMethod), "CheckDuplicatePaymentMethodSettings", ErrorMessage:="Payment method settings contains duplicate keys")>

      Public Property Settings As List(Of PaymentMethodSetting)
  overload: Uvendia.Domain.PaymentMethod.Settings*
  attributes:
  - type: Dazzling.Studio.Utils.Attributes.Validations.CustomValidateAttribute
    ctor: Dazzling.Studio.Utils.Attributes.Validations.CustomValidateAttribute.#ctor(System.Type,System.String)
    arguments:
    - type: System.Type
      value: Uvendia.Domain.PaymentMethod
    - type: System.String
      value: CheckDuplicatePaymentMethodSettings
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Payment method settings contains duplicate keys
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.PaymentMethod.GetCountries
  commentId: M:Uvendia.Domain.PaymentMethod.GetCountries
  id: GetCountries
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: GetCountries()
  nameWithType: PaymentMethod.GetCountries()
  fullName: Uvendia.Domain.PaymentMethod.GetCountries()
  type: Method
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: GetCountries
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 111
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nGets the countries.\n"
  example: []
  syntax:
    content: public IEnumerable<Country> GetCountries()
    return:
      type: System.Collections.Generic.IEnumerable{Uvendia.Domain.Entities.Country}
      description: ''
    content.vb: Public Function GetCountries As IEnumerable(Of Country)
  overload: Uvendia.Domain.PaymentMethod.GetCountries*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.PaymentMethod.HasPrices
  commentId: M:Uvendia.Domain.PaymentMethod.HasPrices
  id: HasPrices
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: HasPrices()
  nameWithType: PaymentMethod.HasPrices()
  fullName: Uvendia.Domain.PaymentMethod.HasPrices()
  type: Method
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: HasPrices
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 120
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public bool HasPrices()
    return:
      type: System.Boolean
    content.vb: Public Function HasPrices As Boolean
  overload: Uvendia.Domain.PaymentMethod.HasPrices*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.PaymentMethod.CheckDuplicatePaymentMethodSettings(System.Collections.Generic.List{Uvendia.Domain.PaymentMethodSetting})
  commentId: M:Uvendia.Domain.PaymentMethod.CheckDuplicatePaymentMethodSettings(System.Collections.Generic.List{Uvendia.Domain.PaymentMethodSetting})
  id: CheckDuplicatePaymentMethodSettings(System.Collections.Generic.List{Uvendia.Domain.PaymentMethodSetting})
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: CheckDuplicatePaymentMethodSettings(List<PaymentMethodSetting>)
  nameWithType: PaymentMethod.CheckDuplicatePaymentMethodSettings(List<PaymentMethodSetting>)
  fullName: Uvendia.Domain.PaymentMethod.CheckDuplicatePaymentMethodSettings(System.Collections.Generic.List<Uvendia.Domain.PaymentMethodSetting>)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: CheckDuplicatePaymentMethodSettings
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 125
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public bool CheckDuplicatePaymentMethodSettings(List<PaymentMethodSetting> settings)
    parameters:
    - id: settings
      type: System.Collections.Generic.List{Uvendia.Domain.PaymentMethodSetting}
    return:
      type: System.Boolean
    content.vb: Public Function CheckDuplicatePaymentMethodSettings(settings As List(Of PaymentMethodSetting)) As Boolean
  overload: Uvendia.Domain.PaymentMethod.CheckDuplicatePaymentMethodSettings*
  nameWithType.vb: PaymentMethod.CheckDuplicatePaymentMethodSettings(List(Of PaymentMethodSetting))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Uvendia.Domain.PaymentMethod.CheckDuplicatePaymentMethodSettings(System.Collections.Generic.List(Of Uvendia.Domain.PaymentMethodSetting))
  name.vb: CheckDuplicatePaymentMethodSettings(List(Of PaymentMethodSetting))
- uid: Uvendia.Domain.PaymentMethod.GetPrice(System.Nullable{System.Int64})
  commentId: M:Uvendia.Domain.PaymentMethod.GetPrice(System.Nullable{System.Int64})
  id: GetPrice(System.Nullable{System.Int64})
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: GetPrice(Nullable<Int64>)
  nameWithType: PaymentMethod.GetPrice(Nullable<Int64>)
  fullName: Uvendia.Domain.PaymentMethod.GetPrice(System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: GetPrice
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 138
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nGets the price.\n"
  example: []
  syntax:
    content: public decimal GetPrice(long? priceDefinitionId = default(long? ))
    parameters:
    - id: priceDefinitionId
      type: System.Nullable{System.Int64}
      description: The price definition identifier.
    return:
      type: System.Decimal
      description: ''
    content.vb: Public Function GetPrice(priceDefinitionId As Long? = Nothing) As Decimal
  overload: Uvendia.Domain.PaymentMethod.GetPrice*
  nameWithType.vb: PaymentMethod.GetPrice(Nullable(Of Int64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Uvendia.Domain.PaymentMethod.GetPrice(System.Nullable(Of System.Int64))
  name.vb: GetPrice(Nullable(Of Int64))
- uid: Uvendia.Domain.PaymentMethod.GetPrice(System.String)
  commentId: M:Uvendia.Domain.PaymentMethod.GetPrice(System.String)
  id: GetPrice(System.String)
  parent: Uvendia.Domain.PaymentMethod
  langs:
  - csharp
  - vb
  name: GetPrice(String)
  nameWithType: PaymentMethod.GetPrice(String)
  fullName: Uvendia.Domain.PaymentMethod.GetPrice(System.String)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/PaymentMethod.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: GetPrice
    path: ../../dazzling.studio/Uvendia.Domain/PaymentMethod.cs
    startLine: 154
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nGets the price.\n"
  example: []
  syntax:
    content: public decimal GetPrice(string priceDefinitionName)
    parameters:
    - id: priceDefinitionName
      type: System.String
      description: Name of the price definition.
    return:
      type: System.Decimal
      description: ''
    content.vb: Public Function GetPrice(priceDefinitionName As String) As Decimal
  overload: Uvendia.Domain.PaymentMethod.GetPrice*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Uvendia.Domain
  commentId: N:Uvendia.Domain
  name: Uvendia.Domain
  nameWithType: Uvendia.Domain
  fullName: Uvendia.Domain
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Uvendia.Domain.Webshop
  commentId: T:Uvendia.Domain.Webshop
  parent: Uvendia.Domain
  name: Webshop
  nameWithType: Webshop
  fullName: Uvendia.Domain.Webshop
- uid: Dazzling.Studio.SqlRepository.IDazzlingEntity
  commentId: T:Dazzling.Studio.SqlRepository.IDazzlingEntity
  parent: Dazzling.Studio.SqlRepository
  name: IDazzlingEntity
  nameWithType: IDazzlingEntity
  fullName: Dazzling.Studio.SqlRepository.IDazzlingEntity
- uid: Uvendia.Domain.Webshop.PropertyIdChanged
  commentId: E:Uvendia.Domain.Webshop.PropertyIdChanged
  parent: Uvendia.Domain.Webshop
  name: PropertyIdChanged
  nameWithType: Webshop.PropertyIdChanged
  fullName: Uvendia.Domain.Webshop.PropertyIdChanged
- uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  commentId: M:Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: OnPropertyIdChanged(Object, EventArgs)
  nameWithType: Webshop.OnPropertyIdChanged(Object, EventArgs)
  fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object, System.EventArgs)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
    name: OnPropertyIdChanged
    nameWithType: Webshop.OnPropertyIdChanged
    fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
    name: OnPropertyIdChanged
    nameWithType: Webshop.OnPropertyIdChanged
    fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.Id
  commentId: P:Uvendia.Domain.Webshop.Id
  parent: Uvendia.Domain.Webshop
  name: Id
  nameWithType: Webshop.Id
  fullName: Uvendia.Domain.Webshop.Id
- uid: Uvendia.Domain.Webshop.CreatedOn
  commentId: P:Uvendia.Domain.Webshop.CreatedOn
  parent: Uvendia.Domain.Webshop
  name: CreatedOn
  nameWithType: Webshop.CreatedOn
  fullName: Uvendia.Domain.Webshop.CreatedOn
- uid: Uvendia.Domain.Webshop.ModifiedOn
  commentId: P:Uvendia.Domain.Webshop.ModifiedOn
  parent: Uvendia.Domain.Webshop
  name: ModifiedOn
  nameWithType: Webshop.ModifiedOn
  fullName: Uvendia.Domain.Webshop.ModifiedOn
- uid: Uvendia.Domain.Webshop.CreatedBy
  commentId: P:Uvendia.Domain.Webshop.CreatedBy
  parent: Uvendia.Domain.Webshop
  name: CreatedBy
  nameWithType: Webshop.CreatedBy
  fullName: Uvendia.Domain.Webshop.CreatedBy
- uid: Uvendia.Domain.Webshop.ModifiedBy
  commentId: P:Uvendia.Domain.Webshop.ModifiedBy
  parent: Uvendia.Domain.Webshop
  name: ModifiedBy
  nameWithType: Webshop.ModifiedBy
  fullName: Uvendia.Domain.Webshop.ModifiedBy
- uid: Uvendia.Domain.Webshop.PublicatedOn
  commentId: P:Uvendia.Domain.Webshop.PublicatedOn
  parent: Uvendia.Domain.Webshop
  name: PublicatedOn
  nameWithType: Webshop.PublicatedOn
  fullName: Uvendia.Domain.Webshop.PublicatedOn
- uid: Uvendia.Domain.Webshop.Rowversion
  commentId: P:Uvendia.Domain.Webshop.Rowversion
  parent: Uvendia.Domain.Webshop
  name: Rowversion
  nameWithType: Webshop.Rowversion
  fullName: Uvendia.Domain.Webshop.Rowversion
- uid: Uvendia.Domain.Webshop.IsValid
  commentId: M:Uvendia.Domain.Webshop.IsValid
  parent: Uvendia.Domain.Webshop
  name: IsValid()
  nameWithType: Webshop.IsValid()
  fullName: Uvendia.Domain.Webshop.IsValid()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.IsValid
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.IsValid
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.IsValid(System.String)
  commentId: M:Uvendia.Domain.Webshop.IsValid(System.String)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: IsValid(String)
  nameWithType: Webshop.IsValid(String)
  fullName: Uvendia.Domain.Webshop.IsValid(System.String)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.IsValid(System.String)
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.IsValid(System.String)
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetValidationErrors
  commentId: M:Uvendia.Domain.Webshop.GetValidationErrors
  parent: Uvendia.Domain.Webshop
  name: GetValidationErrors()
  nameWithType: Webshop.GetValidationErrors()
  fullName: Uvendia.Domain.Webshop.GetValidationErrors()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetValidationErrors
    name: GetValidationErrors
    nameWithType: Webshop.GetValidationErrors
    fullName: Uvendia.Domain.Webshop.GetValidationErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetValidationErrors
    name: GetValidationErrors
    nameWithType: Webshop.GetValidationErrors
    fullName: Uvendia.Domain.Webshop.GetValidationErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetCurrentCultureName
  commentId: M:Uvendia.Domain.Webshop.GetCurrentCultureName
  parent: Uvendia.Domain.Webshop
  name: GetCurrentCultureName()
  nameWithType: Webshop.GetCurrentCultureName()
  fullName: Uvendia.Domain.Webshop.GetCurrentCultureName()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureName
    name: GetCurrentCultureName
    nameWithType: Webshop.GetCurrentCultureName
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureName
    name: GetCurrentCultureName
    nameWithType: Webshop.GetCurrentCultureName
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  commentId: M:Uvendia.Domain.Webshop.GetCurrentCultureInfo
  parent: Uvendia.Domain.Webshop
  name: GetCurrentCultureInfo()
  nameWithType: Webshop.GetCurrentCultureInfo()
  fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
    name: GetCurrentCultureInfo
    nameWithType: Webshop.GetCurrentCultureInfo
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
    name: GetCurrentCultureInfo
    nameWithType: Webshop.GetCurrentCultureInfo
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  commentId: M:Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: GetTranslation(IList<Translation>, String)
  nameWithType: Webshop.GetTranslation(IList<Translation>, String)
  fullName: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList<Uvendia.Domain.Translation>, System.String)
  nameWithType.vb: Webshop.GetTranslation(IList(Of Translation), String)
  fullName.vb: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList(Of Uvendia.Domain.Translation), System.String)
  name.vb: GetTranslation(IList(Of Translation), String)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
    name: GetTranslation
    nameWithType: Webshop.GetTranslation
    fullName: Uvendia.Domain.Webshop.GetTranslation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
    name: GetTranslation
    nameWithType: Webshop.GetTranslation
    fullName: Uvendia.Domain.Webshop.GetTranslation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dazzling.Studio.SqlRepository
  commentId: N:Dazzling.Studio.SqlRepository
  name: Dazzling.Studio.SqlRepository
  nameWithType: Dazzling.Studio.SqlRepository
  fullName: Dazzling.Studio.SqlRepository
- uid: Uvendia.Domain.PaymentMethod.LogoId*
  commentId: Overload:Uvendia.Domain.PaymentMethod.LogoId
  name: LogoId
  nameWithType: PaymentMethod.LogoId
  fullName: Uvendia.Domain.PaymentMethod.LogoId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Uvendia.Domain.PaymentMethod.Name*
  commentId: Overload:Uvendia.Domain.PaymentMethod.Name
  name: Name
  nameWithType: PaymentMethod.Name
  fullName: Uvendia.Domain.PaymentMethod.Name
- uid: Uvendia.Domain.PaymentMethod.Description*
  commentId: Overload:Uvendia.Domain.PaymentMethod.Description
  name: Description
  nameWithType: PaymentMethod.Description
  fullName: Uvendia.Domain.PaymentMethod.Description
- uid: Uvendia.Domain.PaymentMethod.ServicePercentageFee*
  commentId: Overload:Uvendia.Domain.PaymentMethod.ServicePercentageFee
  name: ServicePercentageFee
  nameWithType: PaymentMethod.ServicePercentageFee
  fullName: Uvendia.Domain.PaymentMethod.ServicePercentageFee
- uid: System.Nullable{System.Decimal}
  commentId: T:System.Nullable{System.Decimal}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Decimal>
  nameWithType: Nullable<Decimal>
  fullName: System.Nullable<System.Decimal>
  nameWithType.vb: Nullable(Of Decimal)
  fullName.vb: System.Nullable(Of System.Decimal)
  name.vb: Nullable(Of Decimal)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    nameWithType: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.PaymentMethod.Enabled*
  commentId: Overload:Uvendia.Domain.PaymentMethod.Enabled
  name: Enabled
  nameWithType: PaymentMethod.Enabled
  fullName: Uvendia.Domain.PaymentMethod.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Uvendia.Domain.PaymentMethod.PriceCollection*
  commentId: Overload:Uvendia.Domain.PaymentMethod.PriceCollection
  name: PriceCollection
  nameWithType: PaymentMethod.PriceCollection
  fullName: Uvendia.Domain.PaymentMethod.PriceCollection
- uid: System.Collections.Generic.IList{Uvendia.Domain.Price}
  commentId: T:System.Collections.Generic.IList{Uvendia.Domain.Price}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Price>
  nameWithType: IList<Price>
  fullName: System.Collections.Generic.IList<Uvendia.Domain.Price>
  nameWithType.vb: IList(Of Price)
  fullName.vb: System.Collections.Generic.IList(Of Uvendia.Domain.Price)
  name.vb: IList(Of Price)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Price
    name: Price
    nameWithType: Price
    fullName: Uvendia.Domain.Price
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Price
    name: Price
    nameWithType: Price
    fullName: Uvendia.Domain.Price
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Uvendia.Domain.PaymentMethod.AvailableInCountries*
  commentId: Overload:Uvendia.Domain.PaymentMethod.AvailableInCountries
  name: AvailableInCountries
  nameWithType: PaymentMethod.AvailableInCountries
  fullName: Uvendia.Domain.PaymentMethod.AvailableInCountries
- uid: Uvendia.Domain.PaymentMethod.Item*
  commentId: Overload:Uvendia.Domain.PaymentMethod.Item
  name: Item
  nameWithType: PaymentMethod.Item
  fullName: Uvendia.Domain.PaymentMethod.Item
- uid: Uvendia.Domain.PaymentMethod.SerializedSettings*
  commentId: Overload:Uvendia.Domain.PaymentMethod.SerializedSettings
  name: SerializedSettings
  nameWithType: PaymentMethod.SerializedSettings
  fullName: Uvendia.Domain.PaymentMethod.SerializedSettings
- uid: Uvendia.Domain.PaymentMethod.Settings*
  commentId: Overload:Uvendia.Domain.PaymentMethod.Settings
  name: Settings
  nameWithType: PaymentMethod.Settings
  fullName: Uvendia.Domain.PaymentMethod.Settings
- uid: System.Collections.Generic.List{Uvendia.Domain.PaymentMethodSetting}
  commentId: T:System.Collections.Generic.List{Uvendia.Domain.PaymentMethodSetting}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PaymentMethodSetting>
  nameWithType: List<PaymentMethodSetting>
  fullName: System.Collections.Generic.List<Uvendia.Domain.PaymentMethodSetting>
  nameWithType.vb: List(Of PaymentMethodSetting)
  fullName.vb: System.Collections.Generic.List(Of Uvendia.Domain.PaymentMethodSetting)
  name.vb: List(Of PaymentMethodSetting)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.PaymentMethodSetting
    name: PaymentMethodSetting
    nameWithType: PaymentMethodSetting
    fullName: Uvendia.Domain.PaymentMethodSetting
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.PaymentMethodSetting
    name: PaymentMethodSetting
    nameWithType: PaymentMethodSetting
    fullName: Uvendia.Domain.PaymentMethodSetting
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.PaymentMethod.GetCountries*
  commentId: Overload:Uvendia.Domain.PaymentMethod.GetCountries
  name: GetCountries
  nameWithType: PaymentMethod.GetCountries
  fullName: Uvendia.Domain.PaymentMethod.GetCountries
- uid: System.Collections.Generic.IEnumerable{Uvendia.Domain.Entities.Country}
  commentId: T:System.Collections.Generic.IEnumerable{Uvendia.Domain.Entities.Country}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Country>
  nameWithType: IEnumerable<Country>
  fullName: System.Collections.Generic.IEnumerable<Uvendia.Domain.Entities.Country>
  nameWithType.vb: IEnumerable(Of Country)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Uvendia.Domain.Entities.Country)
  name.vb: IEnumerable(Of Country)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Entities.Country
    name: Country
    nameWithType: Country
    fullName: Uvendia.Domain.Entities.Country
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Entities.Country
    name: Country
    nameWithType: Country
    fullName: Uvendia.Domain.Entities.Country
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.PaymentMethod.HasPrices*
  commentId: Overload:Uvendia.Domain.PaymentMethod.HasPrices
  name: HasPrices
  nameWithType: PaymentMethod.HasPrices
  fullName: Uvendia.Domain.PaymentMethod.HasPrices
- uid: Uvendia.Domain.PaymentMethod.CheckDuplicatePaymentMethodSettings*
  commentId: Overload:Uvendia.Domain.PaymentMethod.CheckDuplicatePaymentMethodSettings
  name: CheckDuplicatePaymentMethodSettings
  nameWithType: PaymentMethod.CheckDuplicatePaymentMethodSettings
  fullName: Uvendia.Domain.PaymentMethod.CheckDuplicatePaymentMethodSettings
- uid: Uvendia.Domain.PaymentMethod.GetPrice*
  commentId: Overload:Uvendia.Domain.PaymentMethod.GetPrice
  name: GetPrice
  nameWithType: PaymentMethod.GetPrice
  fullName: Uvendia.Domain.PaymentMethod.GetPrice
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
