### YamlMime:ManagedReference
items:
- uid: Uvendia.Domain.Extendable
  commentId: T:Uvendia.Domain.Extendable
  id: Extendable
  parent: Uvendia.Domain
  children:
  - Uvendia.Domain.Extendable.#ctor
  - Uvendia.Domain.Extendable.CheckPropertyRequired(System.Collections.Generic.List{Uvendia.Domain.PropertyValue})
  - Uvendia.Domain.Extendable.ContainsKey(System.String)
  - Uvendia.Domain.Extendable.CreateHtmlControlFactory(System.String,System.Boolean,System.String)
  - Uvendia.Domain.Extendable.Definition
  - Uvendia.Domain.Extendable.DefinitionId
  - Uvendia.Domain.Extendable.GetPropertiesAsString
  - Uvendia.Domain.Extendable.HasVariantProperties
  - Uvendia.Domain.Extendable.Item(System.String)
  - Uvendia.Domain.Extendable.LazyLoadProperties
  - Uvendia.Domain.Extendable.Properties
  langs:
  - csharp
  - vb
  name: Extendable
  nameWithType: Extendable
  fullName: Uvendia.Domain.Extendable
  type: Class
  source:
    remote:
      path: Uvendia.Domain/Extendable.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Extendable
    path: ../../dazzling.studio/Uvendia.Domain/Extendable.cs
    startLine: 16
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: 'public class Extendable : Webshop, IDazzlingEntity'
    content.vb: >-
      Public Class Extendable
          Inherits Webshop
          Implements IDazzlingEntity
  inheritance:
  - System.Object
  - Uvendia.Domain.Webshop
  derivedClasses:
  - Uvendia.Domain.Category
  - Uvendia.Domain.Event
  - Uvendia.Domain.Product
  - Uvendia.Domain.Store
  implements:
  - Dazzling.Studio.SqlRepository.IDazzlingEntity
  inheritedMembers:
  - Uvendia.Domain.Webshop.PropertyIdChanged
  - Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  - Uvendia.Domain.Webshop.Id
  - Uvendia.Domain.Webshop.CreatedOn
  - Uvendia.Domain.Webshop.ModifiedOn
  - Uvendia.Domain.Webshop.CreatedBy
  - Uvendia.Domain.Webshop.ModifiedBy
  - Uvendia.Domain.Webshop.PublicatedOn
  - Uvendia.Domain.Webshop.Rowversion
  - Uvendia.Domain.Webshop.IsValid
  - Uvendia.Domain.Webshop.IsValid(System.String)
  - Uvendia.Domain.Webshop.GetValidationErrors
  - Uvendia.Domain.Webshop.GetCurrentCultureName
  - Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Uvendia.Domain.Extendable.#ctor
  commentId: M:Uvendia.Domain.Extendable.#ctor
  id: '#ctor'
  parent: Uvendia.Domain.Extendable
  langs:
  - csharp
  - vb
  name: Extendable()
  nameWithType: Extendable.Extendable()
  fullName: Uvendia.Domain.Extendable.Extendable()
  type: Constructor
  source:
    remote:
      path: Uvendia.Domain/Extendable.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: .ctor
    path: ../../dazzling.studio/Uvendia.Domain/Extendable.cs
    startLine: 21
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public Extendable()
    content.vb: Public Sub New
  overload: Uvendia.Domain.Extendable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Extendable.DefinitionId
  commentId: P:Uvendia.Domain.Extendable.DefinitionId
  id: DefinitionId
  parent: Uvendia.Domain.Extendable
  langs:
  - csharp
  - vb
  name: DefinitionId
  nameWithType: Extendable.DefinitionId
  fullName: Uvendia.Domain.Extendable.DefinitionId
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Extendable.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: DefinitionId
    path: ../../dazzling.studio/Uvendia.Domain/Extendable.cs
    startLine: 26
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public long? DefinitionId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Property DefinitionId As Long?
  overload: Uvendia.Domain.Extendable.DefinitionId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Extendable.Definition
  commentId: P:Uvendia.Domain.Extendable.Definition
  id: Definition
  parent: Uvendia.Domain.Extendable
  langs:
  - csharp
  - vb
  name: Definition
  nameWithType: Extendable.Definition
  fullName: Uvendia.Domain.Extendable.Definition
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Extendable.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Definition
    path: ../../dazzling.studio/Uvendia.Domain/Extendable.cs
    startLine: 29
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public Definition Definition { get; set; }
    parameters: []
    return:
      type: Uvendia.Domain.Definition
    content.vb: Public Property Definition As Definition
  overload: Uvendia.Domain.Extendable.Definition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Extendable.Item(System.String)
  commentId: P:Uvendia.Domain.Extendable.Item(System.String)
  id: Item(System.String)
  parent: Uvendia.Domain.Extendable
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: Extendable.Item[String]
  fullName: Uvendia.Domain.Extendable.Item[System.String]
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Extendable.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: this[]
    path: ../../dazzling.studio/Uvendia.Domain/Extendable.cs
    startLine: 40
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nGets the <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref> with the specified property name.\n"
  example: []
  syntax:
    content: public object this[string propertyName] { get; }
    parameters:
    - id: propertyName
      type: System.String
      description: Name of the property.
    return:
      type: System.Object
      description: "\nThe <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public ReadOnly Property Item(propertyName As String) As Object
  overload: Uvendia.Domain.Extendable.Item*
  nameWithType.vb: Extendable.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Uvendia.Domain.Extendable.Item(System.String)
  name.vb: Item(String)
- uid: Uvendia.Domain.Extendable.Properties
  commentId: P:Uvendia.Domain.Extendable.Properties
  id: Properties
  parent: Uvendia.Domain.Extendable
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: Extendable.Properties
  fullName: Uvendia.Domain.Extendable.Properties
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Extendable.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Properties
    path: ../../dazzling.studio/Uvendia.Domain/Extendable.cs
    startLine: 55
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: >-
      [ExtendedPropertyValidate]

      public IList<PropertyValue> Properties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Uvendia.Domain.PropertyValue}
    content.vb: >-
      <ExtendedPropertyValidate>

      Public Property Properties As IList(Of PropertyValue)
  overload: Uvendia.Domain.Extendable.Properties*
  attributes:
  - type: Uvendia.Domain.Validation.ExtendedPropertyValidateAttribute
    ctor: Uvendia.Domain.Validation.ExtendedPropertyValidateAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Extendable.GetPropertiesAsString
  commentId: M:Uvendia.Domain.Extendable.GetPropertiesAsString
  id: GetPropertiesAsString
  parent: Uvendia.Domain.Extendable
  langs:
  - csharp
  - vb
  name: GetPropertiesAsString()
  nameWithType: Extendable.GetPropertiesAsString()
  fullName: Uvendia.Domain.Extendable.GetPropertiesAsString()
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Extendable.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: GetPropertiesAsString
    path: ../../dazzling.studio/Uvendia.Domain/Extendable.cs
    startLine: 62
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  syntax:
    content: public string GetPropertiesAsString()
    return:
      type: System.String
    content.vb: Public Function GetPropertiesAsString As String
  overload: Uvendia.Domain.Extendable.GetPropertiesAsString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Extendable.CreateHtmlControlFactory(System.String,System.Boolean,System.String)
  commentId: M:Uvendia.Domain.Extendable.CreateHtmlControlFactory(System.String,System.Boolean,System.String)
  id: CreateHtmlControlFactory(System.String,System.Boolean,System.String)
  parent: Uvendia.Domain.Extendable
  langs:
  - csharp
  - vb
  name: CreateHtmlControlFactory(String, Boolean, String)
  nameWithType: Extendable.CreateHtmlControlFactory(String, Boolean, String)
  fullName: Uvendia.Domain.Extendable.CreateHtmlControlFactory(System.String, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Extendable.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: CreateHtmlControlFactory
    path: ../../dazzling.studio/Uvendia.Domain/Extendable.cs
    startLine: 83
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nCreates the HTML control factory.\n"
  example: []
  syntax:
    content: public HtmlControlFactory CreateHtmlControlFactory(string containerCssClass = "row", bool renderLabel = true, string prefix = null)
    parameters:
    - id: containerCssClass
      type: System.String
      description: The container CSS class.
    - id: renderLabel
      type: System.Boolean
      description: if set to <code>true</code> [render label].
    - id: prefix
      type: System.String
      description: The prefix.
    return:
      type: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
      description: ''
    content.vb: Public Function CreateHtmlControlFactory(containerCssClass As String = "row", renderLabel As Boolean = True, prefix As String = Nothing) As HtmlControlFactory
  overload: Uvendia.Domain.Extendable.CreateHtmlControlFactory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Extendable.CheckPropertyRequired(System.Collections.Generic.List{Uvendia.Domain.PropertyValue})
  commentId: M:Uvendia.Domain.Extendable.CheckPropertyRequired(System.Collections.Generic.List{Uvendia.Domain.PropertyValue})
  id: CheckPropertyRequired(System.Collections.Generic.List{Uvendia.Domain.PropertyValue})
  parent: Uvendia.Domain.Extendable
  langs:
  - csharp
  - vb
  name: CheckPropertyRequired(List<PropertyValue>)
  nameWithType: Extendable.CheckPropertyRequired(List<PropertyValue>)
  fullName: Uvendia.Domain.Extendable.CheckPropertyRequired(System.Collections.Generic.List<Uvendia.Domain.PropertyValue>)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Extendable.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: CheckPropertyRequired
    path: ../../dazzling.studio/Uvendia.Domain/Extendable.cs
    startLine: 108
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nChecks the property required.\n"
  example: []
  syntax:
    content: public bool CheckPropertyRequired(List<PropertyValue> properties)
    parameters:
    - id: properties
      type: System.Collections.Generic.List{Uvendia.Domain.PropertyValue}
      description: The properties.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function CheckPropertyRequired(properties As List(Of PropertyValue)) As Boolean
  overload: Uvendia.Domain.Extendable.CheckPropertyRequired*
  nameWithType.vb: Extendable.CheckPropertyRequired(List(Of PropertyValue))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Uvendia.Domain.Extendable.CheckPropertyRequired(System.Collections.Generic.List(Of Uvendia.Domain.PropertyValue))
  name.vb: CheckPropertyRequired(List(Of PropertyValue))
- uid: Uvendia.Domain.Extendable.LazyLoadProperties
  commentId: M:Uvendia.Domain.Extendable.LazyLoadProperties
  id: LazyLoadProperties
  parent: Uvendia.Domain.Extendable
  langs:
  - csharp
  - vb
  name: LazyLoadProperties()
  nameWithType: Extendable.LazyLoadProperties()
  fullName: Uvendia.Domain.Extendable.LazyLoadProperties()
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Extendable.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: LazyLoadProperties
    path: ../../dazzling.studio/Uvendia.Domain/Extendable.cs
    startLine: 118
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nLazy load the extended properties.\n"
  example: []
  syntax:
    content: public void LazyLoadProperties()
    content.vb: Public Sub LazyLoadProperties
  overload: Uvendia.Domain.Extendable.LazyLoadProperties*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Extendable.HasVariantProperties
  commentId: M:Uvendia.Domain.Extendable.HasVariantProperties
  id: HasVariantProperties
  parent: Uvendia.Domain.Extendable
  langs:
  - csharp
  - vb
  name: HasVariantProperties()
  nameWithType: Extendable.HasVariantProperties()
  fullName: Uvendia.Domain.Extendable.HasVariantProperties()
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Extendable.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: HasVariantProperties
    path: ../../dazzling.studio/Uvendia.Domain/Extendable.cs
    startLine: 132
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nDetermines whether [has variant properties].\n"
  example: []
  syntax:
    content: public bool HasVariantProperties()
    return:
      type: System.Boolean
      description: "\n<code>true</code> if [has variant properties]; otherwise, <code>false</code>.\n"
    content.vb: Public Function HasVariantProperties As Boolean
  overload: Uvendia.Domain.Extendable.HasVariantProperties*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Extendable.ContainsKey(System.String)
  commentId: M:Uvendia.Domain.Extendable.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: Uvendia.Domain.Extendable
  langs:
  - csharp
  - vb
  name: ContainsKey(String)
  nameWithType: Extendable.ContainsKey(String)
  fullName: Uvendia.Domain.Extendable.ContainsKey(System.String)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Extendable.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: ContainsKey
    path: ../../dazzling.studio/Uvendia.Domain/Extendable.cs
    startLine: 146
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain
  summary: "\nDetermines whether the specified property name contains key.\n"
  example: []
  syntax:
    content: public bool ContainsKey(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
      description: Name of the property.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the specified property name contains key; otherwise, <code>false</code>.\n"
    content.vb: Public Function ContainsKey(propertyName As String) As Boolean
  overload: Uvendia.Domain.Extendable.ContainsKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Uvendia.Domain
  commentId: N:Uvendia.Domain
  name: Uvendia.Domain
  nameWithType: Uvendia.Domain
  fullName: Uvendia.Domain
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Uvendia.Domain.Webshop
  commentId: T:Uvendia.Domain.Webshop
  parent: Uvendia.Domain
  name: Webshop
  nameWithType: Webshop
  fullName: Uvendia.Domain.Webshop
- uid: Dazzling.Studio.SqlRepository.IDazzlingEntity
  commentId: T:Dazzling.Studio.SqlRepository.IDazzlingEntity
  parent: Dazzling.Studio.SqlRepository
  name: IDazzlingEntity
  nameWithType: IDazzlingEntity
  fullName: Dazzling.Studio.SqlRepository.IDazzlingEntity
- uid: Uvendia.Domain.Webshop.PropertyIdChanged
  commentId: E:Uvendia.Domain.Webshop.PropertyIdChanged
  parent: Uvendia.Domain.Webshop
  name: PropertyIdChanged
  nameWithType: Webshop.PropertyIdChanged
  fullName: Uvendia.Domain.Webshop.PropertyIdChanged
- uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  commentId: M:Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: OnPropertyIdChanged(Object, EventArgs)
  nameWithType: Webshop.OnPropertyIdChanged(Object, EventArgs)
  fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object, System.EventArgs)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
    name: OnPropertyIdChanged
    nameWithType: Webshop.OnPropertyIdChanged
    fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.OnPropertyIdChanged(System.Object,System.EventArgs)
    name: OnPropertyIdChanged
    nameWithType: Webshop.OnPropertyIdChanged
    fullName: Uvendia.Domain.Webshop.OnPropertyIdChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.EventArgs
    name: EventArgs
    nameWithType: EventArgs
    fullName: System.EventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.Id
  commentId: P:Uvendia.Domain.Webshop.Id
  parent: Uvendia.Domain.Webshop
  name: Id
  nameWithType: Webshop.Id
  fullName: Uvendia.Domain.Webshop.Id
- uid: Uvendia.Domain.Webshop.CreatedOn
  commentId: P:Uvendia.Domain.Webshop.CreatedOn
  parent: Uvendia.Domain.Webshop
  name: CreatedOn
  nameWithType: Webshop.CreatedOn
  fullName: Uvendia.Domain.Webshop.CreatedOn
- uid: Uvendia.Domain.Webshop.ModifiedOn
  commentId: P:Uvendia.Domain.Webshop.ModifiedOn
  parent: Uvendia.Domain.Webshop
  name: ModifiedOn
  nameWithType: Webshop.ModifiedOn
  fullName: Uvendia.Domain.Webshop.ModifiedOn
- uid: Uvendia.Domain.Webshop.CreatedBy
  commentId: P:Uvendia.Domain.Webshop.CreatedBy
  parent: Uvendia.Domain.Webshop
  name: CreatedBy
  nameWithType: Webshop.CreatedBy
  fullName: Uvendia.Domain.Webshop.CreatedBy
- uid: Uvendia.Domain.Webshop.ModifiedBy
  commentId: P:Uvendia.Domain.Webshop.ModifiedBy
  parent: Uvendia.Domain.Webshop
  name: ModifiedBy
  nameWithType: Webshop.ModifiedBy
  fullName: Uvendia.Domain.Webshop.ModifiedBy
- uid: Uvendia.Domain.Webshop.PublicatedOn
  commentId: P:Uvendia.Domain.Webshop.PublicatedOn
  parent: Uvendia.Domain.Webshop
  name: PublicatedOn
  nameWithType: Webshop.PublicatedOn
  fullName: Uvendia.Domain.Webshop.PublicatedOn
- uid: Uvendia.Domain.Webshop.Rowversion
  commentId: P:Uvendia.Domain.Webshop.Rowversion
  parent: Uvendia.Domain.Webshop
  name: Rowversion
  nameWithType: Webshop.Rowversion
  fullName: Uvendia.Domain.Webshop.Rowversion
- uid: Uvendia.Domain.Webshop.IsValid
  commentId: M:Uvendia.Domain.Webshop.IsValid
  parent: Uvendia.Domain.Webshop
  name: IsValid()
  nameWithType: Webshop.IsValid()
  fullName: Uvendia.Domain.Webshop.IsValid()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.IsValid
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.IsValid
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.IsValid(System.String)
  commentId: M:Uvendia.Domain.Webshop.IsValid(System.String)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: IsValid(String)
  nameWithType: Webshop.IsValid(String)
  fullName: Uvendia.Domain.Webshop.IsValid(System.String)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.IsValid(System.String)
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.IsValid(System.String)
    name: IsValid
    nameWithType: Webshop.IsValid
    fullName: Uvendia.Domain.Webshop.IsValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetValidationErrors
  commentId: M:Uvendia.Domain.Webshop.GetValidationErrors
  parent: Uvendia.Domain.Webshop
  name: GetValidationErrors()
  nameWithType: Webshop.GetValidationErrors()
  fullName: Uvendia.Domain.Webshop.GetValidationErrors()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetValidationErrors
    name: GetValidationErrors
    nameWithType: Webshop.GetValidationErrors
    fullName: Uvendia.Domain.Webshop.GetValidationErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetValidationErrors
    name: GetValidationErrors
    nameWithType: Webshop.GetValidationErrors
    fullName: Uvendia.Domain.Webshop.GetValidationErrors
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetCurrentCultureName
  commentId: M:Uvendia.Domain.Webshop.GetCurrentCultureName
  parent: Uvendia.Domain.Webshop
  name: GetCurrentCultureName()
  nameWithType: Webshop.GetCurrentCultureName()
  fullName: Uvendia.Domain.Webshop.GetCurrentCultureName()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureName
    name: GetCurrentCultureName
    nameWithType: Webshop.GetCurrentCultureName
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureName
    name: GetCurrentCultureName
    nameWithType: Webshop.GetCurrentCultureName
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  commentId: M:Uvendia.Domain.Webshop.GetCurrentCultureInfo
  parent: Uvendia.Domain.Webshop
  name: GetCurrentCultureInfo()
  nameWithType: Webshop.GetCurrentCultureInfo()
  fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo()
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
    name: GetCurrentCultureInfo
    nameWithType: Webshop.GetCurrentCultureInfo
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetCurrentCultureInfo
    name: GetCurrentCultureInfo
    nameWithType: Webshop.GetCurrentCultureInfo
    fullName: Uvendia.Domain.Webshop.GetCurrentCultureInfo
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  commentId: M:Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
  parent: Uvendia.Domain.Webshop
  isExternal: true
  name: GetTranslation(IList<Translation>, String)
  nameWithType: Webshop.GetTranslation(IList<Translation>, String)
  fullName: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList<Uvendia.Domain.Translation>, System.String)
  nameWithType.vb: Webshop.GetTranslation(IList(Of Translation), String)
  fullName.vb: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList(Of Uvendia.Domain.Translation), System.String)
  name.vb: GetTranslation(IList(Of Translation), String)
  spec.csharp:
  - uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
    name: GetTranslation
    nameWithType: Webshop.GetTranslation
    fullName: Uvendia.Domain.Webshop.GetTranslation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Webshop.GetTranslation(System.Collections.Generic.IList{Uvendia.Domain.Translation},System.String)
    name: GetTranslation
    nameWithType: Webshop.GetTranslation
    fullName: Uvendia.Domain.Webshop.GetTranslation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dazzling.Studio.SqlRepository
  commentId: N:Dazzling.Studio.SqlRepository
  name: Dazzling.Studio.SqlRepository
  nameWithType: Dazzling.Studio.SqlRepository
  fullName: Dazzling.Studio.SqlRepository
- uid: Uvendia.Domain.Extendable.#ctor*
  commentId: Overload:Uvendia.Domain.Extendable.#ctor
  name: Extendable
  nameWithType: Extendable.Extendable
  fullName: Uvendia.Domain.Extendable.Extendable
- uid: Uvendia.Domain.Extendable.DefinitionId*
  commentId: Overload:Uvendia.Domain.Extendable.DefinitionId
  name: DefinitionId
  nameWithType: Extendable.DefinitionId
  fullName: Uvendia.Domain.Extendable.DefinitionId
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Extendable.Definition*
  commentId: Overload:Uvendia.Domain.Extendable.Definition
  name: Definition
  nameWithType: Extendable.Definition
  fullName: Uvendia.Domain.Extendable.Definition
- uid: Uvendia.Domain.Definition
  commentId: T:Uvendia.Domain.Definition
  parent: Uvendia.Domain
  name: Definition
  nameWithType: Definition
  fullName: Uvendia.Domain.Definition
- uid: Uvendia.Domain.Extendable.Item*
  commentId: Overload:Uvendia.Domain.Extendable.Item
  name: Item
  nameWithType: Extendable.Item
  fullName: Uvendia.Domain.Extendable.Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Uvendia.Domain.Extendable.Properties*
  commentId: Overload:Uvendia.Domain.Extendable.Properties
  name: Properties
  nameWithType: Extendable.Properties
  fullName: Uvendia.Domain.Extendable.Properties
- uid: System.Collections.Generic.IList{Uvendia.Domain.PropertyValue}
  commentId: T:System.Collections.Generic.IList{Uvendia.Domain.PropertyValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<PropertyValue>
  nameWithType: IList<PropertyValue>
  fullName: System.Collections.Generic.IList<Uvendia.Domain.PropertyValue>
  nameWithType.vb: IList(Of PropertyValue)
  fullName.vb: System.Collections.Generic.IList(Of Uvendia.Domain.PropertyValue)
  name.vb: IList(Of PropertyValue)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.PropertyValue
    name: PropertyValue
    nameWithType: PropertyValue
    fullName: Uvendia.Domain.PropertyValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.PropertyValue
    name: PropertyValue
    nameWithType: PropertyValue
    fullName: Uvendia.Domain.PropertyValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Uvendia.Domain.Extendable.GetPropertiesAsString*
  commentId: Overload:Uvendia.Domain.Extendable.GetPropertiesAsString
  name: GetPropertiesAsString
  nameWithType: Extendable.GetPropertiesAsString
  fullName: Uvendia.Domain.Extendable.GetPropertiesAsString
- uid: Uvendia.Domain.Extendable.CreateHtmlControlFactory*
  commentId: Overload:Uvendia.Domain.Extendable.CreateHtmlControlFactory
  name: CreateHtmlControlFactory
  nameWithType: Extendable.CreateHtmlControlFactory
  fullName: Uvendia.Domain.Extendable.CreateHtmlControlFactory
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
  commentId: T:Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
  parent: Uvendia.Domain.Mvc.HtmlControls
  name: HtmlControlFactory
  nameWithType: HtmlControlFactory
  fullName: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
- uid: Uvendia.Domain.Mvc.HtmlControls
  commentId: N:Uvendia.Domain.Mvc.HtmlControls
  name: Uvendia.Domain.Mvc.HtmlControls
  nameWithType: Uvendia.Domain.Mvc.HtmlControls
  fullName: Uvendia.Domain.Mvc.HtmlControls
- uid: Uvendia.Domain.Extendable.CheckPropertyRequired*
  commentId: Overload:Uvendia.Domain.Extendable.CheckPropertyRequired
  name: CheckPropertyRequired
  nameWithType: Extendable.CheckPropertyRequired
  fullName: Uvendia.Domain.Extendable.CheckPropertyRequired
- uid: System.Collections.Generic.List{Uvendia.Domain.PropertyValue}
  commentId: T:System.Collections.Generic.List{Uvendia.Domain.PropertyValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PropertyValue>
  nameWithType: List<PropertyValue>
  fullName: System.Collections.Generic.List<Uvendia.Domain.PropertyValue>
  nameWithType.vb: List(Of PropertyValue)
  fullName.vb: System.Collections.Generic.List(Of Uvendia.Domain.PropertyValue)
  name.vb: List(Of PropertyValue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.PropertyValue
    name: PropertyValue
    nameWithType: PropertyValue
    fullName: Uvendia.Domain.PropertyValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.PropertyValue
    name: PropertyValue
    nameWithType: PropertyValue
    fullName: Uvendia.Domain.PropertyValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Extendable.LazyLoadProperties*
  commentId: Overload:Uvendia.Domain.Extendable.LazyLoadProperties
  name: LazyLoadProperties
  nameWithType: Extendable.LazyLoadProperties
  fullName: Uvendia.Domain.Extendable.LazyLoadProperties
- uid: Uvendia.Domain.Extendable.HasVariantProperties*
  commentId: Overload:Uvendia.Domain.Extendable.HasVariantProperties
  name: HasVariantProperties
  nameWithType: Extendable.HasVariantProperties
  fullName: Uvendia.Domain.Extendable.HasVariantProperties
- uid: Uvendia.Domain.Extendable.ContainsKey*
  commentId: Overload:Uvendia.Domain.Extendable.ContainsKey
  name: ContainsKey
  nameWithType: Extendable.ContainsKey
  fullName: Uvendia.Domain.Extendable.ContainsKey
