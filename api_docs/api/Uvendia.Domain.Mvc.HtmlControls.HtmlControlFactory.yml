### YamlMime:ManagedReference
items:
- uid: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
  commentId: T:Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
  id: HtmlControlFactory
  parent: Uvendia.Domain.Mvc.HtmlControls
  children:
  - Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.#ctor(Uvendia.Domain.Definition,System.Collections.Generic.IEnumerable{Uvendia.Domain.PropertyValue},System.String)
  - Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.ContainerCssClass
  - Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.Create(Uvendia.Domain.Definition,System.Collections.Generic.IEnumerable{Uvendia.Domain.PropertyValue},System.String)
  - Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderExtendedProperties(System.Boolean)
  - Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderLabel
  langs:
  - csharp
  - vb
  name: HtmlControlFactory
  nameWithType: HtmlControlFactory
  fullName: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
  type: Class
  source:
    remote:
      path: Uvendia.Domain/Mvc/HtmlControls/HtmlControlFactory.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: HtmlControlFactory
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/HtmlControls/HtmlControlFactory.cs
    startLine: 10
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.HtmlControls
  syntax:
    content: public class HtmlControlFactory
    content.vb: Public Class HtmlControlFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.Create(Uvendia.Domain.Definition,System.Collections.Generic.IEnumerable{Uvendia.Domain.PropertyValue},System.String)
  commentId: M:Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.Create(Uvendia.Domain.Definition,System.Collections.Generic.IEnumerable{Uvendia.Domain.PropertyValue},System.String)
  id: Create(Uvendia.Domain.Definition,System.Collections.Generic.IEnumerable{Uvendia.Domain.PropertyValue},System.String)
  parent: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
  langs:
  - csharp
  - vb
  name: Create(Definition, IEnumerable<PropertyValue>, String)
  nameWithType: HtmlControlFactory.Create(Definition, IEnumerable<PropertyValue>, String)
  fullName: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.Create(Uvendia.Domain.Definition, System.Collections.Generic.IEnumerable<Uvendia.Domain.PropertyValue>, System.String)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Mvc/HtmlControls/HtmlControlFactory.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Create
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/HtmlControls/HtmlControlFactory.cs
    startLine: 20
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.HtmlControls
  syntax:
    content: public static HtmlControlFactory Create(Definition definition, IEnumerable<PropertyValue> propertyValues, string prefixControlId)
    parameters:
    - id: definition
      type: Uvendia.Domain.Definition
    - id: propertyValues
      type: System.Collections.Generic.IEnumerable{Uvendia.Domain.PropertyValue}
    - id: prefixControlId
      type: System.String
    return:
      type: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
    content.vb: Public Shared Function Create(definition As Definition, propertyValues As IEnumerable(Of PropertyValue), prefixControlId As String) As HtmlControlFactory
  overload: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.Create*
  nameWithType.vb: HtmlControlFactory.Create(Definition, IEnumerable(Of PropertyValue), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.Create(Uvendia.Domain.Definition, System.Collections.Generic.IEnumerable(Of Uvendia.Domain.PropertyValue), System.String)
  name.vb: Create(Definition, IEnumerable(Of PropertyValue), String)
- uid: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.#ctor(Uvendia.Domain.Definition,System.Collections.Generic.IEnumerable{Uvendia.Domain.PropertyValue},System.String)
  commentId: M:Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.#ctor(Uvendia.Domain.Definition,System.Collections.Generic.IEnumerable{Uvendia.Domain.PropertyValue},System.String)
  id: '#ctor(Uvendia.Domain.Definition,System.Collections.Generic.IEnumerable{Uvendia.Domain.PropertyValue},System.String)'
  parent: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
  langs:
  - csharp
  - vb
  name: HtmlControlFactory(Definition, IEnumerable<PropertyValue>, String)
  nameWithType: HtmlControlFactory.HtmlControlFactory(Definition, IEnumerable<PropertyValue>, String)
  fullName: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.HtmlControlFactory(Uvendia.Domain.Definition, System.Collections.Generic.IEnumerable<Uvendia.Domain.PropertyValue>, System.String)
  type: Constructor
  source:
    remote:
      path: Uvendia.Domain/Mvc/HtmlControls/HtmlControlFactory.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: .ctor
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/HtmlControls/HtmlControlFactory.cs
    startLine: 25
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.HtmlControls
  syntax:
    content: public HtmlControlFactory(Definition definition, IEnumerable<PropertyValue> propertyValues, string prefixControlId)
    parameters:
    - id: definition
      type: Uvendia.Domain.Definition
    - id: propertyValues
      type: System.Collections.Generic.IEnumerable{Uvendia.Domain.PropertyValue}
    - id: prefixControlId
      type: System.String
    content.vb: Public Sub New(definition As Definition, propertyValues As IEnumerable(Of PropertyValue), prefixControlId As String)
  overload: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.#ctor*
  nameWithType.vb: HtmlControlFactory.HtmlControlFactory(Definition, IEnumerable(Of PropertyValue), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.HtmlControlFactory(Uvendia.Domain.Definition, System.Collections.Generic.IEnumerable(Of Uvendia.Domain.PropertyValue), System.String)
  name.vb: HtmlControlFactory(Definition, IEnumerable(Of PropertyValue), String)
- uid: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.ContainerCssClass
  commentId: P:Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.ContainerCssClass
  id: ContainerCssClass
  parent: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
  langs:
  - csharp
  - vb
  name: ContainerCssClass
  nameWithType: HtmlControlFactory.ContainerCssClass
  fullName: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.ContainerCssClass
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/HtmlControls/HtmlControlFactory.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: ContainerCssClass
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/HtmlControls/HtmlControlFactory.cs
    startLine: 48
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.HtmlControls
  summary: "\nGets or sets the container CSS class.\n"
  example: []
  syntax:
    content: public string ContainerCssClass { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe container CSS class.\n"
    content.vb: Public Property ContainerCssClass As String
  overload: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.ContainerCssClass*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderLabel
  commentId: P:Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderLabel
  id: RenderLabel
  parent: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
  langs:
  - csharp
  - vb
  name: RenderLabel
  nameWithType: HtmlControlFactory.RenderLabel
  fullName: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderLabel
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/HtmlControls/HtmlControlFactory.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: RenderLabel
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/HtmlControls/HtmlControlFactory.cs
    startLine: 60
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.HtmlControls
  summary: "\nGets or sets a value indicating whether [render label].\n"
  example: []
  syntax:
    content: public bool RenderLabel { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if [render label]; otherwise, <code>false</code>.\n"
    content.vb: Public Property RenderLabel As Boolean
  overload: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderLabel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderExtendedProperties(System.Boolean)
  commentId: M:Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderExtendedProperties(System.Boolean)
  id: RenderExtendedProperties(System.Boolean)
  parent: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
  langs:
  - csharp
  - vb
  name: RenderExtendedProperties(Boolean)
  nameWithType: HtmlControlFactory.RenderExtendedProperties(Boolean)
  fullName: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderExtendedProperties(System.Boolean)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Mvc/HtmlControls/HtmlControlFactory.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: RenderExtendedProperties
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/HtmlControls/HtmlControlFactory.cs
    startLine: 71
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.HtmlControls
  summary: "\nRenders the extended properties.\n"
  example: []
  syntax:
    content: public string RenderExtendedProperties(bool onlyVariants = false)
    parameters:
    - id: onlyVariants
      type: System.Boolean
      description: if set to <code>true</code> [only variants].
    return:
      type: System.String
      description: ''
    content.vb: Public Function RenderExtendedProperties(onlyVariants As Boolean = False) As String
  overload: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderExtendedProperties*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Uvendia.Domain.Mvc.HtmlControls
  commentId: N:Uvendia.Domain.Mvc.HtmlControls
  name: Uvendia.Domain.Mvc.HtmlControls
  nameWithType: Uvendia.Domain.Mvc.HtmlControls
  fullName: Uvendia.Domain.Mvc.HtmlControls
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.Create*
  commentId: Overload:Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.Create
  name: Create
  nameWithType: HtmlControlFactory.Create
  fullName: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.Create
- uid: Uvendia.Domain.Definition
  commentId: T:Uvendia.Domain.Definition
  parent: Uvendia.Domain
  name: Definition
  nameWithType: Definition
  fullName: Uvendia.Domain.Definition
- uid: System.Collections.Generic.IEnumerable{Uvendia.Domain.PropertyValue}
  commentId: T:System.Collections.Generic.IEnumerable{Uvendia.Domain.PropertyValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PropertyValue>
  nameWithType: IEnumerable<PropertyValue>
  fullName: System.Collections.Generic.IEnumerable<Uvendia.Domain.PropertyValue>
  nameWithType.vb: IEnumerable(Of PropertyValue)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Uvendia.Domain.PropertyValue)
  name.vb: IEnumerable(Of PropertyValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.PropertyValue
    name: PropertyValue
    nameWithType: PropertyValue
    fullName: Uvendia.Domain.PropertyValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.PropertyValue
    name: PropertyValue
    nameWithType: PropertyValue
    fullName: Uvendia.Domain.PropertyValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
  commentId: T:Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
  parent: Uvendia.Domain.Mvc.HtmlControls
  name: HtmlControlFactory
  nameWithType: HtmlControlFactory
  fullName: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory
- uid: Uvendia.Domain
  commentId: N:Uvendia.Domain
  name: Uvendia.Domain
  nameWithType: Uvendia.Domain
  fullName: Uvendia.Domain
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.#ctor*
  commentId: Overload:Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.#ctor
  name: HtmlControlFactory
  nameWithType: HtmlControlFactory.HtmlControlFactory
  fullName: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.HtmlControlFactory
- uid: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.ContainerCssClass*
  commentId: Overload:Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.ContainerCssClass
  name: ContainerCssClass
  nameWithType: HtmlControlFactory.ContainerCssClass
  fullName: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.ContainerCssClass
- uid: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderLabel*
  commentId: Overload:Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderLabel
  name: RenderLabel
  nameWithType: HtmlControlFactory.RenderLabel
  fullName: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderLabel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderExtendedProperties*
  commentId: Overload:Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderExtendedProperties
  name: RenderExtendedProperties
  nameWithType: HtmlControlFactory.RenderExtendedProperties
  fullName: Uvendia.Domain.Mvc.HtmlControls.HtmlControlFactory.RenderExtendedProperties
