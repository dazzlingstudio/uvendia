### YamlMime:ManagedReference
items:
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel
  commentId: T:Uvendia.Domain.Mvc.ViewModels.EventModel
  id: EventModel
  parent: Uvendia.Domain.Mvc.ViewModels
  children:
  - Uvendia.Domain.Mvc.ViewModels.EventModel.#ctor
  - Uvendia.Domain.Mvc.ViewModels.EventModel.AllCountries
  - Uvendia.Domain.Mvc.ViewModels.EventModel.AllEventStatus
  - Uvendia.Domain.Mvc.ViewModels.EventModel.CancellationInsurancePriceCollection
  - Uvendia.Domain.Mvc.ViewModels.EventModel.Definitions
  - Uvendia.Domain.Mvc.ViewModels.EventModel.DownloadCookeValue
  - Uvendia.Domain.Mvc.ViewModels.EventModel.Event
  - Uvendia.Domain.Mvc.ViewModels.EventModel.EventTypes
  - Uvendia.Domain.Mvc.ViewModels.EventModel.HasAddress
  - Uvendia.Domain.Mvc.ViewModels.EventModel.ImageFolders
  - Uvendia.Domain.Mvc.ViewModels.EventModel.Languages
  - Uvendia.Domain.Mvc.ViewModels.EventModel.PriceDefinitions
  - Uvendia.Domain.Mvc.ViewModels.EventModel.TicketTypes
  - Uvendia.Domain.Mvc.ViewModels.EventModel.Translations
  langs:
  - csharp
  - vb
  name: EventModel
  nameWithType: EventModel
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel
  type: Class
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: EventModel
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 14
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: 'public class EventModel : WebshopModel, ITranslationModel'
    content.vb: >-
      Public Class EventModel
          Inherits WebshopModel
          Implements ITranslationModel
  inheritance:
  - System.Object
  - Dazzling.Studio.Utils.BaseModel
  - Uvendia.Domain.Mvc.ViewModels.WebshopModel
  implements:
  - Uvendia.Domain.Mvc.ViewModels.ITranslationModel
  inheritedMembers:
  - Uvendia.Domain.Mvc.ViewModels.WebshopModel.TreePath
  - Uvendia.Domain.Mvc.ViewModels.WebshopModel.TreeSelectedNodePath
  - Dazzling.Studio.Utils.BaseModel.Title
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.#ctor
  commentId: M:Uvendia.Domain.Mvc.ViewModels.EventModel.#ctor
  id: '#ctor'
  parent: Uvendia.Domain.Mvc.ViewModels.EventModel
  langs:
  - csharp
  - vb
  name: EventModel()
  nameWithType: EventModel.EventModel()
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.EventModel()
  type: Constructor
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: .ctor
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 20
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: public EventModel()
    content.vb: Public Sub New
  overload: Uvendia.Domain.Mvc.ViewModels.EventModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.Event
  commentId: P:Uvendia.Domain.Mvc.ViewModels.EventModel.Event
  id: Event
  parent: Uvendia.Domain.Mvc.ViewModels.EventModel
  langs:
  - csharp
  - vb
  name: Event
  nameWithType: EventModel.Event
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.Event
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Event
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 25
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: public Event Event { get; set; }
    parameters: []
    return:
      type: Uvendia.Domain.Event
    content.vb: 'Public Property Event As '
  overload: Uvendia.Domain.Mvc.ViewModels.EventModel.Event*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.CancellationInsurancePriceCollection
  commentId: P:Uvendia.Domain.Mvc.ViewModels.EventModel.CancellationInsurancePriceCollection
  id: CancellationInsurancePriceCollection
  parent: Uvendia.Domain.Mvc.ViewModels.EventModel
  langs:
  - csharp
  - vb
  name: CancellationInsurancePriceCollection
  nameWithType: EventModel.CancellationInsurancePriceCollection
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.CancellationInsurancePriceCollection
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: CancellationInsurancePriceCollection
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 26
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: public IList<Price> CancellationInsurancePriceCollection { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Uvendia.Domain.Price}
    content.vb: Public Property CancellationInsurancePriceCollection As IList(Of Price)
  overload: Uvendia.Domain.Mvc.ViewModels.EventModel.CancellationInsurancePriceCollection*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.TicketTypes
  commentId: P:Uvendia.Domain.Mvc.ViewModels.EventModel.TicketTypes
  id: TicketTypes
  parent: Uvendia.Domain.Mvc.ViewModels.EventModel
  langs:
  - csharp
  - vb
  name: TicketTypes
  nameWithType: EventModel.TicketTypes
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.TicketTypes
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: TicketTypes
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 28
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: public IList<TicketType> TicketTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Uvendia.Domain.Settings.TicketType}
    content.vb: Public ReadOnly Property TicketTypes As IList(Of TicketType)
  overload: Uvendia.Domain.Mvc.ViewModels.EventModel.TicketTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.EventTypes
  commentId: P:Uvendia.Domain.Mvc.ViewModels.EventModel.EventTypes
  id: EventTypes
  parent: Uvendia.Domain.Mvc.ViewModels.EventModel
  langs:
  - csharp
  - vb
  name: EventTypes
  nameWithType: EventModel.EventTypes
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.EventTypes
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: EventTypes
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 30
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: public IList<SelectListItem> EventTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Web.Mvc.SelectListItem}
    content.vb: Public ReadOnly Property EventTypes As IList(Of SelectListItem)
  overload: Uvendia.Domain.Mvc.ViewModels.EventModel.EventTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.AllEventStatus
  commentId: P:Uvendia.Domain.Mvc.ViewModels.EventModel.AllEventStatus
  id: AllEventStatus
  parent: Uvendia.Domain.Mvc.ViewModels.EventModel
  langs:
  - csharp
  - vb
  name: AllEventStatus
  nameWithType: EventModel.AllEventStatus
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.AllEventStatus
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: AllEventStatus
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 45
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: public IList<SelectListItem> AllEventStatus { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Web.Mvc.SelectListItem}
    content.vb: Public ReadOnly Property AllEventStatus As IList(Of SelectListItem)
  overload: Uvendia.Domain.Mvc.ViewModels.EventModel.AllEventStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.Definitions
  commentId: P:Uvendia.Domain.Mvc.ViewModels.EventModel.Definitions
  id: Definitions
  parent: Uvendia.Domain.Mvc.ViewModels.EventModel
  langs:
  - csharp
  - vb
  name: Definitions
  nameWithType: EventModel.Definitions
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.Definitions
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Definitions
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 60
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: public IList<SelectListItem> Definitions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Web.Mvc.SelectListItem}
    content.vb: Public ReadOnly Property Definitions As IList(Of SelectListItem)
  overload: Uvendia.Domain.Mvc.ViewModels.EventModel.Definitions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.Translations
  commentId: P:Uvendia.Domain.Mvc.ViewModels.EventModel.Translations
  id: Translations
  parent: Uvendia.Domain.Mvc.ViewModels.EventModel
  langs:
  - csharp
  - vb
  name: Translations
  nameWithType: EventModel.Translations
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.Translations
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Translations
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 61
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: public IList<Translation> Translations { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Uvendia.Domain.Translation}
    content.vb: Public Property Translations As IList(Of Translation)
  overload: Uvendia.Domain.Mvc.ViewModels.EventModel.Translations*
  implements:
  - Uvendia.Domain.Mvc.ViewModels.ITranslationModel.Translations
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.AllCountries
  commentId: P:Uvendia.Domain.Mvc.ViewModels.EventModel.AllCountries
  id: AllCountries
  parent: Uvendia.Domain.Mvc.ViewModels.EventModel
  langs:
  - csharp
  - vb
  name: AllCountries
  nameWithType: EventModel.AllCountries
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.AllCountries
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: AllCountries
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 62
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: public IList<SelectListItem> AllCountries { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Web.Mvc.SelectListItem}
    content.vb: Public ReadOnly Property AllCountries As IList(Of SelectListItem)
  overload: Uvendia.Domain.Mvc.ViewModels.EventModel.AllCountries*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.HasAddress
  commentId: P:Uvendia.Domain.Mvc.ViewModels.EventModel.HasAddress
  id: HasAddress
  parent: Uvendia.Domain.Mvc.ViewModels.EventModel
  langs:
  - csharp
  - vb
  name: HasAddress
  nameWithType: EventModel.HasAddress
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.HasAddress
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: HasAddress
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 77
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: public bool HasAddress { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasAddress As Boolean
  overload: Uvendia.Domain.Mvc.ViewModels.EventModel.HasAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.PriceDefinitions
  commentId: P:Uvendia.Domain.Mvc.ViewModels.EventModel.PriceDefinitions
  id: PriceDefinitions
  parent: Uvendia.Domain.Mvc.ViewModels.EventModel
  langs:
  - csharp
  - vb
  name: PriceDefinitions
  nameWithType: EventModel.PriceDefinitions
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.PriceDefinitions
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: PriceDefinitions
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 80
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: public IEnumerable<PriceDefinition> PriceDefinitions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Uvendia.Domain.PriceDefinition}
    content.vb: Public ReadOnly Property PriceDefinitions As IEnumerable(Of PriceDefinition)
  overload: Uvendia.Domain.Mvc.ViewModels.EventModel.PriceDefinitions*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.Languages
  commentId: P:Uvendia.Domain.Mvc.ViewModels.EventModel.Languages
  id: Languages
  parent: Uvendia.Domain.Mvc.ViewModels.EventModel
  langs:
  - csharp
  - vb
  name: Languages
  nameWithType: EventModel.Languages
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.Languages
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Languages
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 83
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: public List<Language> Languages { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Uvendia.Domain.Entities.Language}
    content.vb: Public ReadOnly Property Languages As List(Of Language)
  overload: Uvendia.Domain.Mvc.ViewModels.EventModel.Languages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.ImageFolders
  commentId: P:Uvendia.Domain.Mvc.ViewModels.EventModel.ImageFolders
  id: ImageFolders
  parent: Uvendia.Domain.Mvc.ViewModels.EventModel
  langs:
  - csharp
  - vb
  name: ImageFolders
  nameWithType: EventModel.ImageFolders
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.ImageFolders
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: ImageFolders
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 96
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: public string ImageFolders { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ImageFolders As String
  overload: Uvendia.Domain.Mvc.ViewModels.EventModel.ImageFolders*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.DownloadCookeValue
  commentId: P:Uvendia.Domain.Mvc.ViewModels.EventModel.DownloadCookeValue
  id: DownloadCookeValue
  parent: Uvendia.Domain.Mvc.ViewModels.EventModel
  langs:
  - csharp
  - vb
  name: DownloadCookeValue
  nameWithType: EventModel.DownloadCookeValue
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.DownloadCookeValue
  type: Property
  source:
    remote:
      path: Uvendia.Domain/Mvc/ViewModels/EventModel.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: DownloadCookeValue
    path: ../../dazzling.studio/Uvendia.Domain/Mvc/ViewModels/EventModel.cs
    startLine: 98
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Mvc.ViewModels
  syntax:
    content: public string DownloadCookeValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DownloadCookeValue As String
  overload: Uvendia.Domain.Mvc.ViewModels.EventModel.DownloadCookeValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Uvendia.Domain.Mvc.ViewModels
  commentId: N:Uvendia.Domain.Mvc.ViewModels
  name: Uvendia.Domain.Mvc.ViewModels
  nameWithType: Uvendia.Domain.Mvc.ViewModels
  fullName: Uvendia.Domain.Mvc.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dazzling.Studio.Utils.BaseModel
  commentId: T:Dazzling.Studio.Utils.BaseModel
  parent: Dazzling.Studio.Utils
  name: BaseModel
  nameWithType: BaseModel
  fullName: Dazzling.Studio.Utils.BaseModel
- uid: Uvendia.Domain.Mvc.ViewModels.WebshopModel
  commentId: T:Uvendia.Domain.Mvc.ViewModels.WebshopModel
  parent: Uvendia.Domain.Mvc.ViewModels
  name: WebshopModel
  nameWithType: WebshopModel
  fullName: Uvendia.Domain.Mvc.ViewModels.WebshopModel
- uid: Uvendia.Domain.Mvc.ViewModels.ITranslationModel
  commentId: T:Uvendia.Domain.Mvc.ViewModels.ITranslationModel
  parent: Uvendia.Domain.Mvc.ViewModels
  name: ITranslationModel
  nameWithType: ITranslationModel
  fullName: Uvendia.Domain.Mvc.ViewModels.ITranslationModel
- uid: Uvendia.Domain.Mvc.ViewModels.WebshopModel.TreePath
  commentId: P:Uvendia.Domain.Mvc.ViewModels.WebshopModel.TreePath
  parent: Uvendia.Domain.Mvc.ViewModels.WebshopModel
  name: TreePath
  nameWithType: WebshopModel.TreePath
  fullName: Uvendia.Domain.Mvc.ViewModels.WebshopModel.TreePath
- uid: Uvendia.Domain.Mvc.ViewModels.WebshopModel.TreeSelectedNodePath
  commentId: P:Uvendia.Domain.Mvc.ViewModels.WebshopModel.TreeSelectedNodePath
  parent: Uvendia.Domain.Mvc.ViewModels.WebshopModel
  name: TreeSelectedNodePath
  nameWithType: WebshopModel.TreeSelectedNodePath
  fullName: Uvendia.Domain.Mvc.ViewModels.WebshopModel.TreeSelectedNodePath
- uid: Dazzling.Studio.Utils.BaseModel.Title
  commentId: P:Dazzling.Studio.Utils.BaseModel.Title
  parent: Dazzling.Studio.Utils.BaseModel
  name: Title
  nameWithType: BaseModel.Title
  fullName: Dazzling.Studio.Utils.BaseModel.Title
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dazzling.Studio.Utils
  commentId: N:Dazzling.Studio.Utils
  name: Dazzling.Studio.Utils
  nameWithType: Dazzling.Studio.Utils
  fullName: Dazzling.Studio.Utils
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.#ctor*
  commentId: Overload:Uvendia.Domain.Mvc.ViewModels.EventModel.#ctor
  name: EventModel
  nameWithType: EventModel.EventModel
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.EventModel
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.Event*
  commentId: Overload:Uvendia.Domain.Mvc.ViewModels.EventModel.Event
  name: Event
  nameWithType: EventModel.Event
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.Event
- uid: Uvendia.Domain.Event
  commentId: T:Uvendia.Domain.Event
  parent: Uvendia.Domain
  name: Event
  nameWithType: Event
  fullName: Uvendia.Domain.Event
- uid: Uvendia.Domain
  commentId: N:Uvendia.Domain
  name: Uvendia.Domain
  nameWithType: Uvendia.Domain
  fullName: Uvendia.Domain
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.CancellationInsurancePriceCollection*
  commentId: Overload:Uvendia.Domain.Mvc.ViewModels.EventModel.CancellationInsurancePriceCollection
  name: CancellationInsurancePriceCollection
  nameWithType: EventModel.CancellationInsurancePriceCollection
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.CancellationInsurancePriceCollection
- uid: System.Collections.Generic.IList{Uvendia.Domain.Price}
  commentId: T:System.Collections.Generic.IList{Uvendia.Domain.Price}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Price>
  nameWithType: IList<Price>
  fullName: System.Collections.Generic.IList<Uvendia.Domain.Price>
  nameWithType.vb: IList(Of Price)
  fullName.vb: System.Collections.Generic.IList(Of Uvendia.Domain.Price)
  name.vb: IList(Of Price)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Price
    name: Price
    nameWithType: Price
    fullName: Uvendia.Domain.Price
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Price
    name: Price
    nameWithType: Price
    fullName: Uvendia.Domain.Price
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.TicketTypes*
  commentId: Overload:Uvendia.Domain.Mvc.ViewModels.EventModel.TicketTypes
  name: TicketTypes
  nameWithType: EventModel.TicketTypes
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.TicketTypes
- uid: System.Collections.Generic.IList{Uvendia.Domain.Settings.TicketType}
  commentId: T:System.Collections.Generic.IList{Uvendia.Domain.Settings.TicketType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TicketType>
  nameWithType: IList<TicketType>
  fullName: System.Collections.Generic.IList<Uvendia.Domain.Settings.TicketType>
  nameWithType.vb: IList(Of TicketType)
  fullName.vb: System.Collections.Generic.IList(Of Uvendia.Domain.Settings.TicketType)
  name.vb: IList(Of TicketType)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Settings.TicketType
    name: TicketType
    nameWithType: TicketType
    fullName: Uvendia.Domain.Settings.TicketType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Settings.TicketType
    name: TicketType
    nameWithType: TicketType
    fullName: Uvendia.Domain.Settings.TicketType
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.EventTypes*
  commentId: Overload:Uvendia.Domain.Mvc.ViewModels.EventModel.EventTypes
  name: EventTypes
  nameWithType: EventModel.EventTypes
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.EventTypes
- uid: System.Collections.Generic.IList{System.Web.Mvc.SelectListItem}
  commentId: T:System.Collections.Generic.IList{System.Web.Mvc.SelectListItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SelectListItem>
  nameWithType: IList<SelectListItem>
  fullName: System.Collections.Generic.IList<System.Web.Mvc.SelectListItem>
  nameWithType.vb: IList(Of SelectListItem)
  fullName.vb: System.Collections.Generic.IList(Of System.Web.Mvc.SelectListItem)
  name.vb: IList(Of SelectListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.Mvc.SelectListItem
    name: SelectListItem
    nameWithType: SelectListItem
    fullName: System.Web.Mvc.SelectListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Web.Mvc.SelectListItem
    name: SelectListItem
    nameWithType: SelectListItem
    fullName: System.Web.Mvc.SelectListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.AllEventStatus*
  commentId: Overload:Uvendia.Domain.Mvc.ViewModels.EventModel.AllEventStatus
  name: AllEventStatus
  nameWithType: EventModel.AllEventStatus
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.AllEventStatus
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.Definitions*
  commentId: Overload:Uvendia.Domain.Mvc.ViewModels.EventModel.Definitions
  name: Definitions
  nameWithType: EventModel.Definitions
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.Definitions
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.Translations*
  commentId: Overload:Uvendia.Domain.Mvc.ViewModels.EventModel.Translations
  name: Translations
  nameWithType: EventModel.Translations
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.Translations
- uid: Uvendia.Domain.Mvc.ViewModels.ITranslationModel.Translations
  commentId: P:Uvendia.Domain.Mvc.ViewModels.ITranslationModel.Translations
  parent: Uvendia.Domain.Mvc.ViewModels.ITranslationModel
  name: Translations
  nameWithType: ITranslationModel.Translations
  fullName: Uvendia.Domain.Mvc.ViewModels.ITranslationModel.Translations
- uid: System.Collections.Generic.IList{Uvendia.Domain.Translation}
  commentId: T:System.Collections.Generic.IList{Uvendia.Domain.Translation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Translation>
  nameWithType: IList<Translation>
  fullName: System.Collections.Generic.IList<Uvendia.Domain.Translation>
  nameWithType.vb: IList(Of Translation)
  fullName.vb: System.Collections.Generic.IList(Of Uvendia.Domain.Translation)
  name.vb: IList(Of Translation)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.AllCountries*
  commentId: Overload:Uvendia.Domain.Mvc.ViewModels.EventModel.AllCountries
  name: AllCountries
  nameWithType: EventModel.AllCountries
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.AllCountries
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.HasAddress*
  commentId: Overload:Uvendia.Domain.Mvc.ViewModels.EventModel.HasAddress
  name: HasAddress
  nameWithType: EventModel.HasAddress
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.HasAddress
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.PriceDefinitions*
  commentId: Overload:Uvendia.Domain.Mvc.ViewModels.EventModel.PriceDefinitions
  name: PriceDefinitions
  nameWithType: EventModel.PriceDefinitions
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.PriceDefinitions
- uid: System.Collections.Generic.IEnumerable{Uvendia.Domain.PriceDefinition}
  commentId: T:System.Collections.Generic.IEnumerable{Uvendia.Domain.PriceDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<PriceDefinition>
  nameWithType: IEnumerable<PriceDefinition>
  fullName: System.Collections.Generic.IEnumerable<Uvendia.Domain.PriceDefinition>
  nameWithType.vb: IEnumerable(Of PriceDefinition)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Uvendia.Domain.PriceDefinition)
  name.vb: IEnumerable(Of PriceDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.PriceDefinition
    name: PriceDefinition
    nameWithType: PriceDefinition
    fullName: Uvendia.Domain.PriceDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.PriceDefinition
    name: PriceDefinition
    nameWithType: PriceDefinition
    fullName: Uvendia.Domain.PriceDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.Languages*
  commentId: Overload:Uvendia.Domain.Mvc.ViewModels.EventModel.Languages
  name: Languages
  nameWithType: EventModel.Languages
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.Languages
- uid: System.Collections.Generic.List{Uvendia.Domain.Entities.Language}
  commentId: T:System.Collections.Generic.List{Uvendia.Domain.Entities.Language}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Language>
  nameWithType: List<Language>
  fullName: System.Collections.Generic.List<Uvendia.Domain.Entities.Language>
  nameWithType.vb: List(Of Language)
  fullName.vb: System.Collections.Generic.List(Of Uvendia.Domain.Entities.Language)
  name.vb: List(Of Language)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Entities.Language
    name: Language
    nameWithType: Language
    fullName: Uvendia.Domain.Entities.Language
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Entities.Language
    name: Language
    nameWithType: Language
    fullName: Uvendia.Domain.Entities.Language
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.ImageFolders*
  commentId: Overload:Uvendia.Domain.Mvc.ViewModels.EventModel.ImageFolders
  name: ImageFolders
  nameWithType: EventModel.ImageFolders
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.ImageFolders
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Uvendia.Domain.Mvc.ViewModels.EventModel.DownloadCookeValue*
  commentId: Overload:Uvendia.Domain.Mvc.ViewModels.EventModel.DownloadCookeValue
  name: DownloadCookeValue
  nameWithType: EventModel.DownloadCookeValue
  fullName: Uvendia.Domain.Mvc.ViewModels.EventModel.DownloadCookeValue
