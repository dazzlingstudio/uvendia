### YamlMime:ManagedReference
items:
- uid: Uvendia.Domain.Repositories.Cart
  commentId: T:Uvendia.Domain.Repositories.Cart
  id: Cart
  parent: Uvendia.Domain.Repositories
  children:
  - Uvendia.Domain.Repositories.Cart.#ctor
  - Uvendia.Domain.Repositories.Cart.AddProduct(Uvendia.Domain.Cart.CartItem)
  - Uvendia.Domain.Repositories.Cart.AddTicket(Uvendia.Domain.Cart.CartItem)
  - Uvendia.Domain.Repositories.Cart.Delete(System.Guid,System.Guid)
  - Uvendia.Domain.Repositories.Cart.DeleteByCookieId(System.Guid)
  - Uvendia.Domain.Repositories.Cart.GetCartItemsByCookieId(System.Guid)
  - Uvendia.Domain.Repositories.Cart.UpdateQuantity(System.Guid,System.Guid,System.Int32)
  langs:
  - csharp
  - vb
  name: Cart
  nameWithType: Cart
  fullName: Uvendia.Domain.Repositories.Cart
  type: Class
  source:
    remote:
      path: Uvendia.Domain/Repositories/Cart.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Cart
    path: ../../dazzling.studio/Uvendia.Domain/Repositories/Cart.cs
    startLine: 12
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Repositories
  syntax:
    content: 'public class Cart : UvendiaRepository<CartItem>, IBaseRepository<CartItem>'
    content.vb: >-
      Public Class Cart
          Inherits UvendiaRepository(Of CartItem)
          Implements IBaseRepository(Of CartItem)
  inheritance:
  - System.Object
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  - Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}
  implements:
  - Dazzling.Studio.SqlRepository.IBaseRepository{Uvendia.Domain.Cart.CartItem}
  inheritedMembers:
  - Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}.CreateUnitOfWork
  - Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}.Save(Uvendia.Domain.Cart.CartItem)
  - Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}._syncLock
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}._connectionStringName
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}._tableSchema
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}._tableName
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Instance``1
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.TableSchema
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.TableName
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.CreateConnection
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.SetConnection(System.Data.SqlClient.SqlConnection)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Single``1({IID})
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Single(System.String,System.Object)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.All``1({TType}[])
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.All(System.String,System.String,System.Int32,System.Object)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Insert``1(Uvendia.Domain.Cart.CartItem)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Update(Uvendia.Domain.Cart.CartItem)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Delete(Uvendia.Domain.Cart.CartItem)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.DeleteById``1({Y})
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Count(System.String,System.Object)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Uvendia.Domain.Repositories.Cart.#ctor
  commentId: M:Uvendia.Domain.Repositories.Cart.#ctor
  id: '#ctor'
  parent: Uvendia.Domain.Repositories.Cart
  langs:
  - csharp
  - vb
  name: Cart()
  nameWithType: Cart.Cart()
  fullName: Uvendia.Domain.Repositories.Cart.Cart()
  type: Constructor
  source:
    remote:
      path: Uvendia.Domain/Repositories/Cart.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: .ctor
    path: ../../dazzling.studio/Uvendia.Domain/Repositories/Cart.cs
    startLine: 14
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Repositories
  syntax:
    content: public Cart()
    content.vb: Public Sub New
  overload: Uvendia.Domain.Repositories.Cart.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Repositories.Cart.GetCartItemsByCookieId(System.Guid)
  commentId: M:Uvendia.Domain.Repositories.Cart.GetCartItemsByCookieId(System.Guid)
  id: GetCartItemsByCookieId(System.Guid)
  parent: Uvendia.Domain.Repositories.Cart
  langs:
  - csharp
  - vb
  name: GetCartItemsByCookieId(Guid)
  nameWithType: Cart.GetCartItemsByCookieId(Guid)
  fullName: Uvendia.Domain.Repositories.Cart.GetCartItemsByCookieId(System.Guid)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Repositories/Cart.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: GetCartItemsByCookieId
    path: ../../dazzling.studio/Uvendia.Domain/Repositories/Cart.cs
    startLine: 19
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Repositories
  syntax:
    content: public IEnumerable<CartItem> GetCartItemsByCookieId(Guid cookieId)
    parameters:
    - id: cookieId
      type: System.Guid
    return:
      type: System.Collections.Generic.IEnumerable{Uvendia.Domain.Cart.CartItem}
    content.vb: Public Function GetCartItemsByCookieId(cookieId As Guid) As IEnumerable(Of CartItem)
  overload: Uvendia.Domain.Repositories.Cart.GetCartItemsByCookieId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Repositories.Cart.AddProduct(Uvendia.Domain.Cart.CartItem)
  commentId: M:Uvendia.Domain.Repositories.Cart.AddProduct(Uvendia.Domain.Cart.CartItem)
  id: AddProduct(Uvendia.Domain.Cart.CartItem)
  parent: Uvendia.Domain.Repositories.Cart
  langs:
  - csharp
  - vb
  name: AddProduct(CartItem)
  nameWithType: Cart.AddProduct(CartItem)
  fullName: Uvendia.Domain.Repositories.Cart.AddProduct(Uvendia.Domain.Cart.CartItem)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Repositories/Cart.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: AddProduct
    path: ../../dazzling.studio/Uvendia.Domain/Repositories/Cart.cs
    startLine: 33
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Repositories
  syntax:
    content: public CartAction AddProduct(CartItem item)
    parameters:
    - id: item
      type: Uvendia.Domain.Cart.CartItem
    return:
      type: Uvendia.Domain.Cart.CartAction
    content.vb: Public Function AddProduct(item As CartItem) As CartAction
  overload: Uvendia.Domain.Repositories.Cart.AddProduct*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Repositories.Cart.AddTicket(Uvendia.Domain.Cart.CartItem)
  commentId: M:Uvendia.Domain.Repositories.Cart.AddTicket(Uvendia.Domain.Cart.CartItem)
  id: AddTicket(Uvendia.Domain.Cart.CartItem)
  parent: Uvendia.Domain.Repositories.Cart
  langs:
  - csharp
  - vb
  name: AddTicket(CartItem)
  nameWithType: Cart.AddTicket(CartItem)
  fullName: Uvendia.Domain.Repositories.Cart.AddTicket(Uvendia.Domain.Cart.CartItem)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Repositories/Cart.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: AddTicket
    path: ../../dazzling.studio/Uvendia.Domain/Repositories/Cart.cs
    startLine: 67
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Repositories
  syntax:
    content: public CartAction AddTicket(CartItem item)
    parameters:
    - id: item
      type: Uvendia.Domain.Cart.CartItem
    return:
      type: Uvendia.Domain.Cart.CartAction
    content.vb: Public Function AddTicket(item As CartItem) As CartAction
  overload: Uvendia.Domain.Repositories.Cart.AddTicket*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Repositories.Cart.Delete(System.Guid,System.Guid)
  commentId: M:Uvendia.Domain.Repositories.Cart.Delete(System.Guid,System.Guid)
  id: Delete(System.Guid,System.Guid)
  parent: Uvendia.Domain.Repositories.Cart
  langs:
  - csharp
  - vb
  name: Delete(Guid, Guid)
  nameWithType: Cart.Delete(Guid, Guid)
  fullName: Uvendia.Domain.Repositories.Cart.Delete(System.Guid, System.Guid)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Repositories/Cart.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Delete
    path: ../../dazzling.studio/Uvendia.Domain/Repositories/Cart.cs
    startLine: 100
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Repositories
  syntax:
    content: public void Delete(Guid cookieId, Guid cartItemId)
    parameters:
    - id: cookieId
      type: System.Guid
    - id: cartItemId
      type: System.Guid
    content.vb: Public Sub Delete(cookieId As Guid, cartItemId As Guid)
  overload: Uvendia.Domain.Repositories.Cart.Delete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Repositories.Cart.DeleteByCookieId(System.Guid)
  commentId: M:Uvendia.Domain.Repositories.Cart.DeleteByCookieId(System.Guid)
  id: DeleteByCookieId(System.Guid)
  parent: Uvendia.Domain.Repositories.Cart
  langs:
  - csharp
  - vb
  name: DeleteByCookieId(Guid)
  nameWithType: Cart.DeleteByCookieId(Guid)
  fullName: Uvendia.Domain.Repositories.Cart.DeleteByCookieId(System.Guid)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Repositories/Cart.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: DeleteByCookieId
    path: ../../dazzling.studio/Uvendia.Domain/Repositories/Cart.cs
    startLine: 110
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Repositories
  syntax:
    content: public void DeleteByCookieId(Guid cookieId)
    parameters:
    - id: cookieId
      type: System.Guid
    content.vb: Public Sub DeleteByCookieId(cookieId As Guid)
  overload: Uvendia.Domain.Repositories.Cart.DeleteByCookieId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Repositories.Cart.UpdateQuantity(System.Guid,System.Guid,System.Int32)
  commentId: M:Uvendia.Domain.Repositories.Cart.UpdateQuantity(System.Guid,System.Guid,System.Int32)
  id: UpdateQuantity(System.Guid,System.Guid,System.Int32)
  parent: Uvendia.Domain.Repositories.Cart
  langs:
  - csharp
  - vb
  name: UpdateQuantity(Guid, Guid, Int32)
  nameWithType: Cart.UpdateQuantity(Guid, Guid, Int32)
  fullName: Uvendia.Domain.Repositories.Cart.UpdateQuantity(System.Guid, System.Guid, System.Int32)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Repositories/Cart.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: UpdateQuantity
    path: ../../dazzling.studio/Uvendia.Domain/Repositories/Cart.cs
    startLine: 120
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Repositories
  syntax:
    content: public void UpdateQuantity(Guid cookieId, Guid cartItemId, int quantity)
    parameters:
    - id: cookieId
      type: System.Guid
    - id: cartItemId
      type: System.Guid
    - id: quantity
      type: System.Int32
    content.vb: Public Sub UpdateQuantity(cookieId As Guid, cartItemId As Guid, quantity As Integer)
  overload: Uvendia.Domain.Repositories.Cart.UpdateQuantity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Uvendia.Domain.Repositories
  commentId: N:Uvendia.Domain.Repositories
  name: Uvendia.Domain.Repositories
  nameWithType: Uvendia.Domain.Repositories
  fullName: Uvendia.Domain.Repositories
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  commentId: T:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  parent: Dazzling.Studio.SqlRepository
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1
  name: BaseRepository<CartItem>
  nameWithType: BaseRepository<CartItem>
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>
  nameWithType.vb: BaseRepository(Of CartItem)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem)
  name.vb: BaseRepository(Of CartItem)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1
    name: BaseRepository
    nameWithType: BaseRepository
    fullName: Dazzling.Studio.SqlRepository.BaseRepository
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1
    name: BaseRepository
    nameWithType: BaseRepository
    fullName: Dazzling.Studio.SqlRepository.BaseRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}
  commentId: T:Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}
  parent: Uvendia.Domain.Repositories
  definition: Uvendia.Domain.Repositories.UvendiaRepository`1
  name: UvendiaRepository<CartItem>
  nameWithType: UvendiaRepository<CartItem>
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<Uvendia.Domain.Cart.CartItem>
  nameWithType.vb: UvendiaRepository(Of CartItem)
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of Uvendia.Domain.Cart.CartItem)
  name.vb: UvendiaRepository(Of CartItem)
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1
    name: UvendiaRepository
    nameWithType: UvendiaRepository
    fullName: Uvendia.Domain.Repositories.UvendiaRepository
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1
    name: UvendiaRepository
    nameWithType: UvendiaRepository
    fullName: Uvendia.Domain.Repositories.UvendiaRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.IBaseRepository{Uvendia.Domain.Cart.CartItem}
  commentId: T:Dazzling.Studio.SqlRepository.IBaseRepository{Uvendia.Domain.Cart.CartItem}
  parent: Dazzling.Studio.SqlRepository
  definition: Dazzling.Studio.SqlRepository.IBaseRepository`1
  name: IBaseRepository<CartItem>
  nameWithType: IBaseRepository<CartItem>
  fullName: Dazzling.Studio.SqlRepository.IBaseRepository<Uvendia.Domain.Cart.CartItem>
  nameWithType.vb: IBaseRepository(Of CartItem)
  fullName.vb: Dazzling.Studio.SqlRepository.IBaseRepository(Of Uvendia.Domain.Cart.CartItem)
  name.vb: IBaseRepository(Of CartItem)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.IBaseRepository`1
    name: IBaseRepository
    nameWithType: IBaseRepository
    fullName: Dazzling.Studio.SqlRepository.IBaseRepository
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.IBaseRepository`1
    name: IBaseRepository
    nameWithType: IBaseRepository
    fullName: Dazzling.Studio.SqlRepository.IBaseRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}.CreateUnitOfWork
  commentId: M:Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}.CreateUnitOfWork
  parent: Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}
  definition: Uvendia.Domain.Repositories.UvendiaRepository`1.CreateUnitOfWork
  name: CreateUnitOfWork()
  nameWithType: UvendiaRepository<CartItem>.CreateUnitOfWork()
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<Uvendia.Domain.Cart.CartItem>.CreateUnitOfWork()
  nameWithType.vb: UvendiaRepository(Of CartItem).CreateUnitOfWork()
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of Uvendia.Domain.Cart.CartItem).CreateUnitOfWork()
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.CreateUnitOfWork
    name: CreateUnitOfWork
    nameWithType: UvendiaRepository<CartItem>.CreateUnitOfWork
    fullName: Uvendia.Domain.Repositories.UvendiaRepository<Uvendia.Domain.Cart.CartItem>.CreateUnitOfWork
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.CreateUnitOfWork
    name: CreateUnitOfWork
    nameWithType: UvendiaRepository(Of CartItem).CreateUnitOfWork
    fullName: Uvendia.Domain.Repositories.UvendiaRepository(Of Uvendia.Domain.Cart.CartItem).CreateUnitOfWork
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}.Save(Uvendia.Domain.Cart.CartItem)
  commentId: M:Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}.Save(Uvendia.Domain.Cart.CartItem)
  parent: Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}
  definition: Uvendia.Domain.Repositories.UvendiaRepository`1.Save(`0)
  name: Save(CartItem)
  nameWithType: UvendiaRepository<CartItem>.Save(CartItem)
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<Uvendia.Domain.Cart.CartItem>.Save(Uvendia.Domain.Cart.CartItem)
  nameWithType.vb: UvendiaRepository(Of CartItem).Save(CartItem)
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of Uvendia.Domain.Cart.CartItem).Save(Uvendia.Domain.Cart.CartItem)
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.Save(`0)
    name: Save
    nameWithType: UvendiaRepository<CartItem>.Save
    fullName: Uvendia.Domain.Repositories.UvendiaRepository<Uvendia.Domain.Cart.CartItem>.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.Save(`0)
    name: Save
    nameWithType: UvendiaRepository(Of CartItem).Save
    fullName: Uvendia.Domain.Repositories.UvendiaRepository(Of Uvendia.Domain.Cart.CartItem).Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
  commentId: M:Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
  parent: Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Cart.CartItem}
  definition: Uvendia.Domain.Repositories.UvendiaRepository`1.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
  name: SetAuditInfo(Webshop, Webshop)
  nameWithType: UvendiaRepository<CartItem>.SetAuditInfo(Webshop, Webshop)
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<Uvendia.Domain.Cart.CartItem>.SetAuditInfo(Uvendia.Domain.Webshop, Uvendia.Domain.Webshop)
  nameWithType.vb: UvendiaRepository(Of CartItem).SetAuditInfo(Webshop, Webshop)
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of Uvendia.Domain.Cart.CartItem).SetAuditInfo(Uvendia.Domain.Webshop, Uvendia.Domain.Webshop)
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
    name: SetAuditInfo
    nameWithType: UvendiaRepository<CartItem>.SetAuditInfo
    fullName: Uvendia.Domain.Repositories.UvendiaRepository<Uvendia.Domain.Cart.CartItem>.SetAuditInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
    name: SetAuditInfo
    nameWithType: UvendiaRepository(Of CartItem).SetAuditInfo
    fullName: Uvendia.Domain.Repositories.UvendiaRepository(Of Uvendia.Domain.Cart.CartItem).SetAuditInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}._syncLock
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}._syncLock
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1._syncLock
  name: _syncLock
  nameWithType: BaseRepository<CartItem>._syncLock
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>._syncLock
  nameWithType.vb: BaseRepository(Of CartItem)._syncLock
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem)._syncLock
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}._connectionStringName
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}._connectionStringName
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1._connectionStringName
  name: _connectionStringName
  nameWithType: BaseRepository<CartItem>._connectionStringName
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>._connectionStringName
  nameWithType.vb: BaseRepository(Of CartItem)._connectionStringName
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem)._connectionStringName
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}._tableSchema
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}._tableSchema
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1._tableSchema
  name: _tableSchema
  nameWithType: BaseRepository<CartItem>._tableSchema
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>._tableSchema
  nameWithType.vb: BaseRepository(Of CartItem)._tableSchema
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem)._tableSchema
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}._tableName
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}._tableName
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1._tableName
  name: _tableName
  nameWithType: BaseRepository<CartItem>._tableName
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>._tableName
  nameWithType.vb: BaseRepository(Of CartItem)._tableName
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem)._tableName
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Instance``1
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Instance``1
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Instance``1
  name: Instance<R>()
  nameWithType: BaseRepository<CartItem>.Instance<R>()
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Instance<R>()
  nameWithType.vb: BaseRepository(Of CartItem).Instance(Of R)()
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Instance(Of R)()
  name.vb: Instance(Of R)()
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Instance``1
    name: Instance<R>
    nameWithType: BaseRepository<CartItem>.Instance<R>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Instance<R>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Instance``1
    name: Instance(Of R)
    nameWithType: BaseRepository(Of CartItem).Instance(Of R)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Instance(Of R)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.TableSchema
  commentId: P:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.TableSchema
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.TableSchema
  name: TableSchema
  nameWithType: BaseRepository<CartItem>.TableSchema
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.TableSchema
  nameWithType.vb: BaseRepository(Of CartItem).TableSchema
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).TableSchema
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.TableName
  commentId: P:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.TableName
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.TableName
  name: TableName
  nameWithType: BaseRepository<CartItem>.TableName
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.TableName
  nameWithType.vb: BaseRepository(Of CartItem).TableName
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).TableName
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.CreateConnection
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.CreateConnection
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.CreateConnection
  name: CreateConnection()
  nameWithType: BaseRepository<CartItem>.CreateConnection()
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.CreateConnection()
  nameWithType.vb: BaseRepository(Of CartItem).CreateConnection()
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).CreateConnection()
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.CreateConnection
    name: CreateConnection
    nameWithType: BaseRepository<CartItem>.CreateConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.CreateConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.CreateConnection
    name: CreateConnection
    nameWithType: BaseRepository(Of CartItem).CreateConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).CreateConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.SetConnection(System.Data.SqlClient.SqlConnection)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.SetConnection(System.Data.SqlClient.SqlConnection)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.SetConnection(System.Data.SqlClient.SqlConnection)
  name: SetConnection(SqlConnection)
  nameWithType: BaseRepository<CartItem>.SetConnection(SqlConnection)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.SetConnection(System.Data.SqlClient.SqlConnection)
  nameWithType.vb: BaseRepository(Of CartItem).SetConnection(SqlConnection)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).SetConnection(System.Data.SqlClient.SqlConnection)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.SetConnection(System.Data.SqlClient.SqlConnection)
    name: SetConnection
    nameWithType: BaseRepository<CartItem>.SetConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.SetConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.SqlClient.SqlConnection
    name: SqlConnection
    nameWithType: SqlConnection
    fullName: System.Data.SqlClient.SqlConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.SetConnection(System.Data.SqlClient.SqlConnection)
    name: SetConnection
    nameWithType: BaseRepository(Of CartItem).SetConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).SetConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.SqlClient.SqlConnection
    name: SqlConnection
    nameWithType: SqlConnection
    fullName: System.Data.SqlClient.SqlConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Single``1({IID})
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Single``1(``0)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Single``1(``0)
  name: Single<IID>(IID)
  nameWithType: BaseRepository<CartItem>.Single<IID>(IID)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Single<IID>(IID)
  nameWithType.vb: BaseRepository(Of CartItem).Single(Of IID)(IID)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Single(Of IID)(IID)
  name.vb: Single(Of IID)(IID)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single``1(``0)
    name: Single<IID>
    nameWithType: BaseRepository<CartItem>.Single<IID>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Single<IID>
  - name: (
    nameWithType: (
    fullName: (
  - name: IID
    nameWithType: IID
    fullName: IID
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single``1(``0)
    name: Single(Of IID)
    nameWithType: BaseRepository(Of CartItem).Single(Of IID)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Single(Of IID)
  - name: (
    nameWithType: (
    fullName: (
  - name: IID
    nameWithType: IID
    fullName: IID
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Single(System.String,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Single(System.String,System.Object)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Single(System.String,System.Object)
  name: Single(String, Object)
  nameWithType: BaseRepository<CartItem>.Single(String, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Single(System.String, System.Object)
  nameWithType.vb: BaseRepository(Of CartItem).Single(String, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Single(System.String, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single(System.String,System.Object)
    name: Single
    nameWithType: BaseRepository<CartItem>.Single
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Single
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single(System.String,System.Object)
    name: Single
    nameWithType: BaseRepository(Of CartItem).Single
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Single
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.All``1({TType}[])
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.All``1(``0[])
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.All``1(``0[])
  name: All<TType>(TType[])
  nameWithType: BaseRepository<CartItem>.All<TType>(TType[])
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.All<TType>(TType[])
  nameWithType.vb: BaseRepository(Of CartItem).All(Of TType)(TType())
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).All(Of TType)(TType())
  name.vb: All(Of TType)(TType())
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All``1(``0[])
    name: All<TType>
    nameWithType: BaseRepository<CartItem>.All<TType>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.All<TType>
  - name: (
    nameWithType: (
    fullName: (
  - name: TType
    nameWithType: TType
    fullName: TType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All``1(``0[])
    name: All(Of TType)
    nameWithType: BaseRepository(Of CartItem).All(Of TType)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).All(Of TType)
  - name: (
    nameWithType: (
    fullName: (
  - name: TType
    nameWithType: TType
    fullName: TType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.All(System.String,System.String,System.Int32,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.All(System.String,System.String,System.Int32,System.Object)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.All(System.String,System.String,System.Int32,System.Object)
  name: All(String, String, Int32, Object)
  nameWithType: BaseRepository<CartItem>.All(String, String, Int32, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.All(System.String, System.String, System.Int32, System.Object)
  nameWithType.vb: BaseRepository(Of CartItem).All(String, String, Int32, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).All(System.String, System.String, System.Int32, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All(System.String,System.String,System.Int32,System.Object)
    name: All
    nameWithType: BaseRepository<CartItem>.All
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.All
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All(System.String,System.String,System.Int32,System.Object)
    name: All
    nameWithType: BaseRepository(Of CartItem).All
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).All
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
  name: Paged(Int32, String, String, Int32, Int32, Object)
  nameWithType: BaseRepository<CartItem>.Paged(Int32, String, String, Int32, Int32, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Paged(System.Int32, System.String, System.String, System.Int32, System.Int32, System.Object)
  nameWithType.vb: BaseRepository(Of CartItem).Paged(Int32, String, String, Int32, Int32, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Paged(System.Int32, System.String, System.String, System.Int32, System.Int32, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
    name: Paged
    nameWithType: BaseRepository<CartItem>.Paged
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Paged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
    name: Paged
    nameWithType: BaseRepository(Of CartItem).Paged
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Paged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Insert``1(Uvendia.Domain.Cart.CartItem)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Insert``1(Uvendia.Domain.Cart.CartItem)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Insert``1(`0)
  name: Insert<Y>(CartItem)
  nameWithType: BaseRepository<CartItem>.Insert<Y>(CartItem)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Insert<Y>(Uvendia.Domain.Cart.CartItem)
  nameWithType.vb: BaseRepository(Of CartItem).Insert(Of Y)(CartItem)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Insert(Of Y)(Uvendia.Domain.Cart.CartItem)
  name.vb: Insert(Of Y)(CartItem)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Insert``1(`0)
    name: Insert<Y>
    nameWithType: BaseRepository<CartItem>.Insert<Y>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Insert<Y>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Insert``1(`0)
    name: Insert(Of Y)
    nameWithType: BaseRepository(Of CartItem).Insert(Of Y)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Insert(Of Y)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Update(Uvendia.Domain.Cart.CartItem)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Update(Uvendia.Domain.Cart.CartItem)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Update(`0)
  name: Update(CartItem)
  nameWithType: BaseRepository<CartItem>.Update(CartItem)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Update(Uvendia.Domain.Cart.CartItem)
  nameWithType.vb: BaseRepository(Of CartItem).Update(CartItem)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Update(Uvendia.Domain.Cart.CartItem)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Update(`0)
    name: Update
    nameWithType: BaseRepository<CartItem>.Update
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Update(`0)
    name: Update
    nameWithType: BaseRepository(Of CartItem).Update
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Delete(Uvendia.Domain.Cart.CartItem)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Delete(Uvendia.Domain.Cart.CartItem)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Delete(`0)
  name: Delete(CartItem)
  nameWithType: BaseRepository<CartItem>.Delete(CartItem)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Delete(Uvendia.Domain.Cart.CartItem)
  nameWithType.vb: BaseRepository(Of CartItem).Delete(CartItem)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Delete(Uvendia.Domain.Cart.CartItem)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Delete(`0)
    name: Delete
    nameWithType: BaseRepository<CartItem>.Delete
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Delete(`0)
    name: Delete
    nameWithType: BaseRepository(Of CartItem).Delete
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.DeleteById``1({Y})
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.DeleteById``1(``0)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.DeleteById``1(``0)
  name: DeleteById<Y>(Y)
  nameWithType: BaseRepository<CartItem>.DeleteById<Y>(Y)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.DeleteById<Y>(Y)
  nameWithType.vb: BaseRepository(Of CartItem).DeleteById(Of Y)(Y)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).DeleteById(Of Y)(Y)
  name.vb: DeleteById(Of Y)(Y)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.DeleteById``1(``0)
    name: DeleteById<Y>
    nameWithType: BaseRepository<CartItem>.DeleteById<Y>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.DeleteById<Y>
  - name: (
    nameWithType: (
    fullName: (
  - name: Y
    nameWithType: Y
    fullName: Y
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.DeleteById``1(``0)
    name: DeleteById(Of Y)
    nameWithType: BaseRepository(Of CartItem).DeleteById(Of Y)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).DeleteById(Of Y)
  - name: (
    nameWithType: (
    fullName: (
  - name: Y
    nameWithType: Y
    fullName: Y
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Count(System.String,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}.Count(System.String,System.Object)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Cart.CartItem}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Count(System.String,System.Object)
  name: Count(String, Object)
  nameWithType: BaseRepository<CartItem>.Count(String, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Count(System.String, System.Object)
  nameWithType.vb: BaseRepository(Of CartItem).Count(String, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Count(System.String, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Count(System.String,System.Object)
    name: Count
    nameWithType: BaseRepository<CartItem>.Count
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Cart.CartItem>.Count
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Count(System.String,System.Object)
    name: Count
    nameWithType: BaseRepository(Of CartItem).Count
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Cart.CartItem).Count
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1
  commentId: T:Dazzling.Studio.SqlRepository.BaseRepository`1
  name: BaseRepository<TEntity>
  nameWithType: BaseRepository<TEntity>
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>
  nameWithType.vb: BaseRepository(Of TEntity)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity)
  name.vb: BaseRepository(Of TEntity)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1
    name: BaseRepository
    nameWithType: BaseRepository
    fullName: Dazzling.Studio.SqlRepository.BaseRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1
    name: BaseRepository
    nameWithType: BaseRepository
    fullName: Dazzling.Studio.SqlRepository.BaseRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository
  commentId: N:Dazzling.Studio.SqlRepository
  name: Dazzling.Studio.SqlRepository
  nameWithType: Dazzling.Studio.SqlRepository
  fullName: Dazzling.Studio.SqlRepository
- uid: Uvendia.Domain.Repositories.UvendiaRepository`1
  commentId: T:Uvendia.Domain.Repositories.UvendiaRepository`1
  name: UvendiaRepository<TEntity>
  nameWithType: UvendiaRepository<TEntity>
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<TEntity>
  nameWithType.vb: UvendiaRepository(Of TEntity)
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of TEntity)
  name.vb: UvendiaRepository(Of TEntity)
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1
    name: UvendiaRepository
    nameWithType: UvendiaRepository
    fullName: Uvendia.Domain.Repositories.UvendiaRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1
    name: UvendiaRepository
    nameWithType: UvendiaRepository
    fullName: Uvendia.Domain.Repositories.UvendiaRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.IBaseRepository`1
  commentId: T:Dazzling.Studio.SqlRepository.IBaseRepository`1
  name: IBaseRepository<TEntity>
  nameWithType: IBaseRepository<TEntity>
  fullName: Dazzling.Studio.SqlRepository.IBaseRepository<TEntity>
  nameWithType.vb: IBaseRepository(Of TEntity)
  fullName.vb: Dazzling.Studio.SqlRepository.IBaseRepository(Of TEntity)
  name.vb: IBaseRepository(Of TEntity)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.IBaseRepository`1
    name: IBaseRepository
    nameWithType: IBaseRepository
    fullName: Dazzling.Studio.SqlRepository.IBaseRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.IBaseRepository`1
    name: IBaseRepository
    nameWithType: IBaseRepository
    fullName: Dazzling.Studio.SqlRepository.IBaseRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaRepository`1.CreateUnitOfWork
  commentId: M:Uvendia.Domain.Repositories.UvendiaRepository`1.CreateUnitOfWork
  name: CreateUnitOfWork()
  nameWithType: UvendiaRepository<TEntity>.CreateUnitOfWork()
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<TEntity>.CreateUnitOfWork()
  nameWithType.vb: UvendiaRepository(Of TEntity).CreateUnitOfWork()
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of TEntity).CreateUnitOfWork()
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.CreateUnitOfWork
    name: CreateUnitOfWork
    nameWithType: UvendiaRepository<TEntity>.CreateUnitOfWork
    fullName: Uvendia.Domain.Repositories.UvendiaRepository<TEntity>.CreateUnitOfWork
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.CreateUnitOfWork
    name: CreateUnitOfWork
    nameWithType: UvendiaRepository(Of TEntity).CreateUnitOfWork
    fullName: Uvendia.Domain.Repositories.UvendiaRepository(Of TEntity).CreateUnitOfWork
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaRepository`1.Save(`0)
  commentId: M:Uvendia.Domain.Repositories.UvendiaRepository`1.Save(`0)
  name: Save(TEntity)
  nameWithType: UvendiaRepository<TEntity>.Save(TEntity)
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<TEntity>.Save(TEntity)
  nameWithType.vb: UvendiaRepository(Of TEntity).Save(TEntity)
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of TEntity).Save(TEntity)
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.Save(`0)
    name: Save
    nameWithType: UvendiaRepository<TEntity>.Save
    fullName: Uvendia.Domain.Repositories.UvendiaRepository<TEntity>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.Save(`0)
    name: Save
    nameWithType: UvendiaRepository(Of TEntity).Save
    fullName: Uvendia.Domain.Repositories.UvendiaRepository(Of TEntity).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaRepository`1.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
  commentId: M:Uvendia.Domain.Repositories.UvendiaRepository`1.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
  name: SetAuditInfo(Webshop, Webshop)
  nameWithType: UvendiaRepository<TEntity>.SetAuditInfo(Webshop, Webshop)
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<TEntity>.SetAuditInfo(Uvendia.Domain.Webshop, Uvendia.Domain.Webshop)
  nameWithType.vb: UvendiaRepository(Of TEntity).SetAuditInfo(Webshop, Webshop)
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of TEntity).SetAuditInfo(Uvendia.Domain.Webshop, Uvendia.Domain.Webshop)
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
    name: SetAuditInfo
    nameWithType: UvendiaRepository<TEntity>.SetAuditInfo
    fullName: Uvendia.Domain.Repositories.UvendiaRepository<TEntity>.SetAuditInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
    name: SetAuditInfo
    nameWithType: UvendiaRepository(Of TEntity).SetAuditInfo
    fullName: Uvendia.Domain.Repositories.UvendiaRepository(Of TEntity).SetAuditInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1._syncLock
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository`1._syncLock
  name: _syncLock
  nameWithType: BaseRepository<TEntity>._syncLock
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>._syncLock
  nameWithType.vb: BaseRepository(Of TEntity)._syncLock
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity)._syncLock
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1._connectionStringName
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository`1._connectionStringName
  name: _connectionStringName
  nameWithType: BaseRepository<TEntity>._connectionStringName
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>._connectionStringName
  nameWithType.vb: BaseRepository(Of TEntity)._connectionStringName
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity)._connectionStringName
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1._tableSchema
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository`1._tableSchema
  name: _tableSchema
  nameWithType: BaseRepository<TEntity>._tableSchema
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>._tableSchema
  nameWithType.vb: BaseRepository(Of TEntity)._tableSchema
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity)._tableSchema
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1._tableName
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository`1._tableName
  name: _tableName
  nameWithType: BaseRepository<TEntity>._tableName
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>._tableName
  nameWithType.vb: BaseRepository(Of TEntity)._tableName
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity)._tableName
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Instance``1
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Instance``1
  name: Instance<R>()
  nameWithType: BaseRepository<TEntity>.Instance<R>()
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Instance<R>()
  nameWithType.vb: BaseRepository(Of TEntity).Instance(Of R)()
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Instance(Of R)()
  name.vb: Instance(Of R)()
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Instance``1
    name: Instance<R>
    nameWithType: BaseRepository<TEntity>.Instance<R>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Instance<R>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Instance``1
    name: Instance(Of R)
    nameWithType: BaseRepository(Of TEntity).Instance(Of R)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Instance(Of R)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.TableSchema
  commentId: P:Dazzling.Studio.SqlRepository.BaseRepository`1.TableSchema
  name: TableSchema
  nameWithType: BaseRepository<TEntity>.TableSchema
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.TableSchema
  nameWithType.vb: BaseRepository(Of TEntity).TableSchema
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).TableSchema
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.TableName
  commentId: P:Dazzling.Studio.SqlRepository.BaseRepository`1.TableName
  name: TableName
  nameWithType: BaseRepository<TEntity>.TableName
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.TableName
  nameWithType.vb: BaseRepository(Of TEntity).TableName
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).TableName
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.CreateConnection
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.CreateConnection
  name: CreateConnection()
  nameWithType: BaseRepository<TEntity>.CreateConnection()
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.CreateConnection()
  nameWithType.vb: BaseRepository(Of TEntity).CreateConnection()
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).CreateConnection()
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.CreateConnection
    name: CreateConnection
    nameWithType: BaseRepository<TEntity>.CreateConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.CreateConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.CreateConnection
    name: CreateConnection
    nameWithType: BaseRepository(Of TEntity).CreateConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).CreateConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.SetConnection(System.Data.SqlClient.SqlConnection)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.SetConnection(System.Data.SqlClient.SqlConnection)
  isExternal: true
  name: SetConnection(SqlConnection)
  nameWithType: BaseRepository<TEntity>.SetConnection(SqlConnection)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.SetConnection(System.Data.SqlClient.SqlConnection)
  nameWithType.vb: BaseRepository(Of TEntity).SetConnection(SqlConnection)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).SetConnection(System.Data.SqlClient.SqlConnection)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.SetConnection(System.Data.SqlClient.SqlConnection)
    name: SetConnection
    nameWithType: BaseRepository<TEntity>.SetConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.SetConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.SqlClient.SqlConnection
    name: SqlConnection
    nameWithType: SqlConnection
    fullName: System.Data.SqlClient.SqlConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.SetConnection(System.Data.SqlClient.SqlConnection)
    name: SetConnection
    nameWithType: BaseRepository(Of TEntity).SetConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).SetConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.SqlClient.SqlConnection
    name: SqlConnection
    nameWithType: SqlConnection
    fullName: System.Data.SqlClient.SqlConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single``1(``0)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Single``1(``0)
  name: Single<IID>(IID)
  nameWithType: BaseRepository<TEntity>.Single<IID>(IID)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Single<IID>(IID)
  nameWithType.vb: BaseRepository(Of TEntity).Single(Of IID)(IID)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Single(Of IID)(IID)
  name.vb: Single(Of IID)(IID)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single``1(``0)
    name: Single<IID>
    nameWithType: BaseRepository<TEntity>.Single<IID>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Single<IID>
  - name: (
    nameWithType: (
    fullName: (
  - name: IID
    nameWithType: IID
    fullName: IID
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single``1(``0)
    name: Single(Of IID)
    nameWithType: BaseRepository(Of TEntity).Single(Of IID)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Single(Of IID)
  - name: (
    nameWithType: (
    fullName: (
  - name: IID
    nameWithType: IID
    fullName: IID
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single(System.String,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Single(System.String,System.Object)
  isExternal: true
  name: Single(String, Object)
  nameWithType: BaseRepository<TEntity>.Single(String, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Single(System.String, System.Object)
  nameWithType.vb: BaseRepository(Of TEntity).Single(String, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Single(System.String, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single(System.String,System.Object)
    name: Single
    nameWithType: BaseRepository<TEntity>.Single
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Single
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single(System.String,System.Object)
    name: Single
    nameWithType: BaseRepository(Of TEntity).Single
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Single
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All``1(``0[])
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.All``1(``0[])
  name: All<TType>(TType[])
  nameWithType: BaseRepository<TEntity>.All<TType>(TType[])
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.All<TType>(TType[])
  nameWithType.vb: BaseRepository(Of TEntity).All(Of TType)(TType())
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).All(Of TType)(TType())
  name.vb: All(Of TType)(TType())
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All``1(``0[])
    name: All<TType>
    nameWithType: BaseRepository<TEntity>.All<TType>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.All<TType>
  - name: (
    nameWithType: (
    fullName: (
  - name: TType
    nameWithType: TType
    fullName: TType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All``1(``0[])
    name: All(Of TType)
    nameWithType: BaseRepository(Of TEntity).All(Of TType)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).All(Of TType)
  - name: (
    nameWithType: (
    fullName: (
  - name: TType
    nameWithType: TType
    fullName: TType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All(System.String,System.String,System.Int32,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.All(System.String,System.String,System.Int32,System.Object)
  isExternal: true
  name: All(String, String, Int32, Object)
  nameWithType: BaseRepository<TEntity>.All(String, String, Int32, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.All(System.String, System.String, System.Int32, System.Object)
  nameWithType.vb: BaseRepository(Of TEntity).All(String, String, Int32, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).All(System.String, System.String, System.Int32, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All(System.String,System.String,System.Int32,System.Object)
    name: All
    nameWithType: BaseRepository<TEntity>.All
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.All
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All(System.String,System.String,System.Int32,System.Object)
    name: All
    nameWithType: BaseRepository(Of TEntity).All
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).All
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
  isExternal: true
  name: Paged(Int32, String, String, Int32, Int32, Object)
  nameWithType: BaseRepository<TEntity>.Paged(Int32, String, String, Int32, Int32, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Paged(System.Int32, System.String, System.String, System.Int32, System.Int32, System.Object)
  nameWithType.vb: BaseRepository(Of TEntity).Paged(Int32, String, String, Int32, Int32, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Paged(System.Int32, System.String, System.String, System.Int32, System.Int32, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
    name: Paged
    nameWithType: BaseRepository<TEntity>.Paged
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Paged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
    name: Paged
    nameWithType: BaseRepository(Of TEntity).Paged
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Paged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Insert``1(`0)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Insert``1(`0)
  name: Insert<Y>(TEntity)
  nameWithType: BaseRepository<TEntity>.Insert<Y>(TEntity)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Insert<Y>(TEntity)
  nameWithType.vb: BaseRepository(Of TEntity).Insert(Of Y)(TEntity)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Insert(Of Y)(TEntity)
  name.vb: Insert(Of Y)(TEntity)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Insert``1(`0)
    name: Insert<Y>
    nameWithType: BaseRepository<TEntity>.Insert<Y>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Insert<Y>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Insert``1(`0)
    name: Insert(Of Y)
    nameWithType: BaseRepository(Of TEntity).Insert(Of Y)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Insert(Of Y)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Update(`0)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Update(`0)
  name: Update(TEntity)
  nameWithType: BaseRepository<TEntity>.Update(TEntity)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Update(TEntity)
  nameWithType.vb: BaseRepository(Of TEntity).Update(TEntity)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Update(TEntity)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Update(`0)
    name: Update
    nameWithType: BaseRepository<TEntity>.Update
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Update(`0)
    name: Update
    nameWithType: BaseRepository(Of TEntity).Update
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Delete(`0)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Delete(`0)
  name: Delete(TEntity)
  nameWithType: BaseRepository<TEntity>.Delete(TEntity)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Delete(TEntity)
  nameWithType.vb: BaseRepository(Of TEntity).Delete(TEntity)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Delete(TEntity)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Delete(`0)
    name: Delete
    nameWithType: BaseRepository<TEntity>.Delete
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Delete(`0)
    name: Delete
    nameWithType: BaseRepository(Of TEntity).Delete
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.DeleteById``1(``0)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.DeleteById``1(``0)
  name: DeleteById<Y>(Y)
  nameWithType: BaseRepository<TEntity>.DeleteById<Y>(Y)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.DeleteById<Y>(Y)
  nameWithType.vb: BaseRepository(Of TEntity).DeleteById(Of Y)(Y)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).DeleteById(Of Y)(Y)
  name.vb: DeleteById(Of Y)(Y)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.DeleteById``1(``0)
    name: DeleteById<Y>
    nameWithType: BaseRepository<TEntity>.DeleteById<Y>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.DeleteById<Y>
  - name: (
    nameWithType: (
    fullName: (
  - name: Y
    nameWithType: Y
    fullName: Y
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.DeleteById``1(``0)
    name: DeleteById(Of Y)
    nameWithType: BaseRepository(Of TEntity).DeleteById(Of Y)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).DeleteById(Of Y)
  - name: (
    nameWithType: (
    fullName: (
  - name: Y
    nameWithType: Y
    fullName: Y
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Count(System.String,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Count(System.String,System.Object)
  isExternal: true
  name: Count(String, Object)
  nameWithType: BaseRepository<TEntity>.Count(String, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Count(System.String, System.Object)
  nameWithType.vb: BaseRepository(Of TEntity).Count(String, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Count(System.String, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Count(System.String,System.Object)
    name: Count
    nameWithType: BaseRepository<TEntity>.Count
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Count
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Count(System.String,System.Object)
    name: Count
    nameWithType: BaseRepository(Of TEntity).Count
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Count
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.Cart.#ctor*
  commentId: Overload:Uvendia.Domain.Repositories.Cart.#ctor
  name: Cart
  nameWithType: Cart.Cart
  fullName: Uvendia.Domain.Repositories.Cart.Cart
- uid: Uvendia.Domain.Repositories.Cart.GetCartItemsByCookieId*
  commentId: Overload:Uvendia.Domain.Repositories.Cart.GetCartItemsByCookieId
  name: GetCartItemsByCookieId
  nameWithType: Cart.GetCartItemsByCookieId
  fullName: Uvendia.Domain.Repositories.Cart.GetCartItemsByCookieId
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Collections.Generic.IEnumerable{Uvendia.Domain.Cart.CartItem}
  commentId: T:System.Collections.Generic.IEnumerable{Uvendia.Domain.Cart.CartItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CartItem>
  nameWithType: IEnumerable<CartItem>
  fullName: System.Collections.Generic.IEnumerable<Uvendia.Domain.Cart.CartItem>
  nameWithType.vb: IEnumerable(Of CartItem)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Uvendia.Domain.Cart.CartItem)
  name.vb: IEnumerable(Of CartItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Cart.CartItem
    name: CartItem
    nameWithType: CartItem
    fullName: Uvendia.Domain.Cart.CartItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Uvendia.Domain.Repositories.Cart.AddProduct*
  commentId: Overload:Uvendia.Domain.Repositories.Cart.AddProduct
  name: AddProduct
  nameWithType: Cart.AddProduct
  fullName: Uvendia.Domain.Repositories.Cart.AddProduct
- uid: Uvendia.Domain.Cart.CartItem
  commentId: T:Uvendia.Domain.Cart.CartItem
  parent: Uvendia.Domain.Cart
  name: CartItem
  nameWithType: CartItem
  fullName: Uvendia.Domain.Cart.CartItem
- uid: Uvendia.Domain.Cart.CartAction
  commentId: T:Uvendia.Domain.Cart.CartAction
  parent: Uvendia.Domain.Cart
  name: CartAction
  nameWithType: CartAction
  fullName: Uvendia.Domain.Cart.CartAction
- uid: Uvendia.Domain.Cart
  commentId: N:Uvendia.Domain.Cart
  name: Uvendia.Domain.Cart
  nameWithType: Uvendia.Domain.Cart
  fullName: Uvendia.Domain.Cart
- uid: Uvendia.Domain.Repositories.Cart.AddTicket*
  commentId: Overload:Uvendia.Domain.Repositories.Cart.AddTicket
  name: AddTicket
  nameWithType: Cart.AddTicket
  fullName: Uvendia.Domain.Repositories.Cart.AddTicket
- uid: Uvendia.Domain.Repositories.Cart.Delete*
  commentId: Overload:Uvendia.Domain.Repositories.Cart.Delete
  name: Delete
  nameWithType: Cart.Delete
  fullName: Uvendia.Domain.Repositories.Cart.Delete
- uid: Uvendia.Domain.Repositories.Cart.DeleteByCookieId*
  commentId: Overload:Uvendia.Domain.Repositories.Cart.DeleteByCookieId
  name: DeleteByCookieId
  nameWithType: Cart.DeleteByCookieId
  fullName: Uvendia.Domain.Repositories.Cart.DeleteByCookieId
- uid: Uvendia.Domain.Repositories.Cart.UpdateQuantity*
  commentId: Overload:Uvendia.Domain.Repositories.Cart.UpdateQuantity
  name: UpdateQuantity
  nameWithType: Cart.UpdateQuantity
  fullName: Uvendia.Domain.Repositories.Cart.UpdateQuantity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
