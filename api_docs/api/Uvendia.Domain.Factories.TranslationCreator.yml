### YamlMime:ManagedReference
items:
- uid: Uvendia.Domain.Factories.TranslationCreator
  commentId: T:Uvendia.Domain.Factories.TranslationCreator
  id: TranslationCreator
  parent: Uvendia.Domain.Factories
  children:
  - Uvendia.Domain.Factories.TranslationCreator.CreateTranslations
  - Uvendia.Domain.Factories.TranslationCreator.CreateTranslations(Uvendia.Domain.Entities.Language[])
  langs:
  - csharp
  - vb
  name: TranslationCreator
  nameWithType: TranslationCreator
  fullName: Uvendia.Domain.Factories.TranslationCreator
  type: Class
  source:
    remote:
      path: Uvendia.Domain/Factories/TranslationCreator.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: TranslationCreator
    path: ../../dazzling.studio/Uvendia.Domain/Factories/TranslationCreator.cs
    startLine: 10
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Factories
  syntax:
    content: public class TranslationCreator
    content.vb: Public Class TranslationCreator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Uvendia.Domain.Factories.TranslationCreator.CreateTranslations(Uvendia.Domain.Entities.Language[])
  commentId: M:Uvendia.Domain.Factories.TranslationCreator.CreateTranslations(Uvendia.Domain.Entities.Language[])
  id: CreateTranslations(Uvendia.Domain.Entities.Language[])
  parent: Uvendia.Domain.Factories.TranslationCreator
  langs:
  - csharp
  - vb
  name: CreateTranslations(Language[])
  nameWithType: TranslationCreator.CreateTranslations(Language[])
  fullName: Uvendia.Domain.Factories.TranslationCreator.CreateTranslations(Uvendia.Domain.Entities.Language[])
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Factories/TranslationCreator.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: CreateTranslations
    path: ../../dazzling.studio/Uvendia.Domain/Factories/TranslationCreator.cs
    startLine: 12
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Factories
  syntax:
    content: public static List<Translation> CreateTranslations(Language[] langs)
    parameters:
    - id: langs
      type: Uvendia.Domain.Entities.Language[]
    return:
      type: System.Collections.Generic.List{Uvendia.Domain.Translation}
    content.vb: Public Shared Function CreateTranslations(langs As Language()) As List(Of Translation)
  overload: Uvendia.Domain.Factories.TranslationCreator.CreateTranslations*
  nameWithType.vb: TranslationCreator.CreateTranslations(Language())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Uvendia.Domain.Factories.TranslationCreator.CreateTranslations(Uvendia.Domain.Entities.Language())
  name.vb: CreateTranslations(Language())
- uid: Uvendia.Domain.Factories.TranslationCreator.CreateTranslations
  commentId: M:Uvendia.Domain.Factories.TranslationCreator.CreateTranslations
  id: CreateTranslations
  parent: Uvendia.Domain.Factories.TranslationCreator
  langs:
  - csharp
  - vb
  name: CreateTranslations()
  nameWithType: TranslationCreator.CreateTranslations()
  fullName: Uvendia.Domain.Factories.TranslationCreator.CreateTranslations()
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Factories/TranslationCreator.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: CreateTranslations
    path: ../../dazzling.studio/Uvendia.Domain/Factories/TranslationCreator.cs
    startLine: 20
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Factories
  syntax:
    content: public static List<Translation> CreateTranslations()
    return:
      type: System.Collections.Generic.List{Uvendia.Domain.Translation}
    content.vb: Public Shared Function CreateTranslations As List(Of Translation)
  overload: Uvendia.Domain.Factories.TranslationCreator.CreateTranslations*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Uvendia.Domain.Factories
  commentId: N:Uvendia.Domain.Factories
  name: Uvendia.Domain.Factories
  nameWithType: Uvendia.Domain.Factories
  fullName: Uvendia.Domain.Factories
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Uvendia.Domain.Factories.TranslationCreator.CreateTranslations*
  commentId: Overload:Uvendia.Domain.Factories.TranslationCreator.CreateTranslations
  name: CreateTranslations
  nameWithType: TranslationCreator.CreateTranslations
  fullName: Uvendia.Domain.Factories.TranslationCreator.CreateTranslations
- uid: Uvendia.Domain.Entities.Language[]
  isExternal: true
  name: Language[]
  nameWithType: Language[]
  fullName: Uvendia.Domain.Entities.Language[]
  nameWithType.vb: Language()
  fullName.vb: Uvendia.Domain.Entities.Language()
  name.vb: Language()
  spec.csharp:
  - uid: Uvendia.Domain.Entities.Language
    name: Language
    nameWithType: Language
    fullName: Uvendia.Domain.Entities.Language
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Uvendia.Domain.Entities.Language
    name: Language
    nameWithType: Language
    fullName: Uvendia.Domain.Entities.Language
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.List{Uvendia.Domain.Translation}
  commentId: T:System.Collections.Generic.List{Uvendia.Domain.Translation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Translation>
  nameWithType: List<Translation>
  fullName: System.Collections.Generic.List<Uvendia.Domain.Translation>
  nameWithType.vb: List(Of Translation)
  fullName.vb: System.Collections.Generic.List(Of Uvendia.Domain.Translation)
  name.vb: List(Of Translation)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Translation
    name: Translation
    nameWithType: Translation
    fullName: Uvendia.Domain.Translation
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
