### YamlMime:ManagedReference
items:
- uid: Uvendia.Domain.Repositories.UvendiaSettings
  commentId: T:Uvendia.Domain.Repositories.UvendiaSettings
  id: UvendiaSettings
  parent: Uvendia.Domain.Repositories
  children:
  - Uvendia.Domain.Repositories.UvendiaSettings.Get(System.String)
  - Uvendia.Domain.Repositories.UvendiaSettings.GetSettings``1(System.String)
  - Uvendia.Domain.Repositories.UvendiaSettings.Save(System.Object,System.String)
  langs:
  - csharp
  - vb
  name: UvendiaSettings
  nameWithType: UvendiaSettings
  fullName: Uvendia.Domain.Repositories.UvendiaSettings
  type: Class
  source:
    remote:
      path: Uvendia.Domain/Repositories/UvendiaSettings.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: UvendiaSettings
    path: ../../dazzling.studio/Uvendia.Domain/Repositories/UvendiaSettings.cs
    startLine: 12
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Repositories
  syntax:
    content: 'public class UvendiaSettings : UvendiaRepository<SerializedSettings>, IBaseRepository<SerializedSettings>'
    content.vb: >-
      Public Class UvendiaSettings
          Inherits UvendiaRepository(Of SerializedSettings)
          Implements IBaseRepository(Of SerializedSettings)
  inheritance:
  - System.Object
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  - Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}
  implements:
  - Dazzling.Studio.SqlRepository.IBaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  inheritedMembers:
  - Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}.CreateUnitOfWork
  - Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}.Save(Uvendia.Domain.Settings.SerializedSettings)
  - Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}._syncLock
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}._connectionStringName
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}._tableSchema
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}._tableName
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Instance``1
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.TableSchema
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.TableName
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.CreateConnection
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.SetConnection(System.Data.SqlClient.SqlConnection)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Single``1({IID})
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Single(System.String,System.Object)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.All``1({TType}[])
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.All(System.String,System.String,System.Int32,System.Object)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Insert``1(Uvendia.Domain.Settings.SerializedSettings)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Update(Uvendia.Domain.Settings.SerializedSettings)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Delete(Uvendia.Domain.Settings.SerializedSettings)
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.DeleteById``1({Y})
  - Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Count(System.String,System.Object)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Uvendia.Domain.Repositories.UvendiaSettings.GetSettings``1(System.String)
  commentId: M:Uvendia.Domain.Repositories.UvendiaSettings.GetSettings``1(System.String)
  id: GetSettings``1(System.String)
  parent: Uvendia.Domain.Repositories.UvendiaSettings
  langs:
  - csharp
  - vb
  name: GetSettings<T>(String)
  nameWithType: UvendiaSettings.GetSettings<T>(String)
  fullName: Uvendia.Domain.Repositories.UvendiaSettings.GetSettings<T>(System.String)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Repositories/UvendiaSettings.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: GetSettings
    path: ../../dazzling.studio/Uvendia.Domain/Repositories/UvendiaSettings.cs
    startLine: 14
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Repositories
  syntax:
    content: public T GetSettings<T>(string name = null)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetSettings(Of T)(name As String = Nothing) As T
  overload: Uvendia.Domain.Repositories.UvendiaSettings.GetSettings*
  nameWithType.vb: UvendiaSettings.GetSettings(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Uvendia.Domain.Repositories.UvendiaSettings.GetSettings(Of T)(System.String)
  name.vb: GetSettings(Of T)(String)
- uid: Uvendia.Domain.Repositories.UvendiaSettings.Save(System.Object,System.String)
  commentId: M:Uvendia.Domain.Repositories.UvendiaSettings.Save(System.Object,System.String)
  id: Save(System.Object,System.String)
  parent: Uvendia.Domain.Repositories.UvendiaSettings
  langs:
  - csharp
  - vb
  name: Save(Object, String)
  nameWithType: UvendiaSettings.Save(Object, String)
  fullName: Uvendia.Domain.Repositories.UvendiaSettings.Save(System.Object, System.String)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Repositories/UvendiaSettings.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Save
    path: ../../dazzling.studio/Uvendia.Domain/Repositories/UvendiaSettings.cs
    startLine: 30
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Repositories
  summary: "\nSaves the specified (new settings) entity like &apos;OrderNumber&apos;.\n"
  example: []
  syntax:
    content: public void Save(object entity, string name = null)
    parameters:
    - id: entity
      type: System.Object
      description: The entity.
    - id: name
      type: System.String
      description: The name.
    content.vb: Public Sub Save(entity As Object, name As String = Nothing)
  overload: Uvendia.Domain.Repositories.UvendiaSettings.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Uvendia.Domain.Repositories.UvendiaSettings.Get(System.String)
  commentId: M:Uvendia.Domain.Repositories.UvendiaSettings.Get(System.String)
  id: Get(System.String)
  parent: Uvendia.Domain.Repositories.UvendiaSettings
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: UvendiaSettings.Get(String)
  fullName: Uvendia.Domain.Repositories.UvendiaSettings.Get(System.String)
  type: Method
  source:
    remote:
      path: Uvendia.Domain/Repositories/UvendiaSettings.cs
      branch: umbraco8
      repo: https://sherlonus@bitbucket.org/sherlonus/dazzling.studio.git
    id: Get
    path: ../../dazzling.studio/Uvendia.Domain/Repositories/UvendiaSettings.cs
    startLine: 56
  assemblies:
  - Uvendia.Domain
  namespace: Uvendia.Domain.Repositories
  syntax:
    content: public SerializedSettings Get(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Uvendia.Domain.Settings.SerializedSettings
    content.vb: Public Function Get(name As String) As SerializedSettings
  overload: Uvendia.Domain.Repositories.UvendiaSettings.Get*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Uvendia.Domain.Repositories
  commentId: N:Uvendia.Domain.Repositories
  name: Uvendia.Domain.Repositories
  nameWithType: Uvendia.Domain.Repositories
  fullName: Uvendia.Domain.Repositories
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  commentId: T:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  parent: Dazzling.Studio.SqlRepository
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1
  name: BaseRepository<SerializedSettings>
  nameWithType: BaseRepository<SerializedSettings>
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>
  nameWithType.vb: BaseRepository(Of SerializedSettings)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings)
  name.vb: BaseRepository(Of SerializedSettings)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1
    name: BaseRepository
    nameWithType: BaseRepository
    fullName: Dazzling.Studio.SqlRepository.BaseRepository
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Settings.SerializedSettings
    name: SerializedSettings
    nameWithType: SerializedSettings
    fullName: Uvendia.Domain.Settings.SerializedSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1
    name: BaseRepository
    nameWithType: BaseRepository
    fullName: Dazzling.Studio.SqlRepository.BaseRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Settings.SerializedSettings
    name: SerializedSettings
    nameWithType: SerializedSettings
    fullName: Uvendia.Domain.Settings.SerializedSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}
  commentId: T:Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}
  parent: Uvendia.Domain.Repositories
  definition: Uvendia.Domain.Repositories.UvendiaRepository`1
  name: UvendiaRepository<SerializedSettings>
  nameWithType: UvendiaRepository<SerializedSettings>
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<Uvendia.Domain.Settings.SerializedSettings>
  nameWithType.vb: UvendiaRepository(Of SerializedSettings)
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of Uvendia.Domain.Settings.SerializedSettings)
  name.vb: UvendiaRepository(Of SerializedSettings)
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1
    name: UvendiaRepository
    nameWithType: UvendiaRepository
    fullName: Uvendia.Domain.Repositories.UvendiaRepository
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Settings.SerializedSettings
    name: SerializedSettings
    nameWithType: SerializedSettings
    fullName: Uvendia.Domain.Settings.SerializedSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1
    name: UvendiaRepository
    nameWithType: UvendiaRepository
    fullName: Uvendia.Domain.Repositories.UvendiaRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Settings.SerializedSettings
    name: SerializedSettings
    nameWithType: SerializedSettings
    fullName: Uvendia.Domain.Settings.SerializedSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.IBaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  commentId: T:Dazzling.Studio.SqlRepository.IBaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  parent: Dazzling.Studio.SqlRepository
  definition: Dazzling.Studio.SqlRepository.IBaseRepository`1
  name: IBaseRepository<SerializedSettings>
  nameWithType: IBaseRepository<SerializedSettings>
  fullName: Dazzling.Studio.SqlRepository.IBaseRepository<Uvendia.Domain.Settings.SerializedSettings>
  nameWithType.vb: IBaseRepository(Of SerializedSettings)
  fullName.vb: Dazzling.Studio.SqlRepository.IBaseRepository(Of Uvendia.Domain.Settings.SerializedSettings)
  name.vb: IBaseRepository(Of SerializedSettings)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.IBaseRepository`1
    name: IBaseRepository
    nameWithType: IBaseRepository
    fullName: Dazzling.Studio.SqlRepository.IBaseRepository
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uvendia.Domain.Settings.SerializedSettings
    name: SerializedSettings
    nameWithType: SerializedSettings
    fullName: Uvendia.Domain.Settings.SerializedSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.IBaseRepository`1
    name: IBaseRepository
    nameWithType: IBaseRepository
    fullName: Dazzling.Studio.SqlRepository.IBaseRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uvendia.Domain.Settings.SerializedSettings
    name: SerializedSettings
    nameWithType: SerializedSettings
    fullName: Uvendia.Domain.Settings.SerializedSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}.CreateUnitOfWork
  commentId: M:Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}.CreateUnitOfWork
  parent: Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Uvendia.Domain.Repositories.UvendiaRepository`1.CreateUnitOfWork
  name: CreateUnitOfWork()
  nameWithType: UvendiaRepository<SerializedSettings>.CreateUnitOfWork()
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<Uvendia.Domain.Settings.SerializedSettings>.CreateUnitOfWork()
  nameWithType.vb: UvendiaRepository(Of SerializedSettings).CreateUnitOfWork()
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of Uvendia.Domain.Settings.SerializedSettings).CreateUnitOfWork()
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.CreateUnitOfWork
    name: CreateUnitOfWork
    nameWithType: UvendiaRepository<SerializedSettings>.CreateUnitOfWork
    fullName: Uvendia.Domain.Repositories.UvendiaRepository<Uvendia.Domain.Settings.SerializedSettings>.CreateUnitOfWork
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.CreateUnitOfWork
    name: CreateUnitOfWork
    nameWithType: UvendiaRepository(Of SerializedSettings).CreateUnitOfWork
    fullName: Uvendia.Domain.Repositories.UvendiaRepository(Of Uvendia.Domain.Settings.SerializedSettings).CreateUnitOfWork
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}.Save(Uvendia.Domain.Settings.SerializedSettings)
  commentId: M:Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}.Save(Uvendia.Domain.Settings.SerializedSettings)
  parent: Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Uvendia.Domain.Repositories.UvendiaRepository`1.Save(`0)
  name: Save(SerializedSettings)
  nameWithType: UvendiaRepository<SerializedSettings>.Save(SerializedSettings)
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<Uvendia.Domain.Settings.SerializedSettings>.Save(Uvendia.Domain.Settings.SerializedSettings)
  nameWithType.vb: UvendiaRepository(Of SerializedSettings).Save(SerializedSettings)
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of Uvendia.Domain.Settings.SerializedSettings).Save(Uvendia.Domain.Settings.SerializedSettings)
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.Save(`0)
    name: Save
    nameWithType: UvendiaRepository<SerializedSettings>.Save
    fullName: Uvendia.Domain.Repositories.UvendiaRepository<Uvendia.Domain.Settings.SerializedSettings>.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Settings.SerializedSettings
    name: SerializedSettings
    nameWithType: SerializedSettings
    fullName: Uvendia.Domain.Settings.SerializedSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.Save(`0)
    name: Save
    nameWithType: UvendiaRepository(Of SerializedSettings).Save
    fullName: Uvendia.Domain.Repositories.UvendiaRepository(Of Uvendia.Domain.Settings.SerializedSettings).Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Settings.SerializedSettings
    name: SerializedSettings
    nameWithType: SerializedSettings
    fullName: Uvendia.Domain.Settings.SerializedSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
  commentId: M:Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
  parent: Uvendia.Domain.Repositories.UvendiaRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Uvendia.Domain.Repositories.UvendiaRepository`1.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
  name: SetAuditInfo(Webshop, Webshop)
  nameWithType: UvendiaRepository<SerializedSettings>.SetAuditInfo(Webshop, Webshop)
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<Uvendia.Domain.Settings.SerializedSettings>.SetAuditInfo(Uvendia.Domain.Webshop, Uvendia.Domain.Webshop)
  nameWithType.vb: UvendiaRepository(Of SerializedSettings).SetAuditInfo(Webshop, Webshop)
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of Uvendia.Domain.Settings.SerializedSettings).SetAuditInfo(Uvendia.Domain.Webshop, Uvendia.Domain.Webshop)
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
    name: SetAuditInfo
    nameWithType: UvendiaRepository<SerializedSettings>.SetAuditInfo
    fullName: Uvendia.Domain.Repositories.UvendiaRepository<Uvendia.Domain.Settings.SerializedSettings>.SetAuditInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
    name: SetAuditInfo
    nameWithType: UvendiaRepository(Of SerializedSettings).SetAuditInfo
    fullName: Uvendia.Domain.Repositories.UvendiaRepository(Of Uvendia.Domain.Settings.SerializedSettings).SetAuditInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}._syncLock
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}._syncLock
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1._syncLock
  name: _syncLock
  nameWithType: BaseRepository<SerializedSettings>._syncLock
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>._syncLock
  nameWithType.vb: BaseRepository(Of SerializedSettings)._syncLock
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings)._syncLock
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}._connectionStringName
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}._connectionStringName
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1._connectionStringName
  name: _connectionStringName
  nameWithType: BaseRepository<SerializedSettings>._connectionStringName
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>._connectionStringName
  nameWithType.vb: BaseRepository(Of SerializedSettings)._connectionStringName
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings)._connectionStringName
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}._tableSchema
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}._tableSchema
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1._tableSchema
  name: _tableSchema
  nameWithType: BaseRepository<SerializedSettings>._tableSchema
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>._tableSchema
  nameWithType.vb: BaseRepository(Of SerializedSettings)._tableSchema
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings)._tableSchema
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}._tableName
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}._tableName
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1._tableName
  name: _tableName
  nameWithType: BaseRepository<SerializedSettings>._tableName
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>._tableName
  nameWithType.vb: BaseRepository(Of SerializedSettings)._tableName
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings)._tableName
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Instance``1
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Instance``1
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Instance``1
  name: Instance<R>()
  nameWithType: BaseRepository<SerializedSettings>.Instance<R>()
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Instance<R>()
  nameWithType.vb: BaseRepository(Of SerializedSettings).Instance(Of R)()
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Instance(Of R)()
  name.vb: Instance(Of R)()
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Instance``1
    name: Instance<R>
    nameWithType: BaseRepository<SerializedSettings>.Instance<R>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Instance<R>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Instance``1
    name: Instance(Of R)
    nameWithType: BaseRepository(Of SerializedSettings).Instance(Of R)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Instance(Of R)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.TableSchema
  commentId: P:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.TableSchema
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.TableSchema
  name: TableSchema
  nameWithType: BaseRepository<SerializedSettings>.TableSchema
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.TableSchema
  nameWithType.vb: BaseRepository(Of SerializedSettings).TableSchema
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).TableSchema
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.TableName
  commentId: P:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.TableName
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.TableName
  name: TableName
  nameWithType: BaseRepository<SerializedSettings>.TableName
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.TableName
  nameWithType.vb: BaseRepository(Of SerializedSettings).TableName
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).TableName
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.CreateConnection
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.CreateConnection
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.CreateConnection
  name: CreateConnection()
  nameWithType: BaseRepository<SerializedSettings>.CreateConnection()
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.CreateConnection()
  nameWithType.vb: BaseRepository(Of SerializedSettings).CreateConnection()
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).CreateConnection()
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.CreateConnection
    name: CreateConnection
    nameWithType: BaseRepository<SerializedSettings>.CreateConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.CreateConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.CreateConnection
    name: CreateConnection
    nameWithType: BaseRepository(Of SerializedSettings).CreateConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).CreateConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.SetConnection(System.Data.SqlClient.SqlConnection)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.SetConnection(System.Data.SqlClient.SqlConnection)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.SetConnection(System.Data.SqlClient.SqlConnection)
  name: SetConnection(SqlConnection)
  nameWithType: BaseRepository<SerializedSettings>.SetConnection(SqlConnection)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.SetConnection(System.Data.SqlClient.SqlConnection)
  nameWithType.vb: BaseRepository(Of SerializedSettings).SetConnection(SqlConnection)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).SetConnection(System.Data.SqlClient.SqlConnection)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.SetConnection(System.Data.SqlClient.SqlConnection)
    name: SetConnection
    nameWithType: BaseRepository<SerializedSettings>.SetConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.SetConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.SqlClient.SqlConnection
    name: SqlConnection
    nameWithType: SqlConnection
    fullName: System.Data.SqlClient.SqlConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.SetConnection(System.Data.SqlClient.SqlConnection)
    name: SetConnection
    nameWithType: BaseRepository(Of SerializedSettings).SetConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).SetConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.SqlClient.SqlConnection
    name: SqlConnection
    nameWithType: SqlConnection
    fullName: System.Data.SqlClient.SqlConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Single``1({IID})
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Single``1(``0)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Single``1(``0)
  name: Single<IID>(IID)
  nameWithType: BaseRepository<SerializedSettings>.Single<IID>(IID)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Single<IID>(IID)
  nameWithType.vb: BaseRepository(Of SerializedSettings).Single(Of IID)(IID)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Single(Of IID)(IID)
  name.vb: Single(Of IID)(IID)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single``1(``0)
    name: Single<IID>
    nameWithType: BaseRepository<SerializedSettings>.Single<IID>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Single<IID>
  - name: (
    nameWithType: (
    fullName: (
  - name: IID
    nameWithType: IID
    fullName: IID
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single``1(``0)
    name: Single(Of IID)
    nameWithType: BaseRepository(Of SerializedSettings).Single(Of IID)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Single(Of IID)
  - name: (
    nameWithType: (
    fullName: (
  - name: IID
    nameWithType: IID
    fullName: IID
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Single(System.String,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Single(System.String,System.Object)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Single(System.String,System.Object)
  name: Single(String, Object)
  nameWithType: BaseRepository<SerializedSettings>.Single(String, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Single(System.String, System.Object)
  nameWithType.vb: BaseRepository(Of SerializedSettings).Single(String, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Single(System.String, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single(System.String,System.Object)
    name: Single
    nameWithType: BaseRepository<SerializedSettings>.Single
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Single
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single(System.String,System.Object)
    name: Single
    nameWithType: BaseRepository(Of SerializedSettings).Single
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Single
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.All``1({TType}[])
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.All``1(``0[])
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.All``1(``0[])
  name: All<TType>(TType[])
  nameWithType: BaseRepository<SerializedSettings>.All<TType>(TType[])
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.All<TType>(TType[])
  nameWithType.vb: BaseRepository(Of SerializedSettings).All(Of TType)(TType())
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).All(Of TType)(TType())
  name.vb: All(Of TType)(TType())
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All``1(``0[])
    name: All<TType>
    nameWithType: BaseRepository<SerializedSettings>.All<TType>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.All<TType>
  - name: (
    nameWithType: (
    fullName: (
  - name: TType
    nameWithType: TType
    fullName: TType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All``1(``0[])
    name: All(Of TType)
    nameWithType: BaseRepository(Of SerializedSettings).All(Of TType)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).All(Of TType)
  - name: (
    nameWithType: (
    fullName: (
  - name: TType
    nameWithType: TType
    fullName: TType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.All(System.String,System.String,System.Int32,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.All(System.String,System.String,System.Int32,System.Object)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.All(System.String,System.String,System.Int32,System.Object)
  name: All(String, String, Int32, Object)
  nameWithType: BaseRepository<SerializedSettings>.All(String, String, Int32, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.All(System.String, System.String, System.Int32, System.Object)
  nameWithType.vb: BaseRepository(Of SerializedSettings).All(String, String, Int32, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).All(System.String, System.String, System.Int32, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All(System.String,System.String,System.Int32,System.Object)
    name: All
    nameWithType: BaseRepository<SerializedSettings>.All
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.All
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All(System.String,System.String,System.Int32,System.Object)
    name: All
    nameWithType: BaseRepository(Of SerializedSettings).All
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).All
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
  name: Paged(Int32, String, String, Int32, Int32, Object)
  nameWithType: BaseRepository<SerializedSettings>.Paged(Int32, String, String, Int32, Int32, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Paged(System.Int32, System.String, System.String, System.Int32, System.Int32, System.Object)
  nameWithType.vb: BaseRepository(Of SerializedSettings).Paged(Int32, String, String, Int32, Int32, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Paged(System.Int32, System.String, System.String, System.Int32, System.Int32, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
    name: Paged
    nameWithType: BaseRepository<SerializedSettings>.Paged
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Paged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
    name: Paged
    nameWithType: BaseRepository(Of SerializedSettings).Paged
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Paged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Insert``1(Uvendia.Domain.Settings.SerializedSettings)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Insert``1(Uvendia.Domain.Settings.SerializedSettings)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Insert``1(`0)
  name: Insert<Y>(SerializedSettings)
  nameWithType: BaseRepository<SerializedSettings>.Insert<Y>(SerializedSettings)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Insert<Y>(Uvendia.Domain.Settings.SerializedSettings)
  nameWithType.vb: BaseRepository(Of SerializedSettings).Insert(Of Y)(SerializedSettings)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Insert(Of Y)(Uvendia.Domain.Settings.SerializedSettings)
  name.vb: Insert(Of Y)(SerializedSettings)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Insert``1(`0)
    name: Insert<Y>
    nameWithType: BaseRepository<SerializedSettings>.Insert<Y>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Insert<Y>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Settings.SerializedSettings
    name: SerializedSettings
    nameWithType: SerializedSettings
    fullName: Uvendia.Domain.Settings.SerializedSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Insert``1(`0)
    name: Insert(Of Y)
    nameWithType: BaseRepository(Of SerializedSettings).Insert(Of Y)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Insert(Of Y)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Settings.SerializedSettings
    name: SerializedSettings
    nameWithType: SerializedSettings
    fullName: Uvendia.Domain.Settings.SerializedSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Update(Uvendia.Domain.Settings.SerializedSettings)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Update(Uvendia.Domain.Settings.SerializedSettings)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Update(`0)
  name: Update(SerializedSettings)
  nameWithType: BaseRepository<SerializedSettings>.Update(SerializedSettings)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Update(Uvendia.Domain.Settings.SerializedSettings)
  nameWithType.vb: BaseRepository(Of SerializedSettings).Update(SerializedSettings)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Update(Uvendia.Domain.Settings.SerializedSettings)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Update(`0)
    name: Update
    nameWithType: BaseRepository<SerializedSettings>.Update
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Settings.SerializedSettings
    name: SerializedSettings
    nameWithType: SerializedSettings
    fullName: Uvendia.Domain.Settings.SerializedSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Update(`0)
    name: Update
    nameWithType: BaseRepository(Of SerializedSettings).Update
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Settings.SerializedSettings
    name: SerializedSettings
    nameWithType: SerializedSettings
    fullName: Uvendia.Domain.Settings.SerializedSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Delete(Uvendia.Domain.Settings.SerializedSettings)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Delete(Uvendia.Domain.Settings.SerializedSettings)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Delete(`0)
  name: Delete(SerializedSettings)
  nameWithType: BaseRepository<SerializedSettings>.Delete(SerializedSettings)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Delete(Uvendia.Domain.Settings.SerializedSettings)
  nameWithType.vb: BaseRepository(Of SerializedSettings).Delete(SerializedSettings)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Delete(Uvendia.Domain.Settings.SerializedSettings)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Delete(`0)
    name: Delete
    nameWithType: BaseRepository<SerializedSettings>.Delete
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Settings.SerializedSettings
    name: SerializedSettings
    nameWithType: SerializedSettings
    fullName: Uvendia.Domain.Settings.SerializedSettings
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Delete(`0)
    name: Delete
    nameWithType: BaseRepository(Of SerializedSettings).Delete
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Settings.SerializedSettings
    name: SerializedSettings
    nameWithType: SerializedSettings
    fullName: Uvendia.Domain.Settings.SerializedSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.DeleteById``1({Y})
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.DeleteById``1(``0)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.DeleteById``1(``0)
  name: DeleteById<Y>(Y)
  nameWithType: BaseRepository<SerializedSettings>.DeleteById<Y>(Y)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.DeleteById<Y>(Y)
  nameWithType.vb: BaseRepository(Of SerializedSettings).DeleteById(Of Y)(Y)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).DeleteById(Of Y)(Y)
  name.vb: DeleteById(Of Y)(Y)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.DeleteById``1(``0)
    name: DeleteById<Y>
    nameWithType: BaseRepository<SerializedSettings>.DeleteById<Y>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.DeleteById<Y>
  - name: (
    nameWithType: (
    fullName: (
  - name: Y
    nameWithType: Y
    fullName: Y
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.DeleteById``1(``0)
    name: DeleteById(Of Y)
    nameWithType: BaseRepository(Of SerializedSettings).DeleteById(Of Y)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).DeleteById(Of Y)
  - name: (
    nameWithType: (
    fullName: (
  - name: Y
    nameWithType: Y
    fullName: Y
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Count(System.String,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}.Count(System.String,System.Object)
  parent: Dazzling.Studio.SqlRepository.BaseRepository{Uvendia.Domain.Settings.SerializedSettings}
  definition: Dazzling.Studio.SqlRepository.BaseRepository`1.Count(System.String,System.Object)
  name: Count(String, Object)
  nameWithType: BaseRepository<SerializedSettings>.Count(String, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Count(System.String, System.Object)
  nameWithType.vb: BaseRepository(Of SerializedSettings).Count(String, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Count(System.String, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Count(System.String,System.Object)
    name: Count
    nameWithType: BaseRepository<SerializedSettings>.Count
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<Uvendia.Domain.Settings.SerializedSettings>.Count
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Count(System.String,System.Object)
    name: Count
    nameWithType: BaseRepository(Of SerializedSettings).Count
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of Uvendia.Domain.Settings.SerializedSettings).Count
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1
  commentId: T:Dazzling.Studio.SqlRepository.BaseRepository`1
  name: BaseRepository<TEntity>
  nameWithType: BaseRepository<TEntity>
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>
  nameWithType.vb: BaseRepository(Of TEntity)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity)
  name.vb: BaseRepository(Of TEntity)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1
    name: BaseRepository
    nameWithType: BaseRepository
    fullName: Dazzling.Studio.SqlRepository.BaseRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1
    name: BaseRepository
    nameWithType: BaseRepository
    fullName: Dazzling.Studio.SqlRepository.BaseRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository
  commentId: N:Dazzling.Studio.SqlRepository
  name: Dazzling.Studio.SqlRepository
  nameWithType: Dazzling.Studio.SqlRepository
  fullName: Dazzling.Studio.SqlRepository
- uid: Uvendia.Domain.Repositories.UvendiaRepository`1
  commentId: T:Uvendia.Domain.Repositories.UvendiaRepository`1
  name: UvendiaRepository<TEntity>
  nameWithType: UvendiaRepository<TEntity>
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<TEntity>
  nameWithType.vb: UvendiaRepository(Of TEntity)
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of TEntity)
  name.vb: UvendiaRepository(Of TEntity)
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1
    name: UvendiaRepository
    nameWithType: UvendiaRepository
    fullName: Uvendia.Domain.Repositories.UvendiaRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1
    name: UvendiaRepository
    nameWithType: UvendiaRepository
    fullName: Uvendia.Domain.Repositories.UvendiaRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.IBaseRepository`1
  commentId: T:Dazzling.Studio.SqlRepository.IBaseRepository`1
  name: IBaseRepository<TEntity>
  nameWithType: IBaseRepository<TEntity>
  fullName: Dazzling.Studio.SqlRepository.IBaseRepository<TEntity>
  nameWithType.vb: IBaseRepository(Of TEntity)
  fullName.vb: Dazzling.Studio.SqlRepository.IBaseRepository(Of TEntity)
  name.vb: IBaseRepository(Of TEntity)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.IBaseRepository`1
    name: IBaseRepository
    nameWithType: IBaseRepository
    fullName: Dazzling.Studio.SqlRepository.IBaseRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.IBaseRepository`1
    name: IBaseRepository
    nameWithType: IBaseRepository
    fullName: Dazzling.Studio.SqlRepository.IBaseRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaRepository`1.CreateUnitOfWork
  commentId: M:Uvendia.Domain.Repositories.UvendiaRepository`1.CreateUnitOfWork
  name: CreateUnitOfWork()
  nameWithType: UvendiaRepository<TEntity>.CreateUnitOfWork()
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<TEntity>.CreateUnitOfWork()
  nameWithType.vb: UvendiaRepository(Of TEntity).CreateUnitOfWork()
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of TEntity).CreateUnitOfWork()
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.CreateUnitOfWork
    name: CreateUnitOfWork
    nameWithType: UvendiaRepository<TEntity>.CreateUnitOfWork
    fullName: Uvendia.Domain.Repositories.UvendiaRepository<TEntity>.CreateUnitOfWork
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.CreateUnitOfWork
    name: CreateUnitOfWork
    nameWithType: UvendiaRepository(Of TEntity).CreateUnitOfWork
    fullName: Uvendia.Domain.Repositories.UvendiaRepository(Of TEntity).CreateUnitOfWork
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaRepository`1.Save(`0)
  commentId: M:Uvendia.Domain.Repositories.UvendiaRepository`1.Save(`0)
  name: Save(TEntity)
  nameWithType: UvendiaRepository<TEntity>.Save(TEntity)
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<TEntity>.Save(TEntity)
  nameWithType.vb: UvendiaRepository(Of TEntity).Save(TEntity)
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of TEntity).Save(TEntity)
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.Save(`0)
    name: Save
    nameWithType: UvendiaRepository<TEntity>.Save
    fullName: Uvendia.Domain.Repositories.UvendiaRepository<TEntity>.Save
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.Save(`0)
    name: Save
    nameWithType: UvendiaRepository(Of TEntity).Save
    fullName: Uvendia.Domain.Repositories.UvendiaRepository(Of TEntity).Save
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaRepository`1.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
  commentId: M:Uvendia.Domain.Repositories.UvendiaRepository`1.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
  name: SetAuditInfo(Webshop, Webshop)
  nameWithType: UvendiaRepository<TEntity>.SetAuditInfo(Webshop, Webshop)
  fullName: Uvendia.Domain.Repositories.UvendiaRepository<TEntity>.SetAuditInfo(Uvendia.Domain.Webshop, Uvendia.Domain.Webshop)
  nameWithType.vb: UvendiaRepository(Of TEntity).SetAuditInfo(Webshop, Webshop)
  fullName.vb: Uvendia.Domain.Repositories.UvendiaRepository(Of TEntity).SetAuditInfo(Uvendia.Domain.Webshop, Uvendia.Domain.Webshop)
  spec.csharp:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
    name: SetAuditInfo
    nameWithType: UvendiaRepository<TEntity>.SetAuditInfo
    fullName: Uvendia.Domain.Repositories.UvendiaRepository<TEntity>.SetAuditInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Uvendia.Domain.Repositories.UvendiaRepository`1.SetAuditInfo(Uvendia.Domain.Webshop,Uvendia.Domain.Webshop)
    name: SetAuditInfo
    nameWithType: UvendiaRepository(Of TEntity).SetAuditInfo
    fullName: Uvendia.Domain.Repositories.UvendiaRepository(Of TEntity).SetAuditInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Uvendia.Domain.Webshop
    name: Webshop
    nameWithType: Webshop
    fullName: Uvendia.Domain.Webshop
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1._syncLock
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository`1._syncLock
  name: _syncLock
  nameWithType: BaseRepository<TEntity>._syncLock
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>._syncLock
  nameWithType.vb: BaseRepository(Of TEntity)._syncLock
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity)._syncLock
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1._connectionStringName
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository`1._connectionStringName
  name: _connectionStringName
  nameWithType: BaseRepository<TEntity>._connectionStringName
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>._connectionStringName
  nameWithType.vb: BaseRepository(Of TEntity)._connectionStringName
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity)._connectionStringName
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1._tableSchema
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository`1._tableSchema
  name: _tableSchema
  nameWithType: BaseRepository<TEntity>._tableSchema
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>._tableSchema
  nameWithType.vb: BaseRepository(Of TEntity)._tableSchema
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity)._tableSchema
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1._tableName
  commentId: F:Dazzling.Studio.SqlRepository.BaseRepository`1._tableName
  name: _tableName
  nameWithType: BaseRepository<TEntity>._tableName
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>._tableName
  nameWithType.vb: BaseRepository(Of TEntity)._tableName
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity)._tableName
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Instance``1
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Instance``1
  name: Instance<R>()
  nameWithType: BaseRepository<TEntity>.Instance<R>()
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Instance<R>()
  nameWithType.vb: BaseRepository(Of TEntity).Instance(Of R)()
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Instance(Of R)()
  name.vb: Instance(Of R)()
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Instance``1
    name: Instance<R>
    nameWithType: BaseRepository<TEntity>.Instance<R>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Instance<R>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Instance``1
    name: Instance(Of R)
    nameWithType: BaseRepository(Of TEntity).Instance(Of R)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Instance(Of R)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.TableSchema
  commentId: P:Dazzling.Studio.SqlRepository.BaseRepository`1.TableSchema
  name: TableSchema
  nameWithType: BaseRepository<TEntity>.TableSchema
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.TableSchema
  nameWithType.vb: BaseRepository(Of TEntity).TableSchema
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).TableSchema
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.TableName
  commentId: P:Dazzling.Studio.SqlRepository.BaseRepository`1.TableName
  name: TableName
  nameWithType: BaseRepository<TEntity>.TableName
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.TableName
  nameWithType.vb: BaseRepository(Of TEntity).TableName
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).TableName
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.CreateConnection
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.CreateConnection
  name: CreateConnection()
  nameWithType: BaseRepository<TEntity>.CreateConnection()
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.CreateConnection()
  nameWithType.vb: BaseRepository(Of TEntity).CreateConnection()
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).CreateConnection()
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.CreateConnection
    name: CreateConnection
    nameWithType: BaseRepository<TEntity>.CreateConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.CreateConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.CreateConnection
    name: CreateConnection
    nameWithType: BaseRepository(Of TEntity).CreateConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).CreateConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.SetConnection(System.Data.SqlClient.SqlConnection)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.SetConnection(System.Data.SqlClient.SqlConnection)
  isExternal: true
  name: SetConnection(SqlConnection)
  nameWithType: BaseRepository<TEntity>.SetConnection(SqlConnection)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.SetConnection(System.Data.SqlClient.SqlConnection)
  nameWithType.vb: BaseRepository(Of TEntity).SetConnection(SqlConnection)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).SetConnection(System.Data.SqlClient.SqlConnection)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.SetConnection(System.Data.SqlClient.SqlConnection)
    name: SetConnection
    nameWithType: BaseRepository<TEntity>.SetConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.SetConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.SqlClient.SqlConnection
    name: SqlConnection
    nameWithType: SqlConnection
    fullName: System.Data.SqlClient.SqlConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.SetConnection(System.Data.SqlClient.SqlConnection)
    name: SetConnection
    nameWithType: BaseRepository(Of TEntity).SetConnection
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).SetConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.SqlClient.SqlConnection
    name: SqlConnection
    nameWithType: SqlConnection
    fullName: System.Data.SqlClient.SqlConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single``1(``0)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Single``1(``0)
  name: Single<IID>(IID)
  nameWithType: BaseRepository<TEntity>.Single<IID>(IID)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Single<IID>(IID)
  nameWithType.vb: BaseRepository(Of TEntity).Single(Of IID)(IID)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Single(Of IID)(IID)
  name.vb: Single(Of IID)(IID)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single``1(``0)
    name: Single<IID>
    nameWithType: BaseRepository<TEntity>.Single<IID>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Single<IID>
  - name: (
    nameWithType: (
    fullName: (
  - name: IID
    nameWithType: IID
    fullName: IID
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single``1(``0)
    name: Single(Of IID)
    nameWithType: BaseRepository(Of TEntity).Single(Of IID)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Single(Of IID)
  - name: (
    nameWithType: (
    fullName: (
  - name: IID
    nameWithType: IID
    fullName: IID
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single(System.String,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Single(System.String,System.Object)
  isExternal: true
  name: Single(String, Object)
  nameWithType: BaseRepository<TEntity>.Single(String, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Single(System.String, System.Object)
  nameWithType.vb: BaseRepository(Of TEntity).Single(String, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Single(System.String, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single(System.String,System.Object)
    name: Single
    nameWithType: BaseRepository<TEntity>.Single
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Single
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Single(System.String,System.Object)
    name: Single
    nameWithType: BaseRepository(Of TEntity).Single
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Single
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All``1(``0[])
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.All``1(``0[])
  name: All<TType>(TType[])
  nameWithType: BaseRepository<TEntity>.All<TType>(TType[])
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.All<TType>(TType[])
  nameWithType.vb: BaseRepository(Of TEntity).All(Of TType)(TType())
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).All(Of TType)(TType())
  name.vb: All(Of TType)(TType())
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All``1(``0[])
    name: All<TType>
    nameWithType: BaseRepository<TEntity>.All<TType>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.All<TType>
  - name: (
    nameWithType: (
    fullName: (
  - name: TType
    nameWithType: TType
    fullName: TType
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All``1(``0[])
    name: All(Of TType)
    nameWithType: BaseRepository(Of TEntity).All(Of TType)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).All(Of TType)
  - name: (
    nameWithType: (
    fullName: (
  - name: TType
    nameWithType: TType
    fullName: TType
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All(System.String,System.String,System.Int32,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.All(System.String,System.String,System.Int32,System.Object)
  isExternal: true
  name: All(String, String, Int32, Object)
  nameWithType: BaseRepository<TEntity>.All(String, String, Int32, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.All(System.String, System.String, System.Int32, System.Object)
  nameWithType.vb: BaseRepository(Of TEntity).All(String, String, Int32, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).All(System.String, System.String, System.Int32, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All(System.String,System.String,System.Int32,System.Object)
    name: All
    nameWithType: BaseRepository<TEntity>.All
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.All
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.All(System.String,System.String,System.Int32,System.Object)
    name: All
    nameWithType: BaseRepository(Of TEntity).All
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).All
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
  isExternal: true
  name: Paged(Int32, String, String, Int32, Int32, Object)
  nameWithType: BaseRepository<TEntity>.Paged(Int32, String, String, Int32, Int32, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Paged(System.Int32, System.String, System.String, System.Int32, System.Int32, System.Object)
  nameWithType.vb: BaseRepository(Of TEntity).Paged(Int32, String, String, Int32, Int32, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Paged(System.Int32, System.String, System.String, System.Int32, System.Int32, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
    name: Paged
    nameWithType: BaseRepository<TEntity>.Paged
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Paged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Paged(System.Int32@,System.String,System.String,System.Int32,System.Int32,System.Object)
    name: Paged
    nameWithType: BaseRepository(Of TEntity).Paged
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Paged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Insert``1(`0)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Insert``1(`0)
  name: Insert<Y>(TEntity)
  nameWithType: BaseRepository<TEntity>.Insert<Y>(TEntity)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Insert<Y>(TEntity)
  nameWithType.vb: BaseRepository(Of TEntity).Insert(Of Y)(TEntity)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Insert(Of Y)(TEntity)
  name.vb: Insert(Of Y)(TEntity)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Insert``1(`0)
    name: Insert<Y>
    nameWithType: BaseRepository<TEntity>.Insert<Y>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Insert<Y>
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Insert``1(`0)
    name: Insert(Of Y)
    nameWithType: BaseRepository(Of TEntity).Insert(Of Y)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Insert(Of Y)
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Update(`0)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Update(`0)
  name: Update(TEntity)
  nameWithType: BaseRepository<TEntity>.Update(TEntity)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Update(TEntity)
  nameWithType.vb: BaseRepository(Of TEntity).Update(TEntity)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Update(TEntity)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Update(`0)
    name: Update
    nameWithType: BaseRepository<TEntity>.Update
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Update(`0)
    name: Update
    nameWithType: BaseRepository(Of TEntity).Update
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Delete(`0)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Delete(`0)
  name: Delete(TEntity)
  nameWithType: BaseRepository<TEntity>.Delete(TEntity)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Delete(TEntity)
  nameWithType.vb: BaseRepository(Of TEntity).Delete(TEntity)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Delete(TEntity)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Delete(`0)
    name: Delete
    nameWithType: BaseRepository<TEntity>.Delete
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Delete(`0)
    name: Delete
    nameWithType: BaseRepository(Of TEntity).Delete
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Delete
  - name: (
    nameWithType: (
    fullName: (
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.DeleteById``1(``0)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.DeleteById``1(``0)
  name: DeleteById<Y>(Y)
  nameWithType: BaseRepository<TEntity>.DeleteById<Y>(Y)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.DeleteById<Y>(Y)
  nameWithType.vb: BaseRepository(Of TEntity).DeleteById(Of Y)(Y)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).DeleteById(Of Y)(Y)
  name.vb: DeleteById(Of Y)(Y)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.DeleteById``1(``0)
    name: DeleteById<Y>
    nameWithType: BaseRepository<TEntity>.DeleteById<Y>
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.DeleteById<Y>
  - name: (
    nameWithType: (
    fullName: (
  - name: Y
    nameWithType: Y
    fullName: Y
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.DeleteById``1(``0)
    name: DeleteById(Of Y)
    nameWithType: BaseRepository(Of TEntity).DeleteById(Of Y)
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).DeleteById(Of Y)
  - name: (
    nameWithType: (
    fullName: (
  - name: Y
    nameWithType: Y
    fullName: Y
  - name: )
    nameWithType: )
    fullName: )
- uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Count(System.String,System.Object)
  commentId: M:Dazzling.Studio.SqlRepository.BaseRepository`1.Count(System.String,System.Object)
  isExternal: true
  name: Count(String, Object)
  nameWithType: BaseRepository<TEntity>.Count(String, Object)
  fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Count(System.String, System.Object)
  nameWithType.vb: BaseRepository(Of TEntity).Count(String, Object)
  fullName.vb: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Count(System.String, System.Object)
  spec.csharp:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Count(System.String,System.Object)
    name: Count
    nameWithType: BaseRepository<TEntity>.Count
    fullName: Dazzling.Studio.SqlRepository.BaseRepository<TEntity>.Count
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Dazzling.Studio.SqlRepository.BaseRepository`1.Count(System.String,System.Object)
    name: Count
    nameWithType: BaseRepository(Of TEntity).Count
    fullName: Dazzling.Studio.SqlRepository.BaseRepository(Of TEntity).Count
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Uvendia.Domain.Repositories.UvendiaSettings.GetSettings*
  commentId: Overload:Uvendia.Domain.Repositories.UvendiaSettings.GetSettings
  name: GetSettings
  nameWithType: UvendiaSettings.GetSettings
  fullName: Uvendia.Domain.Repositories.UvendiaSettings.GetSettings
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Uvendia.Domain.Repositories.UvendiaSettings.Save*
  commentId: Overload:Uvendia.Domain.Repositories.UvendiaSettings.Save
  name: Save
  nameWithType: UvendiaSettings.Save
  fullName: Uvendia.Domain.Repositories.UvendiaSettings.Save
- uid: Uvendia.Domain.Repositories.UvendiaSettings.Get*
  commentId: Overload:Uvendia.Domain.Repositories.UvendiaSettings.Get
  name: Get
  nameWithType: UvendiaSettings.Get
  fullName: Uvendia.Domain.Repositories.UvendiaSettings.Get
- uid: Uvendia.Domain.Settings.SerializedSettings
  commentId: T:Uvendia.Domain.Settings.SerializedSettings
  parent: Uvendia.Domain.Settings
  name: SerializedSettings
  nameWithType: SerializedSettings
  fullName: Uvendia.Domain.Settings.SerializedSettings
- uid: Uvendia.Domain.Settings
  commentId: N:Uvendia.Domain.Settings
  name: Uvendia.Domain.Settings
  nameWithType: Uvendia.Domain.Settings
  fullName: Uvendia.Domain.Settings
